
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANLESS_EQUALGREATER_THANGREATER_EQUALleftEQUALNOT_EQUALTIPO_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSNOTTILDEAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID statements ENDfunction_list    :   function \n|   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END\n|   DEF ID opt_return_type NEWLINE statements ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   string_literal\n|   CHAR\n|   TRUE\n|   FALSEstring_literal   :   STRING\n|   STRING INTERP_START expression INTERP_END string_literalvariable_declaration :   ID COLON types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesfunction_call    :   ID LPAREN expression_list RPAREN\n|   ID LPAREN RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionstatements   :   statements_list statements_list  :   statements_list statements_base\n|   empty statements_base   :   statement NEWLINE\n|   statement SEMICOLONstatement    :   expression\n|   control_structure\n|   variable_declaration\n|   function_callcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement : IF if_condition statements opt_elsif opt_else ENDunless_statement : UNLESS if_condition statements opt_else ENDif_condition : expression\n| expression LBRACE statements RBRACEopt_elsif : elsif_list\n| emptyelsif_list : elsif_list elsif\n| elsifelsif : ELSIF if_condition statementsopt_else : ELSE statements\n| emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statementsuntil    :   UNTIL expression statementsloop :   LOOP statementsiterator :   expression DOT MULTI statements\n|   expression DOT EACH DO PIPE ID PIPE statements END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statementscase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements\n|   when_list WHEN expression statementsreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptyexpression   :   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expression\n|   ternary_expressionassignment_target    :   ID\n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   range_expression QMARK expression TCOLON expression\n|   range_expressionrange_expression :   logical_or_expression DOTDOT logical_or_expression\n|   logical_or_expression DOTDOTDOT logical_or_expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expression multiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   primary_expressionprimary_expression   :   LPAREN expression RPAREN\n|   array_literal\n|   literal\n|   IDarray_literal    :   LBRACKET opt_expression_list RBRACKETempty :'
    
_lr_action_items = {end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,71,96,97,98,100,101,108,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,238,239,240,277,],[0,-12,-13,-14,-15,-17,-20,-23,-25,-6,-7,-9,-8,-10,-11,-16,-19,-22,-26,-18,-2,-3,-4,-5,-21,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-1,-164,-172,-165,-166,-167,-24,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-28,-137,-67,-27,]),'STRING':([10,25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,196,198,205,206,207,208,209,211,212,213,216,218,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[24,63,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,63,63,-158,-162,63,63,-168,63,-170,-171,63,-60,-61,-62,-63,-64,-65,-66,63,-83,144,-38,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-164,-172,-165,63,-166,-167,63,-82,63,63,63,63,63,63,63,63,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,63,-84,-85,144,63,63,-174,-100,-174,-174,-174,144,63,-174,63,63,-174,63,-174,-174,-137,-67,63,63,63,-174,-174,63,63,-174,-174,-101,63,-174,-174,63,]),'ASSIGN':([11,34,36,37,77,78,121,137,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,221,223,224,234,265,],[25,72,-134,-135,-136,-134,196,212,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,244,-71,246,260,-72,]),'ID':([12,13,25,26,33,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,197,198,205,206,207,208,209,212,213,214,216,219,228,230,236,239,240,244,245,246,249,250,252,257,260,262,263,268,273,274,280,284,289,290,],[26,27,36,-174,-127,-133,-172,78,-138,-141,-142,-144,-146,-150,-155,97,97,-158,-162,97,97,-168,36,-170,-171,36,-60,-61,-62,-63,-64,-65,-66,121,-83,137,-38,36,36,36,36,36,36,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-164,-172,-165,97,-166,-167,36,-82,36,36,36,36,36,36,36,36,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,36,-84,-85,36,223,36,-174,-100,-174,-174,-174,36,-174,137,36,-174,36,-174,-174,-137,-67,36,223,36,36,-174,-174,36,36,278,279,-174,-174,-101,36,-174,-174,36,]),'UNDERSCORE':([25,26,33,35,36,38,39,40,41,42,43,44,45,48,49,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,96,97,98,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[37,-174,-127,-133,-172,37,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,37,-170,-171,37,-60,-61,-62,-63,-64,-65,-66,37,-83,-38,37,37,37,37,37,37,-164,-172,-165,-166,-167,37,-82,37,37,37,37,37,37,37,37,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,37,-84,-85,37,37,-174,-100,-174,-174,-174,37,-174,37,-174,37,-174,-174,-137,-67,37,37,37,-174,-174,37,37,-174,-174,-101,37,-174,-174,37,]),'ASTERISK':([25,26,33,35,36,38,39,40,41,42,43,44,45,48,49,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,96,97,98,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[38,-174,-127,-133,-172,38,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,38,-170,-171,38,-60,-61,-62,-63,-64,-65,-66,38,-83,-38,38,38,38,38,38,38,-164,-172,-165,-166,-167,38,-82,38,38,38,38,38,38,38,38,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,38,-84,-85,38,38,-174,-100,-174,-174,-174,38,-174,38,-174,38,-174,-174,-137,-67,38,38,38,-174,-174,38,38,-174,-174,-101,38,-174,-174,38,]),'PLUS':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,121,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[46,-174,-127,-133,-172,-138,-141,-142,-144,-146,91,-155,46,46,-158,-162,46,46,-168,46,-170,-171,46,-60,-61,-62,-63,-64,-65,-66,46,-83,-38,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-164,-172,-165,46,-166,-167,46,-82,-172,46,46,46,46,46,46,46,46,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,91,91,91,91,-156,-157,-159,-160,-161,-163,-169,-173,46,-84,-85,46,46,-174,-100,-174,-174,-174,46,-174,46,-174,46,-174,-174,-137,-67,46,46,46,-174,-174,46,46,-174,-174,-101,46,-174,-174,46,]),'MINUS':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,121,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[47,-174,-127,-133,-172,-138,-141,-142,-144,-146,92,-155,47,47,-158,-162,47,47,-168,47,-170,-171,47,-60,-61,-62,-63,-64,-65,-66,47,-83,-38,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-164,-172,-165,47,-166,-167,47,-82,-172,47,47,47,47,47,47,47,47,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,92,92,92,92,-156,-157,-159,-160,-161,-163,-169,-173,47,-84,-85,47,47,-174,-100,-174,-174,-174,47,-174,47,-174,47,-174,-174,-137,-67,47,47,47,-174,-174,47,47,-174,-174,-101,47,-174,-174,47,]),'EXCLAMATION':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[50,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,50,50,-158,-162,50,50,-168,50,-170,-171,50,-60,-61,-62,-63,-64,-65,-66,50,-83,-38,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-164,-172,-165,50,-166,-167,50,-82,50,50,50,50,50,50,50,50,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,50,-84,-85,50,50,-174,-100,-174,-174,-174,50,-174,50,-174,50,-174,-174,-137,-67,50,50,50,-174,-174,50,50,-174,-174,-101,50,-174,-174,50,]),'TILDE':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[51,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,51,51,-158,-162,51,51,-168,51,-170,-171,51,-60,-61,-62,-63,-64,-65,-66,51,-83,-38,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-164,-172,-165,51,-166,-167,51,-82,51,51,51,51,51,51,51,51,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,51,-84,-85,51,51,-174,-100,-174,-174,-174,51,-174,51,-174,51,-174,-174,-137,-67,51,51,51,-174,-174,51,51,-174,-174,-101,51,-174,-174,51,]),'LPAREN':([25,26,27,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,121,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[53,-174,67,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,53,53,-158,-162,53,53,-168,53,-170,-171,53,-60,-61,-62,-63,-64,-65,-66,53,-83,-38,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-164,-172,-165,53,-166,-167,53,-82,198,53,53,53,53,53,53,53,53,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,53,-84,-85,53,53,-174,-100,-174,-174,-174,53,-174,53,-174,53,-174,-174,-137,-67,53,53,53,-174,-174,53,53,-174,-174,-101,53,-174,-174,53,]),'LBRACKET':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[56,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,56,56,-158,-162,56,56,-168,56,-170,-171,56,-60,-61,-62,-63,-64,-65,-66,56,-83,-38,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-164,-172,-165,56,-166,-167,56,-82,56,56,56,56,56,56,56,56,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,56,-84,-85,56,56,-174,-100,-174,-174,-174,56,-174,56,-174,56,-174,-174,-137,-67,56,56,56,-174,-174,56,56,-174,-174,-101,56,-174,-174,56,]),'INTNUMBER':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[57,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,57,57,-158,-162,57,57,-168,57,-170,-171,57,-60,-61,-62,-63,-64,-65,-66,57,-83,-38,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-164,-172,-165,57,-166,-167,57,-82,57,57,57,57,57,57,57,57,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,57,-84,-85,57,57,-174,-100,-174,-174,-174,57,-174,57,-174,57,-174,-174,-137,-67,57,57,57,-174,-174,57,57,-174,-174,-101,57,-174,-174,57,]),'FLOATNUMBER':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[58,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,58,58,-158,-162,58,58,-168,58,-170,-171,58,-60,-61,-62,-63,-64,-65,-66,58,-83,-38,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-164,-172,-165,58,-166,-167,58,-82,58,58,58,58,58,58,58,58,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,58,-84,-85,58,58,-174,-100,-174,-174,-174,58,-174,58,-174,58,-174,-174,-137,-67,58,58,58,-174,-174,58,58,-174,-174,-101,58,-174,-174,58,]),'CHAR':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,196,198,205,206,207,208,209,211,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[60,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,60,60,-158,-162,60,60,-168,60,-170,-171,60,-60,-61,-62,-63,-64,-65,-66,60,-83,145,-38,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-164,-172,-165,60,-166,-167,60,-82,60,60,60,60,60,60,60,60,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,60,-84,-85,145,60,60,-174,-100,-174,-174,-174,145,60,-174,60,-174,60,-174,-174,-137,-67,60,60,60,-174,-174,60,60,-174,-174,-101,60,-174,-174,60,]),'TRUE':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[61,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,61,61,-158,-162,61,61,-168,61,-170,-171,61,-60,-61,-62,-63,-64,-65,-66,61,-83,-38,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-164,-172,-165,61,-166,-167,61,-82,61,61,61,61,61,61,61,61,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,61,-84,-85,61,61,-174,-100,-174,-174,-174,61,-174,61,-174,61,-174,-174,-137,-67,61,61,61,-174,-174,61,61,-174,-174,-101,61,-174,-174,61,]),'FALSE':([25,26,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,196,198,205,206,207,208,209,212,213,216,219,228,230,236,239,240,244,246,249,250,252,257,260,268,273,274,280,284,289,290,],[62,-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,62,62,-158,-162,62,62,-168,62,-170,-171,62,-60,-61,-62,-63,-64,-65,-66,62,-83,-38,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-164,-172,-165,62,-166,-167,62,-82,62,62,62,62,62,62,62,62,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,62,-84,-85,62,62,-174,-100,-174,-174,-174,62,-174,62,-174,62,-174,-174,-137,-67,62,62,62,-174,-174,62,62,-174,-174,-101,62,-174,-174,62,]),'CASE':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,128,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'RETURN':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,129,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'BREAK':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,130,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'NEXT':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,131,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'IF':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,132,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'UNLESS':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,133,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'WHILE':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,134,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'UNTIL':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,135,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'LOOP':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,70,96,97,98,100,101,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,208,209,213,219,230,236,239,240,250,252,268,273,274,284,289,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,136,-83,-38,-164,-172,-165,-166,-167,-82,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,-174,-174,-174,-174,-174,-137,-67,-174,-174,-174,-174,-101,-174,-174,]),'END':([26,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,70,96,97,98,100,101,109,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,213,215,227,229,231,236,239,240,248,250,251,252,253,254,255,256,259,261,268,269,270,271,272,273,274,281,283,284,288,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,108,-81,-83,-38,-164,-172,-165,-166,-167,-82,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,-174,238,-174,-174,-174,-174,-137,-67,267,-174,-108,-174,-174,-102,-103,-105,275,277,-174,-107,-120,282,-104,-174,-101,-121,-106,-174,291,]),'COLON':([27,121,137,213,],[69,195,211,69,]),'NEWLINE':([27,33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,68,70,96,97,98,100,101,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,200,201,202,203,204,208,209,210,219,222,226,232,233,239,240,241,247,264,267,275,282,286,287,289,291,292,293,],[-174,-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-81,-83,142,-38,-164,-172,-165,-166,-167,-82,192,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-172,-96,-97,-109,-110,-111,-112,-174,-174,-174,-174,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-122,-125,-126,-123,-124,-174,-174,-115,-174,-69,-76,-113,-114,-137,-67,-116,-75,-68,-119,-99,-98,-73,-70,-174,-117,-118,-74,]),'RPAREN':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,67,96,97,98,100,101,102,106,137,138,139,140,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,198,217,225,234,235,237,239,240,276,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-174,-164,-172,-165,-166,-167,188,-79,-33,213,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,226,-80,247,-34,-35,-32,-137,-67,-36,]),'COMMA':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,104,106,121,137,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,217,223,225,234,235,239,240,266,276,286,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,190,-79,197,-33,214,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-80,245,190,-34,-35,-137,-67,280,-36,290,]),'RBRACKET':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,56,57,58,59,60,61,62,63,96,97,98,100,101,103,104,105,106,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,217,239,240,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-174,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,189,-77,-78,-79,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-80,-137,-67,]),'DOT':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,111,121,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,239,240,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,194,-172,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-137,-67,]),'SEMICOLON':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,96,97,98,100,101,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,136,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,200,201,202,203,204,208,209,210,219,222,226,232,233,239,240,241,247,264,267,275,282,286,287,289,291,292,293,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-81,-83,-164,-172,-165,-166,-167,-82,193,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-172,-96,-97,-109,-110,-111,-112,-174,-174,-174,-174,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-122,-125,-126,-123,-124,-174,-174,-115,-174,-69,-76,-113,-114,-137,-67,-116,-75,-68,-119,-99,-98,-73,-70,-174,-117,-118,-74,]),'TCOLON':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,239,240,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-128,-129,-130,-131,-132,216,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-137,-67,]),'INTERP_END':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,239,240,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,218,-137,-67,]),'WHEN':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,96,97,98,100,101,109,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,199,227,239,240,252,268,270,281,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-81,-83,-164,-172,-165,-166,-167,-82,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,228,249,-137,-67,-174,-174,-120,-121,]),'LBRACE':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,206,220,239,240,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,230,243,-137,-67,]),'ELSIF':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,96,97,98,100,101,109,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,229,239,240,254,256,272,273,274,283,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-81,-83,-164,-172,-165,-166,-167,-82,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,257,-137,-67,257,-105,-104,-174,-101,-106,]),'ELSE':([33,35,36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,65,66,96,97,98,100,101,109,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,205,206,207,227,229,231,239,240,252,253,254,255,256,268,270,272,273,274,281,283,],[-127,-133,-172,-138,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-81,-83,-164,-172,-165,-166,-167,-82,-128,-129,-130,-131,-132,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-84,-85,-174,-100,-174,250,-174,250,-137,-67,-174,250,-102,-103,-105,-174,-120,-104,-174,-101,-121,-106,]),'PLUS_ASSIGN':([34,36,37,77,78,121,],[73,-134,-135,-136,-134,-134,]),'MINUS_ASSIGN':([34,36,37,77,78,121,],[74,-134,-135,-136,-134,-134,]),'MULTI_ASSIGN':([34,36,37,77,78,121,],[75,-134,-135,-136,-134,-134,]),'DIVIDE_ASSIGN':([34,36,37,77,78,121,],[76,-134,-135,-136,-134,-134,]),'POTENCIACAO':([36,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,184,185,186,187,188,189,240,],[-172,99,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,99,99,99,-163,-169,-173,-67,]),'MULTI':([36,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,182,183,184,185,186,187,188,189,194,240,],[-172,93,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,93,93,-159,-160,-161,-163,-169,-173,219,-67,]),'DIVIDE':([36,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,182,183,184,185,186,187,188,189,240,],[-172,94,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,94,94,-159,-160,-161,-163,-169,-173,-67,]),'MODULO':([36,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,182,183,184,185,186,187,188,189,240,],[-172,95,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,95,95,-159,-160,-161,-163,-169,-173,-67,]),'GREATER_THAN':([36,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,87,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,87,87,87,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'LESS_THAN':([36,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,88,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,88,88,88,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'GREATER_EQUAL':([36,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,89,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,89,89,89,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'LESS_EQUAL':([36,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,90,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,90,90,90,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'EQUAL':([36,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,84,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,84,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'NOT_EQUAL':([36,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,85,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,85,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'TIPO_EQUAL':([36,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,86,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,86,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'AND':([36,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,83,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,83,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'DOTDOT':([36,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,80,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'DOTDOTDOT':([36,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,81,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'OR':([36,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,82,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,82,82,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'QMARK':([36,39,40,41,42,43,44,45,48,49,52,54,55,57,58,59,60,61,62,63,96,97,98,100,101,121,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,240,],[-172,79,-141,-142,-144,-146,-150,-155,-158,-162,-168,-170,-171,-60,-61,-62,-63,-64,-65,-66,-164,-172,-165,-166,-167,-172,-139,-140,-143,-145,-147,-148,-149,-151,-152,-153,-154,-156,-157,-159,-160,-161,-163,-169,-173,-67,]),'INTERP_START':([63,],[107,]),'RBRACE':([65,66,109,192,193,230,258,285,],[-81,-83,-82,-84,-85,-174,274,289,]),'NIL':([69,195,211,],[146,146,146,]),'INT':([69,195,211,],[150,150,150,]),'INT8':([69,195,211,],[151,151,151,]),'INT16':([69,195,211,],[152,152,152,]),'INT32':([69,195,211,],[153,153,153,]),'INT64':([69,195,211,],[154,154,154,]),'INT128':([69,195,211,],[155,155,155,]),'UINT8':([69,195,211,],[156,156,156,]),'UINT16':([69,195,211,],[157,157,157,]),'UINT32':([69,195,211,],[158,158,158,]),'UINT64':([69,195,211,],[159,159,159,]),'UINT128':([69,195,211,],[160,160,160,]),'FLOAT':([69,195,211,],[161,161,161,]),'FLOAT32':([69,195,211,],[162,162,162,]),'FLOAT64':([69,195,211,],[163,163,163,]),'BOOL':([69,195,211,],[164,164,164,]),'EACH':([194,],[220,]),'DO':([220,],[242,]),'PIPE':([242,243,278,279,],[262,263,284,285,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,71,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,53,56,65,72,73,74,75,76,79,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[32,102,106,111,165,166,167,168,169,170,191,199,201,201,201,206,206,208,209,217,222,106,235,239,252,264,266,268,206,276,286,286,]),'assignment_expression':([25,53,56,65,72,73,74,75,76,79,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_target':([25,38,53,56,65,72,73,74,75,76,79,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[34,77,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ternary_expression':([25,53,56,65,72,73,74,75,76,79,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'range_expression':([25,53,56,65,72,73,74,75,76,79,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'logical_or_expression':([25,53,56,65,72,73,74,75,76,79,80,81,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[40,40,40,40,40,40,40,40,40,40,171,172,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'logical_and_expression':([25,53,56,65,72,73,74,75,76,79,80,81,82,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[41,41,41,41,41,41,41,41,41,41,41,41,173,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'equality_expression':([25,53,56,65,72,73,74,75,76,79,80,81,82,83,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[42,42,42,42,42,42,42,42,42,42,42,42,42,174,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'relational_expression':([25,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,175,176,177,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'additive_expression':([25,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,178,179,180,181,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'multiplicative_expression':([25,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,182,183,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'potenciacao_expression':([25,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,184,185,186,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'unary_expression':([25,46,47,50,51,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[49,96,98,100,101,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,187,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'primary_expression':([25,46,47,50,51,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'array_literal':([25,46,47,50,51,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'literal':([25,46,47,50,51,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,107,128,129,130,131,132,133,134,135,190,196,198,212,216,228,244,246,249,257,260,280,290,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'string_literal':([25,46,47,50,51,53,56,65,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,107,128,129,130,131,132,133,134,135,190,196,198,212,216,218,228,244,246,249,257,260,280,290,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,240,59,59,59,59,59,59,59,59,]),'statements':([26,136,142,205,207,208,209,219,230,236,250,252,268,273,284,289,],[64,210,215,229,231,232,233,241,258,261,269,270,281,283,288,292,]),'statements_list':([26,136,142,205,207,208,209,219,230,236,250,252,268,273,284,289,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'empty':([26,27,56,67,129,130,131,136,142,205,207,208,209,213,219,227,229,230,231,236,250,252,253,268,273,284,289,],[66,70,105,140,202,202,202,66,66,66,66,66,66,70,66,251,255,66,251,66,66,66,251,66,66,66,66,]),'opt_return_type':([27,213,],[68,236,]),'opt_expression_list':([56,],[103,]),'expression_list':([56,198,],[104,225,]),'statements_base':([65,],[109,]),'statement':([65,],[110,]),'control_structure':([65,],[112,]),'variable_declaration':([65,],[113,]),'function_call':([65,],[114,]),'conditional':([65,],[115,]),'loop_structure':([65,],[116,]),'case_structure':([65,],[117,]),'return_statement':([65,],[118,]),'break_statement':([65,],[119,]),'next_statement':([65,],[120,]),'if_statement':([65,],[122,]),'unless_statement':([65,],[123,]),'while':([65,],[124,]),'until':([65,],[125,]),'loop':([65,],[126,]),'iterator':([65,],[127,]),'opt_argument_list':([67,],[138,]),'argument_list':([67,214,],[139,237,]),'argument':([67,214,],[141,141,]),'types':([69,195,211,],[143,221,234,]),'integer':([69,195,211,],[147,147,147,]),'float':([69,195,211,],[148,148,148,]),'boolean':([69,195,211,],[149,149,149,]),'opt_expression':([129,130,131,],[200,203,204,]),'if_condition':([132,133,257,],[205,207,273,]),'list_of_identifiers':([197,245,],[224,265,]),'when_list':([199,],[227,]),'opt_else':([227,231,253,],[248,259,271,]),'opt_elsif':([229,],[253,]),'elsif_list':([229,],[254,]),'elsif':([229,254,],[256,272,]),'list_of_values':([280,290,],[287,293,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParser.py',25),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParser.py',26),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParser.py',27),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',28),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',29),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParser.py',30),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParser.py',31),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParser.py',32),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParser.py',33),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParser.py',34),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParser.py',35),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParser.py',36),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParser.py',37),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParser.py',38),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParser.py',39),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParser.py',80),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParser.py',81),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParser.py',88),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParser.py',93),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParser.py',94),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParser.py',102),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParser.py',108),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParser.py',109),
  ('module -> MODULE ID statements END','module',4,'p_module','ExpressionLanguageParser.py',117),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParser.py',122),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParser.py',123),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END','function',8,'p_function','ExpressionLanguageParser.py',131),
  ('function -> DEF ID opt_return_type NEWLINE statements END','function',6,'p_function','ExpressionLanguageParser.py',132),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',140),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',141),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParser.py',145),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParser.py',146),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParser.py',154),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParser.py',155),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParser.py',156),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParser.py',157),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParser.py',169),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParser.py',170),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParser.py',176),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParser.py',177),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParser.py',178),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParser.py',179),
  ('types -> float','types',1,'p_types','ExpressionLanguageParser.py',180),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParser.py',181),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParser.py',184),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParser.py',185),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParser.py',186),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParser.py',187),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParser.py',188),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParser.py',189),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParser.py',190),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParser.py',191),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParser.py',192),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParser.py',193),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParser.py',194),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParser.py',197),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParser.py',198),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParser.py',199),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParser.py',202),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',205),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',206),
  ('literal -> string_literal','literal',1,'p_literal','ExpressionLanguageParser.py',207),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParser.py',208),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParser.py',209),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParser.py',210),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','ExpressionLanguageParser.py',213),
  ('string_literal -> STRING INTERP_START expression INTERP_END string_literal','string_literal',5,'p_string_literal','ExpressionLanguageParser.py',214),
  ('variable_declaration -> ID COLON types ASSIGN expression','variable_declaration',5,'p_variable_declaration','ExpressionLanguageParser.py',218),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParser.py',219),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParser.py',220),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParser.py',223),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParser.py',224),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParser.py',227),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParser.py',228),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParser.py',232),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParser.py',233),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',236),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',237),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParser.py',240),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParser.py',241),
  ('statements -> statements_list','statements',1,'p_statements','ExpressionLanguageParser.py',246),
  ('statements_list -> statements_list statements_base','statements_list',2,'p_statements_list','ExpressionLanguageParser.py',249),
  ('statements_list -> empty','statements_list',1,'p_statements_list','ExpressionLanguageParser.py',250),
  ('statements_base -> statement NEWLINE','statements_base',2,'p_statements_base','ExpressionLanguageParser.py',253),
  ('statements_base -> statement SEMICOLON','statements_base',2,'p_statements_base','ExpressionLanguageParser.py',254),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParser.py',256),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParser.py',257),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParser.py',258),
  ('statement -> function_call','statement',1,'p_statement','ExpressionLanguageParser.py',259),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',262),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',263),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',264),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',265),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',266),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',267),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',270),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',271),
  ('if_statement -> IF if_condition statements opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParser.py',274),
  ('unless_statement -> UNLESS if_condition statements opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParser.py',277),
  ('if_condition -> expression','if_condition',1,'p_if_condition','ExpressionLanguageParser.py',280),
  ('if_condition -> expression LBRACE statements RBRACE','if_condition',4,'p_if_condition','ExpressionLanguageParser.py',281),
  ('opt_elsif -> elsif_list','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',284),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',285),
  ('elsif_list -> elsif_list elsif','elsif_list',2,'p_elsif_list','ExpressionLanguageParser.py',288),
  ('elsif_list -> elsif','elsif_list',1,'p_elsif_list','ExpressionLanguageParser.py',289),
  ('elsif -> ELSIF if_condition statements','elsif',3,'p_elsif','ExpressionLanguageParser.py',292),
  ('opt_else -> ELSE statements','opt_else',2,'p_opt_else','ExpressionLanguageParser.py',295),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParser.py',296),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',299),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',300),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',301),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',302),
  ('while -> WHILE expression statements','while',3,'p_while','ExpressionLanguageParser.py',305),
  ('until -> UNTIL expression statements','until',3,'p_until','ExpressionLanguageParser.py',308),
  ('loop -> LOOP statements','loop',2,'p_loop','ExpressionLanguageParser.py',311),
  ('iterator -> expression DOT MULTI statements','iterator',4,'p_iterator','ExpressionLanguageParser.py',315),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements END','iterator',9,'p_iterator','ExpressionLanguageParser.py',316),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements','iterator',9,'p_iterator','ExpressionLanguageParser.py',317),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParser.py',320),
  ('when_list -> WHEN expression statements','when_list',3,'p_when_list','ExpressionLanguageParser.py',323),
  ('when_list -> when_list WHEN expression statements','when_list',4,'p_when_list','ExpressionLanguageParser.py',324),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',327),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParser.py',330),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParser.py',333),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',336),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',337),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParser.py',341),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',344),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',345),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',346),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',347),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',348),
  ('assignment_expression -> ternary_expression','assignment_expression',1,'p_assignment_expression','ExpressionLanguageParser.py',349),
  ('assignment_target -> ID','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',354),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',355),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParser.py',356),
  ('ternary_expression -> range_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParser.py',359),
  ('ternary_expression -> range_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParser.py',360),
  ('range_expression -> logical_or_expression DOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',363),
  ('range_expression -> logical_or_expression DOTDOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',364),
  ('range_expression -> logical_or_expression','range_expression',1,'p_range_expression','ExpressionLanguageParser.py',365),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParser.py',368),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParser.py',369),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParser.py',372),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParser.py',373),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParser.py',376),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',377),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',378),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',379),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParser.py',382),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',383),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',384),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',385),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',386),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParser.py',389),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',390),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',391),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParser.py',394),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',395),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',396),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',397),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParser.py',400),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParser.py',401),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',407),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',408),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',409),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',410),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParser.py',411),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','ExpressionLanguageParser.py',418),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',419),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',420),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',421),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParser.py',424),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParser.py',428),
]
