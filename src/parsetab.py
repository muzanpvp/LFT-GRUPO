
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANLESS_EQUALGREATER_THANGREATER_EQUALleftEQUALNOT_EQUALTIPO_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSNOTTILDEAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID statements ENDfunction_list    :   function \n|   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END\n|   DEF ID opt_return_type NEWLINE statements ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   string_literal\n|   CHAR\n|   TRUE\n|   FALSEvariable_declaration :   ID types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesfunction_call    :   ID LPAREN expression_list RPAREN\n|   ID LPAREN RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionstatements   :   statement\n|   statement NEWLINE statementsstatement    :   expression\n|   control_structure\n|   variable_declaration\n|   function_callcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement : IF if_condition statements opt_elsif opt_else ENDunless_statement : UNLESS if_condition statements opt_else ENDif_condition : expression\n| expression LBRACE statements RBRACEopt_elsif : elsif_list\n| emptyelsif_list : elsif_list elsif\n| elsifelsif : ELSIF if_condition statementsopt_else : ELSE statements\n| emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statementsuntil    :   UNTIL expression statementsloop :   LOOP statementsiterator :   expression DOT MULTI statements\n|   expression DOT EACH DO PIPE ID PIPE statements END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statementscase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements\n|   when_list WHEN expression statementsreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptyexpression   :   ternary_expression\n|   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expressionassignment_target    :   postfix_expression\n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   logical_or_expression QMARK expression TCOLON expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expression multiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   postfix_expressionprimary_expression   :   expression_between_parentesis\n|   array_literal\n|   literal\n|   IDpostfix_expression   :   primary_expression postfix_suffixespostfix_suffixes :   postfix_suffix postfix_suffixes\n|   postfix_suffixpostfix_suffix   :   LBRACKET expression RBRACKET\n|   DOTDOT primary_expression\n|   DOTDOTDOT primary_expressionexpression_between_parentesis : LPAREN expression RPARENarray_literal    :   LBRACKET opt_expression_list RBRACKETstring_literal : STRING\n| STRING INTERP_START expression INTERP_END string_literalempty :'
    
_lr_action_items = {'REQUIRE':([0,6,24,],[10,10,-18,]),'CONSTANT':([0,2,6,7,20,24,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,262,263,],[11,11,-17,11,-16,-18,-21,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-132,-174,]),'MODULE':([0,2,3,6,7,8,14,20,21,24,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,162,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,262,263,],[12,12,12,-17,-20,12,12,-16,-19,-18,-21,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-24,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-132,-174,]),'DEF':([0,2,3,4,6,7,8,9,14,15,17,20,21,22,24,28,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,162,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,261,262,263,286,],[13,13,13,13,-17,-20,-23,13,13,13,13,-16,-19,-22,-18,13,-21,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-24,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-28,-132,-174,-27,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,97,111,112,130,131,132,135,136,162,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,261,262,263,286,],[0,-12,-13,-14,-15,-17,-20,-23,-25,-6,-7,-9,-8,-10,-11,-16,-19,-22,-26,-18,-2,-3,-4,-5,-21,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-1,-165,-167,-156,-160,-157,-158,-159,-24,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-28,-132,-174,-27,]),'STRING':([10,25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,84,85,86,87,88,89,90,91,92,95,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,229,230,231,234,235,237,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[24,60,60,-122,-123,-133,-134,-160,60,-136,-138,-161,-162,-163,-164,-142,60,60,-60,-61,-62,-63,-64,-65,-147,60,60,-173,-150,-154,60,60,141,60,60,60,60,60,60,60,60,60,141,-38,60,60,60,60,60,60,60,60,60,60,60,-165,-167,60,60,60,60,60,60,60,60,60,60,60,60,-156,-160,-157,60,60,-158,-159,60,60,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,60,60,-95,60,60,60,60,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,60,-151,-152,-153,-155,60,60,60,60,141,60,-175,60,-168,60,60,60,60,60,60,60,-132,-174,60,60,-96,60,60,60,60,60,]),'ASSIGN':([11,36,38,39,44,45,46,47,51,52,53,54,55,56,60,65,106,107,111,112,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,177,195,197,198,205,206,215,216,235,257,263,264,],[25,100,-129,-130,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,138,-131,-129,-165,-167,213,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,230,-166,-169,-170,-171,-172,-69,240,-168,277,-174,-70,]),'ID':([12,13,25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,93,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,232,234,235,239,240,246,247,249,254,259,262,263,266,267,269,274,275,277,279,289,291,293,],[26,27,47,65,-122,-123,-133,-134,-160,47,-136,-138,-161,-162,-163,-164,-142,47,47,-60,-61,-62,-63,-64,-65,-147,47,47,-173,-150,-154,47,47,47,47,47,47,47,47,47,47,65,177,-38,47,47,47,47,47,47,47,47,47,47,47,-165,-167,47,47,47,47,47,47,47,47,47,47,47,47,-156,-160,-157,47,47,-158,-159,47,215,47,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,65,65,-95,65,65,65,65,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,47,-151,-152,-153,-155,47,65,47,65,47,-175,177,47,-168,215,47,47,65,65,47,65,-132,-174,280,281,65,65,-96,47,47,65,47,65,]),'UNDERSCORE':([25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,84,85,86,87,88,89,90,91,92,96,98,100,101,102,103,104,111,112,113,130,131,132,133,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[39,39,-122,-123,-133,-134,-160,39,-136,-138,-161,-162,-163,-164,-142,39,39,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,39,39,39,39,39,39,39,39,39,-38,39,39,39,39,39,39,-165,-167,39,-156,-160,-157,39,-158,-159,39,39,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,39,39,-95,39,39,39,39,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,39,-151,-152,-153,-155,39,39,39,39,39,-175,39,-168,39,39,39,39,39,39,-132,-174,39,39,-96,39,39,39,39,39,]),'ASTERISK':([25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,84,85,86,87,88,89,90,91,92,96,98,100,101,102,103,104,111,112,113,130,131,132,133,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[40,40,-122,-123,-133,-134,-160,40,-136,-138,-161,-162,-163,-164,-142,40,40,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,40,40,40,40,40,40,40,40,40,-38,40,40,40,40,40,40,-165,-167,40,-156,-160,-157,40,-158,-159,40,40,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,40,40,-95,40,40,40,40,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,40,-151,-152,-153,-155,40,40,40,40,40,-175,40,-168,40,40,40,40,40,40,-132,-174,40,40,-96,40,40,40,40,40,]),'LPAREN':([25,26,27,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[49,49,93,-122,-123,-133,-134,-160,49,-136,-138,-161,-162,-163,-164,-142,49,49,-60,-61,-62,-63,-64,-65,-147,49,49,-173,-150,-154,49,49,140,49,49,49,49,49,49,49,49,49,-38,49,49,49,49,49,49,49,49,49,49,49,-165,-167,49,49,49,49,49,49,49,49,49,49,49,49,-156,-160,-157,49,49,-158,-159,49,49,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,49,49,-95,49,49,49,49,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,49,-151,-152,-153,-155,49,49,49,49,49,-175,49,-168,49,49,49,49,49,49,-132,-174,49,49,-96,49,49,49,49,49,]),'LBRACKET':([25,26,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[50,50,-122,-123,-133,-134,-160,50,-136,113,-138,-161,-162,-163,-164,-142,50,50,-60,-61,-62,-63,-64,-65,-147,50,50,-173,-150,-154,50,50,-164,50,50,50,50,50,50,50,50,50,-38,50,50,50,50,50,50,50,50,50,50,50,-165,113,50,50,50,50,50,50,50,50,50,50,50,50,-156,-160,-157,50,50,-158,-159,50,50,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,50,50,-95,50,50,50,50,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,50,-151,-152,-153,-155,50,50,50,50,50,-175,50,-168,50,50,50,50,50,50,-132,-174,50,50,-96,50,50,50,50,50,]),'INTNUMBER':([25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[51,51,-122,-123,-133,-134,-160,51,-136,-138,-161,-162,-163,-164,-142,51,51,-60,-61,-62,-63,-64,-65,-147,51,51,-173,-150,-154,51,51,51,51,51,51,51,51,51,51,51,-38,51,51,51,51,51,51,51,51,51,51,51,-165,-167,51,51,51,51,51,51,51,51,51,51,51,51,-156,-160,-157,51,51,-158,-159,51,51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,51,51,-95,51,51,51,51,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,51,-151,-152,-153,-155,51,51,51,51,51,-175,51,-168,51,51,51,51,51,51,-132,-174,51,51,-96,51,51,51,51,51,]),'FLOATNUMBER':([25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[52,52,-122,-123,-133,-134,-160,52,-136,-138,-161,-162,-163,-164,-142,52,52,-60,-61,-62,-63,-64,-65,-147,52,52,-173,-150,-154,52,52,52,52,52,52,52,52,52,52,52,-38,52,52,52,52,52,52,52,52,52,52,52,-165,-167,52,52,52,52,52,52,52,52,52,52,52,52,-156,-160,-157,52,52,-158,-159,52,52,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,52,52,-95,52,52,52,52,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,52,-151,-152,-153,-155,52,52,52,52,52,-175,52,-168,52,52,52,52,52,52,-132,-174,52,52,-96,52,52,52,52,52,]),'CHAR':([25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,84,85,86,87,88,89,90,91,92,95,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,229,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[54,54,-122,-123,-133,-134,-160,54,-136,-138,-161,-162,-163,-164,-142,54,54,-60,-61,-62,-63,-64,-65,-147,54,54,-173,-150,-154,54,54,142,54,54,54,54,54,54,54,54,54,142,-38,54,54,54,54,54,54,54,54,54,54,54,-165,-167,54,54,54,54,54,54,54,54,54,54,54,54,-156,-160,-157,54,54,-158,-159,54,54,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,54,54,-95,54,54,54,54,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,54,-151,-152,-153,-155,54,54,54,54,142,54,-175,54,-168,54,54,54,54,54,54,-132,-174,54,54,-96,54,54,54,54,54,]),'TRUE':([25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[55,55,-122,-123,-133,-134,-160,55,-136,-138,-161,-162,-163,-164,-142,55,55,-60,-61,-62,-63,-64,-65,-147,55,55,-173,-150,-154,55,55,55,55,55,55,55,55,55,55,55,-38,55,55,55,55,55,55,55,55,55,55,55,-165,-167,55,55,55,55,55,55,55,55,55,55,55,55,-156,-160,-157,55,55,-158,-159,55,55,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,55,55,-95,55,55,55,55,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,55,-151,-152,-153,-155,55,55,55,55,55,-175,55,-168,55,55,55,55,55,55,-132,-174,55,55,-96,55,55,55,55,55,]),'FALSE':([25,26,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[56,56,-122,-123,-133,-134,-160,56,-136,-138,-161,-162,-163,-164,-142,56,56,-60,-61,-62,-63,-64,-65,-147,56,56,-173,-150,-154,56,56,56,56,56,56,56,56,56,56,56,-38,56,56,56,56,56,56,56,56,56,56,56,-165,-167,56,56,56,56,56,56,56,56,56,56,56,56,-156,-160,-157,56,56,-158,-159,56,56,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,56,56,-95,56,56,56,56,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,56,-151,-152,-153,-155,56,56,56,56,56,-175,56,-168,56,56,56,56,56,56,-132,-174,56,56,-96,56,56,56,56,56,]),'PLUS':([25,26,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[58,58,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,120,58,58,-60,-61,-62,-63,-64,-65,-147,58,58,-173,-150,-154,58,58,58,58,58,58,58,58,58,58,58,-38,58,58,58,58,58,58,58,58,58,58,58,-165,-167,58,58,58,58,58,58,58,58,58,58,-156,-160,-157,58,58,-158,-159,58,58,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,58,58,-95,58,58,58,58,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,120,120,120,120,-148,-149,-171,-172,58,-151,-152,-153,-155,58,58,58,58,58,-175,58,-168,58,58,58,58,58,58,-132,-174,58,58,-96,58,58,58,58,58,]),'MINUS':([25,26,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[59,59,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,121,59,59,-60,-61,-62,-63,-64,-65,-147,59,59,-173,-150,-154,59,59,59,59,59,59,59,59,59,59,59,-38,59,59,59,59,59,59,59,59,59,59,59,-165,-167,59,59,59,59,59,59,59,59,59,59,-156,-160,-157,59,59,-158,-159,59,59,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,59,59,-95,59,59,59,59,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,121,121,121,121,-148,-149,-171,-172,59,-151,-152,-153,-155,59,59,59,59,59,-175,59,-168,59,59,59,59,59,59,-132,-174,59,59,-96,59,59,59,59,59,]),'EXCLAMATION':([25,26,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[63,63,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,63,63,-60,-61,-62,-63,-64,-65,-147,63,63,-173,-150,-154,63,63,63,63,63,63,63,63,63,63,63,-38,63,63,63,63,63,63,63,63,63,63,63,-165,-167,63,63,63,63,63,63,63,63,63,63,-156,-160,-157,63,63,-158,-159,63,63,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,63,63,-95,63,63,63,63,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,63,-151,-152,-153,-155,63,63,63,63,63,-175,63,-168,63,63,63,63,63,63,-132,-174,63,63,-96,63,63,63,63,63,]),'TILDE':([25,26,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,108,109,110,111,112,113,116,117,118,119,120,121,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,220,223,225,230,231,234,235,240,246,247,249,254,259,262,263,269,274,275,277,279,289,291,293,],[64,64,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,64,64,-60,-61,-62,-63,-64,-65,-147,64,64,-173,-150,-154,64,64,64,64,64,64,64,64,64,64,64,-38,64,64,64,64,64,64,64,64,64,64,64,-165,-167,64,64,64,64,64,64,64,64,64,64,-156,-160,-157,64,64,-158,-159,64,64,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,64,64,-95,64,64,64,64,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,64,-151,-152,-153,-155,64,64,64,64,64,-175,64,-168,64,64,64,64,64,64,-132,-174,64,64,-96,64,64,64,64,64,]),'CASE':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[84,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,84,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,84,84,-95,84,84,84,84,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,84,84,-175,-168,84,84,84,-132,-174,84,84,-96,84,84,]),'RETURN':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[85,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,85,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,85,85,-95,85,85,85,85,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,85,85,-175,-168,85,85,85,-132,-174,85,85,-96,85,85,]),'BREAK':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[86,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,86,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,86,86,-95,86,86,86,86,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,86,86,-175,-168,86,86,86,-132,-174,86,86,-96,86,86,]),'NEXT':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[87,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,87,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,87,87,-95,87,87,87,87,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,87,87,-175,-168,87,87,87,-132,-174,87,87,-96,87,87,]),'IF':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[88,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,88,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,88,88,-95,88,88,88,88,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,88,88,-175,-168,88,88,88,-132,-174,88,88,-96,88,88,]),'UNLESS':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[89,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,89,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,89,89,-95,89,89,89,89,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,89,89,-175,-168,89,89,89,-132,-174,89,89,-96,89,89,]),'WHILE':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[90,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,90,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,90,90,-95,90,90,90,90,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,90,90,-175,-168,90,90,90,-132,-174,90,90,-96,90,90,]),'UNTIL':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[91,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,91,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,91,91,-95,91,91,91,91,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,91,91,-175,-168,91,91,91,-132,-174,91,91,-96,91,91,]),'LOOP':([26,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,92,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,171,172,173,174,175,182,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,220,225,231,235,247,249,259,262,263,269,274,275,289,293,],[92,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,92,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,92,92,-95,92,92,92,92,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,92,92,-175,-168,92,92,92,-132,-174,92,92,-96,92,92,]),'COLON':([27,177,231,],[95,229,95,]),'NEWLINE':([27,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,94,96,111,112,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,176,183,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,214,218,219,227,228,235,238,241,242,262,263,268,276,283,287,288,294,295,296,],[-175,-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,163,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-104,-105,-106,-107,-175,-175,-175,182,-38,-165,-167,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-117,-120,-121,-118,-119,-110,-37,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-67,-74,-80,-108,-109,-168,-66,-73,-111,-132,-174,-114,-94,-93,-71,-68,-72,-112,-113,]),'DOT':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,68,111,112,130,131,132,135,136,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,262,263,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,164,-165,-167,-156,-160,-157,-158,-159,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-132,-174,]),'END':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,111,112,130,131,132,135,136,166,167,168,169,170,176,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,214,218,219,222,224,226,227,228,233,235,238,241,242,245,248,250,251,252,253,256,262,263,268,270,271,272,273,276,278,282,283,284,287,288,292,294,295,296,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,162,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-104,-105,-106,-107,-175,-175,-175,-165,-167,-156,-160,-157,-158,-159,-117,-120,-121,-118,-119,-110,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-67,-74,-80,-175,-175,-175,-108,-109,261,-168,-66,-73,-111,268,-103,-175,-97,-98,-100,276,-132,-174,-114,-102,-115,283,-99,-94,286,-116,-93,-101,-71,-68,295,-72,-112,-113,]),'RPAREN':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,93,111,112,122,126,130,131,132,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,177,178,179,180,181,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,217,235,236,257,258,260,262,263,285,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-175,-165,-167,205,-77,-156,-160,-157,-158,-159,218,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-33,231,-29,-30,-31,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,241,-168,-78,-34,-35,-32,-132,-174,-36,]),'COMMA':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,111,112,124,126,130,131,132,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,177,181,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,215,217,235,236,257,258,262,263,265,285,287,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,139,-165,-167,207,-77,-156,-160,-157,-158,-159,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-33,232,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,239,207,-168,-78,-34,-35,-132,-174,279,-36,291,]),'RBRACKET':([33,34,35,37,38,41,43,44,45,46,47,48,50,51,52,53,54,55,56,57,60,61,62,111,112,123,124,125,126,130,131,132,135,136,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,236,262,263,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-175,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,206,-75,-76,-77,-156,-160,-157,-158,-159,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,235,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-78,-132,-174,]),'WHEN':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,111,112,130,131,132,135,136,165,166,167,168,169,170,176,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,214,218,219,222,227,228,235,238,241,242,262,263,268,271,276,282,283,287,288,294,295,296,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-104,-105,-106,-107,-175,-175,-175,-165,-167,-156,-160,-157,-158,-159,223,-117,-120,-121,-118,-119,-110,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-67,-74,-80,246,-108,-109,-168,-66,-73,-111,-132,-174,-114,-115,-94,-116,-93,-71,-68,-72,-112,-113,]),'ELSIF':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,111,112,130,131,132,135,136,166,167,168,169,170,176,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,214,218,219,224,227,228,235,238,241,242,251,253,262,263,268,273,276,283,284,287,288,294,295,296,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-104,-105,-106,-107,-175,-175,-175,-165,-167,-156,-160,-157,-158,-159,-117,-120,-121,-118,-119,-110,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-67,-74,-80,254,-108,-109,-168,-66,-73,-111,254,-100,-132,-174,-114,-99,-94,-93,-101,-71,-68,-72,-112,-113,]),'ELSE':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,111,112,130,131,132,135,136,166,167,168,169,170,176,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,214,218,219,222,224,226,227,228,235,238,241,242,250,251,252,253,262,263,268,271,273,276,282,283,284,287,288,294,295,296,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-104,-105,-106,-107,-175,-175,-175,-165,-167,-156,-160,-157,-158,-159,-117,-120,-121,-118,-119,-110,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-67,-74,-80,247,-175,247,-108,-109,-168,-66,-73,-111,247,-97,-98,-100,-132,-174,-114,-115,-99,-94,-116,-93,-101,-71,-68,-72,-112,-113,]),'RBRACE':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,111,112,130,131,132,135,136,166,167,168,169,170,176,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,214,218,219,227,228,235,238,241,242,255,262,263,268,276,283,287,288,290,294,295,296,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-104,-105,-106,-107,-175,-175,-175,-165,-167,-156,-160,-157,-158,-159,-117,-120,-121,-118,-119,-110,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-67,-74,-80,-108,-109,-168,-66,-73,-111,275,-132,-174,-114,-94,-93,-71,-68,293,-72,-112,-113,]),'LBRACE':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,172,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,221,235,262,263,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,225,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,244,-168,-132,-174,]),'TCOLON':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,262,263,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,234,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-132,-174,]),'INTERP_END':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,235,262,263,],[-122,-123,-133,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-135,-124,-125,-126,-127,-128,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,237,-155,-168,-132,-174,]),'QMARK':([35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,185,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[98,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-135,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'OR':([35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,185,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[99,-134,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-135,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'PLUS_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,106,107,111,112,195,197,198,205,206,235,263,],[101,-129,-130,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,-131,-129,-165,-167,-166,-169,-170,-171,-172,-168,-174,]),'MINUS_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,106,107,111,112,195,197,198,205,206,235,263,],[102,-129,-130,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,-131,-129,-165,-167,-166,-169,-170,-171,-172,-168,-174,]),'MULTI_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,106,107,111,112,195,197,198,205,206,235,263,],[103,-129,-130,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,-131,-129,-165,-167,-166,-169,-170,-171,-172,-168,-174,]),'DIVIDE_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,106,107,111,112,195,197,198,205,206,235,263,],[104,-129,-130,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,-131,-129,-165,-167,-166,-169,-170,-171,-172,-168,-174,]),'AND':([37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,185,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[105,-160,-136,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,105,-137,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'POTENCIACAO':([38,44,45,46,47,51,52,53,54,55,56,60,61,62,111,112,130,131,132,135,136,195,197,198,205,206,208,209,210,212,235,263,],[-160,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,134,-154,-165,-167,-156,-160,-157,-158,-159,-166,-169,-170,-171,-172,134,134,134,-155,-168,-174,]),'MULTI':([38,44,45,46,47,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,164,195,197,198,203,204,205,206,208,209,210,212,235,263,],[-160,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,127,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,220,-166,-169,-170,127,127,-171,-172,-151,-152,-153,-155,-168,-174,]),'DIVIDE':([38,44,45,46,47,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,195,197,198,203,204,205,206,208,209,210,212,235,263,],[-160,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,128,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-166,-169,-170,128,128,-171,-172,-151,-152,-153,-155,-168,-174,]),'MODULO':([38,44,45,46,47,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,195,197,198,203,204,205,206,208,209,210,212,235,263,],[-160,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,129,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,-166,-169,-170,129,129,-171,-172,-151,-152,-153,-155,-168,-174,]),'GREATER_THAN':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[-160,116,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,116,116,116,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'LESS_THAN':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[-160,117,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,117,117,117,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'GREATER_EQUAL':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[-160,118,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,118,118,118,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'LESS_EQUAL':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[-160,119,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,119,119,119,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'EQUAL':([38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[-160,108,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,108,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'NOT_EQUAL':([38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[-160,109,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,109,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'TIPO_EQUAL':([38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,111,112,130,131,132,135,136,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,208,209,210,212,235,263,],[-160,110,-138,-161,-162,-163,-164,-142,-60,-61,-62,-63,-64,-65,-147,-173,-150,-154,-165,-167,-156,-160,-157,-158,-159,110,-139,-140,-141,-166,-169,-170,-143,-144,-145,-146,-148,-149,-171,-172,-151,-152,-153,-155,-168,-174,]),'DOTDOT':([42,44,45,46,47,51,52,53,54,55,56,60,65,112,197,198,205,206,235,263,],[114,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,-164,114,-169,-170,-171,-172,-168,-174,]),'DOTDOTDOT':([42,44,45,46,47,51,52,53,54,55,56,60,65,112,197,198,205,206,235,263,],[115,-161,-162,-163,-164,-60,-61,-62,-63,-64,-65,-173,-164,115,-169,-170,-171,-172,-168,-174,]),'INTERP_START':([60,],[133,]),'NIL':([65,95,229,],[143,143,143,]),'INT':([65,95,229,],[147,147,147,]),'INT8':([65,95,229,],[148,148,148,]),'INT16':([65,95,229,],[149,149,149,]),'INT32':([65,95,229,],[150,150,150,]),'INT64':([65,95,229,],[151,151,151,]),'INT128':([65,95,229,],[152,152,152,]),'UINT8':([65,95,229,],[153,153,153,]),'UINT16':([65,95,229,],[154,154,154,]),'UINT32':([65,95,229,],[155,155,155,]),'UINT64':([65,95,229,],[156,156,156,]),'UINT128':([65,95,229,],[157,157,157,]),'FLOAT':([65,95,229,],[158,158,158,]),'FLOAT32':([65,95,229,],[159,159,159,]),'FLOAT64':([65,95,229,],[160,160,160,]),'BOOL':([65,95,229,],[161,161,161,]),'EACH':([164,],[221,]),'DO':([221,],[243,]),'PIPE':([243,244,280,281,],[266,267,289,290,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,97,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,100,101,102,103,104,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[32,68,122,126,165,167,167,167,172,172,174,175,68,184,186,187,188,189,190,196,211,214,126,68,68,68,68,68,68,236,238,68,249,68,258,262,265,269,68,68,172,68,68,68,285,287,68,287,68,]),'ternary_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,100,101,102,103,104,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,100,101,102,103,104,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'logical_or_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,100,101,102,103,104,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assignment_target':([25,26,40,49,50,84,85,86,87,88,89,90,91,92,98,100,101,102,103,104,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[36,36,106,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'logical_and_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,185,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'postfix_expression':([25,26,40,49,50,58,59,63,64,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,116,117,118,119,120,121,127,128,129,133,134,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[38,38,107,38,38,131,131,131,131,38,38,38,38,38,38,38,38,38,38,131,38,38,38,38,38,131,131,131,131,38,131,131,131,131,131,131,131,131,131,38,131,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'equality_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,191,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'primary_expression':([25,26,40,49,50,58,59,63,64,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,114,115,116,117,118,119,120,121,127,128,129,133,134,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,197,198,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'relational_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,192,193,194,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expression_between_parentesis':([25,26,40,49,50,58,59,63,64,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,114,115,116,117,118,119,120,121,127,128,129,133,134,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'array_literal':([25,26,40,49,50,58,59,63,64,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,114,115,116,117,118,119,120,121,127,128,129,133,134,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'literal':([25,26,40,49,50,58,59,63,64,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,114,115,116,117,118,119,120,121,127,128,129,133,134,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'additive_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,116,117,118,119,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,199,200,201,202,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'string_literal':([25,26,40,49,50,58,59,63,64,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,114,115,116,117,118,119,120,121,127,128,129,133,134,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,237,240,246,247,249,254,259,269,274,277,279,289,291,293,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,263,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'multiplicative_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,116,117,118,119,120,121,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,203,204,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'potenciacao_expression':([25,26,49,50,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,116,117,118,119,120,121,127,128,129,133,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,208,209,210,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'unary_expression':([25,26,49,50,58,59,63,64,84,85,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,108,109,110,113,116,117,118,119,120,121,127,128,129,133,134,138,140,163,171,173,174,175,182,207,213,220,223,225,230,234,240,246,247,249,254,259,269,274,277,279,289,291,293,],[62,62,62,62,130,132,135,136,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,212,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'statements':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[66,176,219,224,226,227,228,233,242,255,270,271,278,282,284,292,296,]),'statement':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'control_structure':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'variable_declaration':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'function_call':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'conditional':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'loop_structure':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'case_structure':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'return_statement':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'break_statement':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'next_statement':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'if_statement':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'unless_statement':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'while':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'until':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'loop':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'iterator':([26,92,163,171,173,174,175,182,220,225,247,249,259,269,274,289,293,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'opt_return_type':([27,231,],[94,259,]),'empty':([27,50,85,86,87,93,222,224,226,231,250,],[96,125,168,168,168,180,248,252,248,96,248,]),'postfix_suffixes':([42,112,],[111,195,]),'postfix_suffix':([42,112,],[112,112,]),'opt_expression_list':([50,],[123,]),'expression_list':([50,140,],[124,217,]),'types':([65,95,229,],[137,183,257,]),'integer':([65,95,229,],[144,144,144,]),'float':([65,95,229,],[145,145,145,]),'boolean':([65,95,229,],[146,146,146,]),'opt_expression':([85,86,87,],[166,169,170,]),'if_condition':([88,89,254,],[171,173,274,]),'opt_argument_list':([93,],[178,]),'argument_list':([93,232,],[179,260,]),'argument':([93,232,],[181,181,]),'list_of_identifiers':([139,239,],[216,264,]),'when_list':([165,],[222,]),'opt_else':([222,226,250,],[245,256,272,]),'opt_elsif':([224,],[250,]),'elsif_list':([224,],[251,]),'elsif':([224,251,],[253,273,]),'list_of_values':([279,291,],[288,294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParse.py',24),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParse.py',25),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParse.py',26),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',27),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',28),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParse.py',29),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParse.py',30),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParse.py',31),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParse.py',32),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParse.py',33),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParse.py',34),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParse.py',35),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParse.py',36),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParse.py',37),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParse.py',38),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParse.py',41),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParse.py',42),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParse.py',45),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParse.py',48),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParse.py',49),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParse.py',52),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParse.py',55),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParse.py',56),
  ('module -> MODULE ID statements END','module',4,'p_module','ExpressionLanguageParse.py',59),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParse.py',63),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParse.py',64),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END','function',8,'p_function','ExpressionLanguageParse.py',67),
  ('function -> DEF ID opt_return_type NEWLINE statements END','function',6,'p_function','ExpressionLanguageParse.py',68),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',71),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',72),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParse.py',74),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParse.py',75),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParse.py',78),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParse.py',79),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParse.py',80),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParse.py',81),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParse.py',84),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParse.py',85),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParse.py',88),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParse.py',89),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParse.py',90),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParse.py',91),
  ('types -> float','types',1,'p_types','ExpressionLanguageParse.py',92),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParse.py',93),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParse.py',96),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParse.py',97),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParse.py',98),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParse.py',99),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParse.py',100),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParse.py',101),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParse.py',102),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParse.py',103),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParse.py',104),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParse.py',105),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParse.py',106),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParse.py',109),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParse.py',110),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParse.py',111),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParse.py',114),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',117),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',118),
  ('literal -> string_literal','literal',1,'p_literal','ExpressionLanguageParse.py',119),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParse.py',120),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParse.py',121),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParse.py',122),
  ('variable_declaration -> ID types ASSIGN expression','variable_declaration',4,'p_variable_declaration','ExpressionLanguageParse.py',127),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParse.py',128),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParse.py',129),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParse.py',132),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParse.py',133),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParse.py',136),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParse.py',137),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParse.py',143),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParse.py',144),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',147),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',148),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParse.py',151),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParse.py',152),
  ('statements -> statement','statements',1,'p_statements','ExpressionLanguageParse.py',157),
  ('statements -> statement NEWLINE statements','statements',3,'p_statements','ExpressionLanguageParse.py',158),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParse.py',161),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParse.py',162),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParse.py',163),
  ('statement -> function_call','statement',1,'p_statement','ExpressionLanguageParse.py',164),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',167),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',168),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',169),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',170),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',171),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',172),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',175),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',176),
  ('if_statement -> IF if_condition statements opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParse.py',180),
  ('unless_statement -> UNLESS if_condition statements opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParse.py',183),
  ('if_condition -> expression','if_condition',1,'p_if_condition','ExpressionLanguageParse.py',186),
  ('if_condition -> expression LBRACE statements RBRACE','if_condition',4,'p_if_condition','ExpressionLanguageParse.py',187),
  ('opt_elsif -> elsif_list','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParse.py',190),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParse.py',191),
  ('elsif_list -> elsif_list elsif','elsif_list',2,'p_elsif_list','ExpressionLanguageParse.py',194),
  ('elsif_list -> elsif','elsif_list',1,'p_elsif_list','ExpressionLanguageParse.py',195),
  ('elsif -> ELSIF if_condition statements','elsif',3,'p_elsif','ExpressionLanguageParse.py',198),
  ('opt_else -> ELSE statements','opt_else',2,'p_opt_else','ExpressionLanguageParse.py',201),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParse.py',202),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',205),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',206),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',207),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',208),
  ('while -> WHILE expression statements','while',3,'p_while','ExpressionLanguageParse.py',211),
  ('until -> UNTIL expression statements','until',3,'p_until','ExpressionLanguageParse.py',214),
  ('loop -> LOOP statements','loop',2,'p_loop','ExpressionLanguageParse.py',217),
  ('iterator -> expression DOT MULTI statements','iterator',4,'p_iterator','ExpressionLanguageParse.py',221),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements END','iterator',9,'p_iterator','ExpressionLanguageParse.py',222),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements','iterator',9,'p_iterator','ExpressionLanguageParse.py',223),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParse.py',226),
  ('when_list -> WHEN expression statements','when_list',3,'p_when_list','ExpressionLanguageParse.py',229),
  ('when_list -> when_list WHEN expression statements','when_list',4,'p_when_list','ExpressionLanguageParse.py',230),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParse.py',233),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParse.py',236),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParse.py',239),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',242),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',243),
  ('expression -> ternary_expression','expression',1,'p_expression','ExpressionLanguageParse.py',247),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParse.py',248),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',252),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',253),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',254),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',255),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',256),
  ('assignment_target -> postfix_expression','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',259),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',260),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParse.py',261),
  ('ternary_expression -> logical_or_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParse.py',264),
  ('ternary_expression -> logical_or_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParse.py',265),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParse.py',268),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParse.py',269),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParse.py',272),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParse.py',273),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParse.py',276),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',277),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',278),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',279),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParse.py',282),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',283),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',284),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',285),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',286),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParse.py',289),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',290),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',291),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParse.py',295),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',296),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',297),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',298),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParse.py',301),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParse.py',302),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',305),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',306),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',307),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',308),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParse.py',309),
  ('primary_expression -> expression_between_parentesis','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',313),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',314),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',315),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',316),
  ('postfix_expression -> primary_expression postfix_suffixes','postfix_expression',2,'p_postfix_expression','ExpressionLanguageParse.py',320),
  ('postfix_suffixes -> postfix_suffix postfix_suffixes','postfix_suffixes',2,'p_postfix_suffixes','ExpressionLanguageParse.py',323),
  ('postfix_suffixes -> postfix_suffix','postfix_suffixes',1,'p_postfix_suffixes','ExpressionLanguageParse.py',324),
  ('postfix_suffix -> LBRACKET expression RBRACKET','postfix_suffix',3,'p_postfix_suffix','ExpressionLanguageParse.py',327),
  ('postfix_suffix -> DOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',328),
  ('postfix_suffix -> DOTDOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',329),
  ('expression_between_parentesis -> LPAREN expression RPAREN','expression_between_parentesis',3,'p_expression_between_parentesis','ExpressionLanguageParse.py',333),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParse.py',336),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','ExpressionLanguageParse.py',339),
  ('string_literal -> STRING INTERP_START expression INTERP_END string_literal','string_literal',5,'p_string_literal','ExpressionLanguageParse.py',340),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParse.py',344),
]
