
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNPLUS_ASSIGNMINUS_ASSIGNMULTI_ASSIGNDIVIDE_ASSIGNMODULO_ASSIGNrightQMARKTCOLONleftORleftANDnonassocEQUALNOT_EQUALTIPO_EQUALnonassocGREATER_THANLESS_THANGREATER_EQUALLESS_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSEXCLAMATIONTILDEnonassocDOTDOTDOTDOTDOTleftDOTleftLBRACKETRBRACKETAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID NEWLINE statements ENDfunction_list    :   function function_list\n|   functionfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements_block END\n|   DEF ID opt_return_type NEWLINE statements_block ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   string_literal\n|   CHAR\n|   TRUE\n|   FALSEfunction_call    :   ID LPAREN expression_list RPAREN\n|   ID LPAREN RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionvariable_declaration :   ID types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesexpression   :   ternary_expression\n|   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expressionassignment_target    :   postfix_expression\n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   logical_or_expression QMARK expression TCOLON expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expressionmultiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   postfix_expressionpostfix_expression   :   primary_expression postfix_suffixespostfix_suffixes :   postfix_suffix postfix_suffixes\n|   postfix_suffixpostfix_suffix   :   LBRACKET expression RBRACKET\n|   DOTDOT primary_expression\n|   DOTDOTDOT primary_expressionprimary_expression   :   expression_between_parentesis\n|   array_literal\n|   literal\n|   function_call\n|   IDexpression_between_parentesis : LPAREN expression RPARENarray_literal    :   LBRACKET opt_expression_list RBRACKETstring_literal : STRING\n| STRING INTERP_START expression INTERP_END string_literalstatements   :   statement\n|   statement NEWLINE statementsstatement    :   expression\n|   control_structure\n|   variable_declarationcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement :   IF expression statements_block opt_elsif opt_else ENDunless_statement :   UNLESS expression statements_block opt_else ENDopt_elsif    :   ELSIF expression statements_block opt_elsif\n| emptyopt_else :   ELSE statements_block\n|   emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statements_blockuntil    :   UNTIL expression statements_blockloop :   LOOP statements_blockiterator :   expression DOT MULTI statements_block\n|   expression DOT EACH DO PIPE ID PIPE statements_block END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements_blockcase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements_block\n|   when_list WHEN expression statements_blockreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptystatements_block :   statementsempty :'
    
_lr_action_items = {'REQUIRE':([0,6,24,],[10,10,-18,]),'CONSTANT':([0,2,6,7,20,24,32,33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,244,245,],[11,11,-17,11,-16,-18,-21,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-89,-132,]),'MODULE':([0,2,3,6,7,8,14,20,21,24,32,33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,201,222,223,244,245,],[12,12,12,-17,-20,12,12,-16,-19,-18,-21,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-24,-121,-66,-89,-132,]),'DEF':([0,2,3,4,6,7,8,9,14,15,17,20,21,22,24,28,32,33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,201,222,223,243,244,245,275,],[13,13,13,13,-17,-20,-23,13,13,13,13,-16,-19,-22,-18,13,-21,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-24,-121,-66,-28,-89,-132,-27,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,71,85,86,105,106,107,110,111,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,201,222,223,243,244,245,275,],[0,-12,-13,-14,-15,-17,-20,-23,-26,-6,-7,-9,-8,-10,-11,-16,-19,-22,-25,-18,-2,-3,-4,-5,-21,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-1,-118,-120,-113,-117,-114,-115,-116,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-24,-121,-66,-28,-89,-132,-27,]),'STRING':([10,25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,112,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,216,217,218,221,222,223,225,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[24,61,-79,-80,-90,-91,-117,61,-93,-95,-124,-125,-126,-127,-128,-99,61,61,-60,-61,-62,-63,-64,-65,-104,61,61,-131,-107,-111,61,61,61,146,-38,61,61,61,61,61,61,61,61,61,61,61,-118,-120,61,61,61,61,61,61,61,61,61,61,61,61,61,-113,-117,-114,61,61,-115,-116,146,61,61,61,61,61,61,61,61,61,61,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,61,-108,-109,-110,-112,61,61,61,61,61,61,146,61,-171,61,-121,-66,61,61,61,61,61,-89,-132,61,61,61,61,61,61,61,61,61,61,61,61,]),'ASSIGN':([11,36,38,39,44,45,46,47,48,52,53,54,55,56,57,61,80,81,85,86,112,139,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,178,180,181,187,190,191,198,222,223,228,229,239,245,263,],[25,74,-86,-87,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,-88,-86,-118,-120,199,217,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-119,-122,-123,-67,-129,-130,226,-121,-66,-75,248,261,-132,-76,]),'ID':([12,13,25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,200,202,210,211,212,213,217,218,219,221,222,223,226,231,234,241,244,245,247,248,253,254,256,258,261,265,266,268,272,276,284,287,289,],[26,27,48,-79,-80,-90,-91,-117,48,-93,-95,-124,-125,-126,-127,-128,-99,48,48,-60,-61,-62,-63,-64,-65,-104,48,48,-131,-107,-111,48,48,112,139,-38,48,48,48,48,48,48,48,48,48,48,48,-118,-120,48,48,48,48,48,48,48,48,48,48,48,48,48,-113,-117,-114,48,48,-115,-116,48,48,48,48,48,48,48,48,112,112,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,48,-108,-109,-110,-112,48,228,112,112,112,112,112,48,-171,139,48,-121,-66,48,112,48,112,-89,-132,228,48,48,112,112,48,48,277,278,112,112,48,112,48,112,]),'UNDERSCORE':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,70,72,74,75,76,77,78,85,86,87,94,105,106,107,108,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[39,-79,-80,-90,-91,-117,39,-93,-95,-124,-125,-126,-127,-128,-99,39,39,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,39,-38,39,39,39,39,39,39,-118,-120,39,39,-113,-117,-114,39,-115,-116,39,39,39,39,39,39,39,39,39,39,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,39,-108,-109,-110,-112,39,39,39,39,39,39,39,-171,39,-121,-66,39,39,39,39,-89,-132,39,39,39,39,39,39,39,39,39,39,39,39,]),'ASTERISK':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,70,72,74,75,76,77,78,85,86,87,94,105,106,107,108,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[40,-79,-80,-90,-91,-117,40,-93,-95,-124,-125,-126,-127,-128,-99,40,40,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,40,-38,40,40,40,40,40,40,-118,-120,40,40,-113,-117,-114,40,-115,-116,40,40,40,40,40,40,40,40,40,40,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,40,-108,-109,-110,-112,40,40,40,40,40,40,40,-171,40,-121,-66,40,40,40,40,-89,-132,40,40,40,40,40,40,40,40,40,40,40,40,]),'LPAREN':([25,27,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,112,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[50,67,-79,-80,-90,-91,-117,50,-93,-95,-124,-125,-126,-127,94,-99,50,50,-60,-61,-62,-63,-64,-65,-104,50,50,-131,-107,-111,50,50,50,-38,50,50,50,50,50,50,50,50,50,50,50,-118,-120,50,50,50,50,50,50,50,50,50,50,50,50,50,-113,-117,-114,50,50,-115,-116,94,50,50,50,50,50,50,50,50,50,50,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,50,-108,-109,-110,-112,50,50,50,50,50,50,50,-171,50,-121,-66,50,50,50,50,-89,-132,50,50,50,50,50,50,50,50,50,50,50,50,]),'LBRACKET':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,112,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[51,-79,-80,-90,-91,-117,51,-93,87,-95,-124,-125,-126,-127,-128,-99,51,51,-60,-61,-62,-63,-64,-65,-104,51,51,-131,-107,-111,51,51,51,-38,51,51,51,51,51,51,51,51,51,51,51,-118,87,51,51,51,51,51,51,51,51,51,51,51,51,51,-113,-117,-114,51,51,-115,-116,-128,51,51,51,51,51,51,51,51,51,51,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,51,-108,-109,-110,-112,51,51,51,51,51,51,51,-171,51,-121,-66,51,51,51,51,-89,-132,51,51,51,51,51,51,51,51,51,51,51,51,]),'INTNUMBER':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[52,-79,-80,-90,-91,-117,52,-93,-95,-124,-125,-126,-127,-128,-99,52,52,-60,-61,-62,-63,-64,-65,-104,52,52,-131,-107,-111,52,52,52,-38,52,52,52,52,52,52,52,52,52,52,52,-118,-120,52,52,52,52,52,52,52,52,52,52,52,52,52,-113,-117,-114,52,52,-115,-116,52,52,52,52,52,52,52,52,52,52,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,52,-108,-109,-110,-112,52,52,52,52,52,52,52,-171,52,-121,-66,52,52,52,52,-89,-132,52,52,52,52,52,52,52,52,52,52,52,52,]),'FLOATNUMBER':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[53,-79,-80,-90,-91,-117,53,-93,-95,-124,-125,-126,-127,-128,-99,53,53,-60,-61,-62,-63,-64,-65,-104,53,53,-131,-107,-111,53,53,53,-38,53,53,53,53,53,53,53,53,53,53,53,-118,-120,53,53,53,53,53,53,53,53,53,53,53,53,53,-113,-117,-114,53,53,-115,-116,53,53,53,53,53,53,53,53,53,53,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,53,-108,-109,-110,-112,53,53,53,53,53,53,53,-171,53,-121,-66,53,53,53,53,-89,-132,53,53,53,53,53,53,53,53,53,53,53,53,]),'CHAR':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,112,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,216,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[55,-79,-80,-90,-91,-117,55,-93,-95,-124,-125,-126,-127,-128,-99,55,55,-60,-61,-62,-63,-64,-65,-104,55,55,-131,-107,-111,55,55,55,147,-38,55,55,55,55,55,55,55,55,55,55,55,-118,-120,55,55,55,55,55,55,55,55,55,55,55,55,55,-113,-117,-114,55,55,-115,-116,147,55,55,55,55,55,55,55,55,55,55,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,55,-108,-109,-110,-112,55,55,55,55,55,55,147,55,-171,55,-121,-66,55,55,55,55,-89,-132,55,55,55,55,55,55,55,55,55,55,55,55,]),'TRUE':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[56,-79,-80,-90,-91,-117,56,-93,-95,-124,-125,-126,-127,-128,-99,56,56,-60,-61,-62,-63,-64,-65,-104,56,56,-131,-107,-111,56,56,56,-38,56,56,56,56,56,56,56,56,56,56,56,-118,-120,56,56,56,56,56,56,56,56,56,56,56,56,56,-113,-117,-114,56,56,-115,-116,56,56,56,56,56,56,56,56,56,56,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,56,-108,-109,-110,-112,56,56,56,56,56,56,56,-171,56,-121,-66,56,56,56,56,-89,-132,56,56,56,56,56,56,56,56,56,56,56,56,]),'FALSE':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[57,-79,-80,-90,-91,-117,57,-93,-95,-124,-125,-126,-127,-128,-99,57,57,-60,-61,-62,-63,-64,-65,-104,57,57,-131,-107,-111,57,57,57,-38,57,57,57,57,57,57,57,57,57,57,57,-118,-120,57,57,57,57,57,57,57,57,57,57,57,57,57,-113,-117,-114,57,57,-115,-116,57,57,57,57,57,57,57,57,57,57,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,57,-108,-109,-110,-112,57,57,57,57,57,57,57,-171,57,-121,-66,57,57,57,57,-89,-132,57,57,57,57,57,57,57,57,57,57,57,57,]),'PLUS':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[59,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,95,59,59,-60,-61,-62,-63,-64,-65,-104,59,59,-131,-107,-111,59,59,59,-38,59,59,59,59,59,59,59,59,59,59,59,-118,-120,59,59,59,59,59,59,59,59,59,59,59,-113,-117,-114,59,59,-115,-116,59,59,59,59,59,59,59,59,59,59,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,95,95,95,95,-67,-105,-106,-129,-130,59,-108,-109,-110,-112,59,59,59,59,59,59,59,-171,59,-121,-66,59,59,59,59,-89,-132,59,59,59,59,59,59,59,59,59,59,59,59,]),'MINUS':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[60,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,96,60,60,-60,-61,-62,-63,-64,-65,-104,60,60,-131,-107,-111,60,60,60,-38,60,60,60,60,60,60,60,60,60,60,60,-118,-120,60,60,60,60,60,60,60,60,60,60,60,-113,-117,-114,60,60,-115,-116,60,60,60,60,60,60,60,60,60,60,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,96,96,96,96,-67,-105,-106,-129,-130,60,-108,-109,-110,-112,60,60,60,60,60,60,60,-171,60,-121,-66,60,60,60,60,-89,-132,60,60,60,60,60,60,60,60,60,60,60,60,]),'EXCLAMATION':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[64,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,64,64,-60,-61,-62,-63,-64,-65,-104,64,64,-131,-107,-111,64,64,64,-38,64,64,64,64,64,64,64,64,64,64,64,-118,-120,64,64,64,64,64,64,64,64,64,64,64,-113,-117,-114,64,64,-115,-116,64,64,64,64,64,64,64,64,64,64,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,64,-108,-109,-110,-112,64,64,64,64,64,64,64,-171,64,-121,-66,64,64,64,64,-89,-132,64,64,64,64,64,64,64,64,64,64,64,64,]),'TILDE':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,82,83,84,85,86,87,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,202,210,211,212,213,217,218,221,222,223,226,231,234,241,244,245,248,253,254,256,258,261,268,272,276,284,287,289,],[65,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,65,65,-60,-61,-62,-63,-64,-65,-104,65,65,-131,-107,-111,65,65,65,-38,65,65,65,65,65,65,65,65,65,65,65,-118,-120,65,65,65,65,65,65,65,65,65,65,65,-113,-117,-114,65,65,-115,-116,65,65,65,65,65,65,65,65,65,65,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,65,-108,-109,-110,-112,65,65,65,65,65,65,65,-171,65,-121,-66,65,65,65,65,-89,-132,65,65,65,65,65,65,65,65,65,65,65,65,]),'NEWLINE':([26,27,33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,68,70,85,86,105,106,107,110,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,205,206,207,208,209,214,215,222,223,227,230,237,238,244,245,246,249,267,273,280,282,283,290,291,292,],[66,-171,-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,144,-38,-118,-120,-113,-117,-114,-115,-116,202,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-152,-153,-154,-155,-171,-171,-171,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-165,-168,-169,-166,-167,-158,-170,-121,-66,-73,-134,-156,-157,-89,-132,-72,-159,-162,-147,-146,-77,-74,-78,-160,-161,]),'COLON':([27,139,218,],[69,216,69,]),'RPAREN':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,67,85,86,94,97,101,105,106,107,110,111,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,197,222,223,224,239,240,242,244,245,274,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-171,-118,-120,187,190,-70,-113,-117,-114,-115,-116,-33,218,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,223,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-71,-34,-35,-32,-89,-132,-36,]),'COMMA':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,99,101,105,106,107,110,111,112,139,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,197,222,223,224,228,239,240,244,245,264,274,282,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,192,-70,-113,-117,-114,-115,-116,200,-33,219,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,192,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-71,247,-34,-35,-89,-132,276,-36,287,]),'RBRACKET':([33,34,35,37,38,41,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,61,62,63,85,86,98,99,100,101,105,106,107,110,111,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,224,244,245,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-171,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,191,-68,-69,-70,-113,-117,-114,-115,-116,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,222,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-71,-89,-132,]),'DOT':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,115,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,244,245,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,203,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-89,-132,]),'END':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,205,206,207,208,209,214,215,220,222,223,227,230,233,235,236,237,238,244,245,246,249,252,255,257,259,260,262,267,269,270,271,273,279,280,281,282,283,286,288,290,291,292,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,201,-133,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-152,-153,-154,-155,-171,-171,-171,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-165,-168,-169,-166,-167,-158,-170,243,-121,-66,-73,-134,-171,-171,-171,-156,-157,-89,-132,-72,-159,267,-151,-171,-149,273,275,-162,-150,-163,280,-147,-164,-146,-171,-77,-74,-148,291,-78,-160,-161,]),'TCOLON':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,244,245,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,221,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-89,-132,]),'INTERP_END':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,196,197,222,223,244,245,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,225,-112,-121,-66,-89,-132,]),'WHEN':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,204,205,206,207,208,209,214,215,222,223,227,230,233,237,238,244,245,246,249,267,270,273,279,280,282,283,290,291,292,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-133,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-152,-153,-154,-155,-171,-171,-171,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,234,-165,-168,-169,-166,-167,-158,-170,-121,-66,-73,-134,253,-156,-157,-89,-132,-72,-159,-162,-163,-147,-164,-146,-77,-74,-78,-160,-161,]),'ELSIF':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,205,206,207,208,209,214,215,222,223,227,230,235,237,238,244,245,246,249,267,273,280,281,282,283,290,291,292,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-133,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-152,-153,-154,-155,-171,-171,-171,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-165,-168,-169,-166,-167,-158,-170,-121,-66,-73,-134,258,-156,-157,-89,-132,-72,-159,-162,-147,-146,258,-77,-74,-78,-160,-161,]),'ELSE':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,205,206,207,208,209,214,215,222,223,227,230,233,235,236,237,238,244,245,246,249,257,259,267,270,273,279,280,281,282,283,286,290,291,292,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-133,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-152,-153,-154,-155,-171,-171,-171,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-165,-168,-169,-166,-167,-158,-170,-121,-66,-73,-134,254,-171,254,-156,-157,-89,-132,-72,-159,254,-149,-162,-163,-147,-164,-146,-171,-77,-74,-148,-78,-160,-161,]),'CASE':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,130,-38,-118,-120,-113,-117,-114,-115,-116,130,130,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,130,130,130,130,130,-171,-121,-66,130,130,-89,-132,130,130,130,130,130,130,]),'RETURN':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,131,-38,-118,-120,-113,-117,-114,-115,-116,131,131,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,131,131,131,131,131,-171,-121,-66,131,131,-89,-132,131,131,131,131,131,131,]),'BREAK':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,132,-38,-118,-120,-113,-117,-114,-115,-116,132,132,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,132,132,132,132,132,-171,-121,-66,132,132,-89,-132,132,132,132,132,132,132,]),'NEXT':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,133,-38,-118,-120,-113,-117,-114,-115,-116,133,133,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,133,133,133,133,133,-171,-121,-66,133,133,-89,-132,133,133,133,133,133,133,]),'IF':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,134,-38,-118,-120,-113,-117,-114,-115,-116,134,134,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,134,134,134,134,134,-171,-121,-66,134,134,-89,-132,134,134,134,134,134,134,]),'UNLESS':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,135,-38,-118,-120,-113,-117,-114,-115,-116,135,135,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,135,135,135,135,135,-171,-121,-66,135,135,-89,-132,135,135,135,135,135,135,]),'WHILE':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,136,-38,-118,-120,-113,-117,-114,-115,-116,136,136,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,136,136,136,136,136,-171,-121,-66,136,136,-89,-132,136,136,136,136,136,136,]),'UNTIL':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,137,-38,-118,-120,-113,-117,-114,-115,-116,137,137,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,137,137,137,137,137,-171,-121,-66,137,137,-89,-132,137,137,137,137,137,137,]),'LOOP':([33,34,35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,66,70,85,86,105,106,107,110,111,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,202,210,211,212,213,218,222,223,231,241,244,245,254,256,268,272,284,289,],[-79,-80,-90,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,138,-38,-118,-120,-113,-117,-114,-115,-116,138,138,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-92,-81,-82,-83,-84,-85,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,138,138,138,138,138,-171,-121,-66,138,138,-89,-132,138,138,138,138,138,138,]),'QMARK':([35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,168,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[72,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-92,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'OR':([35,37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,168,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[73,-91,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-92,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'PLUS_ASSIGN':([36,38,39,44,45,46,47,48,52,53,54,55,56,57,61,80,81,85,86,178,180,181,187,190,191,222,223,245,],[75,-86,-87,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,-88,-86,-118,-120,-119,-122,-123,-67,-129,-130,-121,-66,-132,]),'MINUS_ASSIGN':([36,38,39,44,45,46,47,48,52,53,54,55,56,57,61,80,81,85,86,178,180,181,187,190,191,222,223,245,],[76,-86,-87,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,-88,-86,-118,-120,-119,-122,-123,-67,-129,-130,-121,-66,-132,]),'MULTI_ASSIGN':([36,38,39,44,45,46,47,48,52,53,54,55,56,57,61,80,81,85,86,178,180,181,187,190,191,222,223,245,],[77,-86,-87,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,-88,-86,-118,-120,-119,-122,-123,-67,-129,-130,-121,-66,-132,]),'DIVIDE_ASSIGN':([36,38,39,44,45,46,47,48,52,53,54,55,56,57,61,80,81,85,86,178,180,181,187,190,191,222,223,245,],[78,-86,-87,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,-88,-86,-118,-120,-119,-122,-123,-67,-129,-130,-121,-66,-132,]),'AND':([37,38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,168,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[79,-117,-93,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,79,-94,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'POTENCIACAO':([38,44,45,46,47,48,52,53,54,55,56,57,61,62,63,85,86,105,106,107,110,111,178,180,181,187,190,191,193,194,195,197,222,223,245,],[-117,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,109,-111,-118,-120,-113,-117,-114,-115,-116,-119,-122,-123,-67,-129,-130,109,109,109,-112,-121,-66,-132,]),'MULTI':([38,44,45,46,47,48,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,178,180,181,187,188,189,190,191,193,194,195,197,203,222,223,245,],[-117,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,102,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-119,-122,-123,-67,102,102,-129,-130,-108,-109,-110,-112,231,-121,-66,-132,]),'DIVIDE':([38,44,45,46,47,48,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,178,180,181,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,103,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-119,-122,-123,-67,103,103,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'MODULO':([38,44,45,46,47,48,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,178,180,181,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,-119,-122,-123,-67,104,104,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'GREATER_THAN':([38,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,90,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,90,90,90,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'LESS_THAN':([38,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,91,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,91,91,91,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'GREATER_EQUAL':([38,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,92,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,92,92,92,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'LESS_EQUAL':([38,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,93,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,93,93,93,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'EQUAL':([38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,82,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,82,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'NOT_EQUAL':([38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,83,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,83,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'TIPO_EQUAL':([38,41,43,44,45,46,47,48,49,52,53,54,55,56,57,58,61,62,63,85,86,105,106,107,110,111,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,197,222,223,245,],[-117,84,-95,-124,-125,-126,-127,-128,-99,-60,-61,-62,-63,-64,-65,-104,-131,-107,-111,-118,-120,-113,-117,-114,-115,-116,84,-96,-97,-98,-119,-122,-123,-100,-101,-102,-103,-67,-105,-106,-129,-130,-108,-109,-110,-112,-121,-66,-132,]),'DOTDOT':([42,44,45,46,47,48,52,53,54,55,56,57,61,86,112,180,181,187,190,191,222,223,245,],[88,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,88,-128,-122,-123,-67,-129,-130,-121,-66,-132,]),'DOTDOTDOT':([42,44,45,46,47,48,52,53,54,55,56,57,61,86,112,180,181,187,190,191,222,223,245,],[89,-124,-125,-126,-127,-128,-60,-61,-62,-63,-64,-65,-131,89,-128,-122,-123,-67,-129,-130,-121,-66,-132,]),'INTERP_START':([61,],[108,]),'NIL':([69,112,216,],[148,148,148,]),'INT':([69,112,216,],[152,152,152,]),'INT8':([69,112,216,],[153,153,153,]),'INT16':([69,112,216,],[154,154,154,]),'INT32':([69,112,216,],[155,155,155,]),'INT64':([69,112,216,],[156,156,156,]),'INT128':([69,112,216,],[157,157,157,]),'UINT8':([69,112,216,],[158,158,158,]),'UINT16':([69,112,216,],[159,159,159,]),'UINT32':([69,112,216,],[160,160,160,]),'UINT64':([69,112,216,],[161,161,161,]),'UINT128':([69,112,216,],[162,162,162,]),'FLOAT':([69,112,216,],[163,163,163,]),'FLOAT32':([69,112,216,],[164,164,164,]),'FLOAT64':([69,112,216,],[165,165,165,]),'BOOL':([69,112,216,],[166,166,166,]),'EACH':([203,],[232,]),'DO':([232,],[250,]),'LBRACE':([232,],[251,]),'PIPE':([250,251,277,278,],[265,266,284,285,]),'RBRACE':([285,],[289,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,71,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,50,51,66,72,74,75,76,77,78,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[32,97,101,115,167,169,170,171,172,173,179,101,196,204,206,206,206,210,211,212,213,115,115,224,227,115,115,115,115,115,240,244,246,115,256,115,264,268,115,115,272,274,115,115,282,115,282,115,]),'ternary_expression':([25,50,51,66,72,74,75,76,77,78,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_expression':([25,50,51,66,72,74,75,76,77,78,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'logical_or_expression':([25,50,51,66,72,74,75,76,77,78,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assignment_target':([25,40,50,51,66,72,74,75,76,77,78,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[36,80,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'logical_and_expression':([25,50,51,66,72,73,74,75,76,77,78,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[37,37,37,37,37,168,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'postfix_expression':([25,40,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[38,81,38,38,106,106,106,106,38,38,106,38,38,38,38,38,106,106,106,106,38,106,106,106,106,38,106,106,106,106,106,38,106,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'equality_expression':([25,50,51,66,72,73,74,75,76,77,78,79,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[41,41,41,41,41,41,41,41,41,41,41,174,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'primary_expression':([25,40,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,180,181,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'relational_expression':([25,50,51,66,72,73,74,75,76,77,78,79,82,83,84,87,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[43,43,43,43,43,43,43,43,43,43,43,43,175,176,177,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expression_between_parentesis':([25,40,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'array_literal':([25,40,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'literal':([25,40,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'function_call':([25,40,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'additive_expression':([25,50,51,66,72,73,74,75,76,77,78,79,82,83,84,87,90,91,92,93,94,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,182,183,184,185,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'string_literal':([25,40,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,225,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,245,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'multiplicative_expression':([25,50,51,66,72,73,74,75,76,77,78,79,82,83,84,87,90,91,92,93,94,95,96,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,188,189,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'potenciacao_expression':([25,50,51,66,72,73,74,75,76,77,78,79,82,83,84,87,90,91,92,93,94,95,96,102,103,104,108,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,193,194,195,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'unary_expression':([25,50,51,59,60,64,65,66,72,73,74,75,76,77,78,79,82,83,84,87,90,91,92,93,94,95,96,102,103,104,108,109,130,131,132,133,134,135,136,137,138,144,192,199,202,210,211,212,213,217,221,226,231,234,241,248,253,254,256,258,261,268,272,276,284,287,289,],[63,63,63,105,107,110,111,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,197,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'opt_return_type':([27,218,],[68,241,]),'empty':([27,51,67,131,132,133,218,233,235,236,257,281,],[70,100,142,207,207,207,70,255,259,255,255,259,]),'postfix_suffixes':([42,86,],[85,178,]),'postfix_suffix':([42,86,],[86,86,]),'opt_expression_list':([51,],[98,]),'expression_list':([51,94,],[99,186,]),'statements':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[113,215,215,230,215,215,215,215,215,215,215,215,215,215,215,215,]),'statement':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'control_structure':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'variable_declaration':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'conditional':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'loop_structure':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'case_structure':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'return_statement':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'break_statement':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'next_statement':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'if_statement':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'unless_statement':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'while':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'until':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'loop':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'iterator':([66,138,144,202,210,211,212,213,231,241,254,256,268,272,284,289,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'opt_argument_list':([67,],[140,]),'argument_list':([67,219,],[141,242,]),'argument':([67,219,],[143,143,]),'types':([69,112,216,],[145,198,239,]),'integer':([69,112,216,],[149,149,149,]),'float':([69,112,216,],[150,150,150,]),'boolean':([69,112,216,],[151,151,151,]),'opt_expression':([131,132,133,],[205,208,209,]),'statements_block':([138,144,210,211,212,213,231,241,254,256,268,272,284,289,],[214,220,235,236,237,238,249,262,269,270,279,281,288,292,]),'list_of_identifiers':([200,247,],[229,263,]),'when_list':([204,],[233,]),'opt_else':([233,236,257,],[252,260,271,]),'opt_elsif':([235,281,],[257,286,]),'list_of_values':([276,287,],[283,290,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParse.py',31),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParse.py',32),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParse.py',33),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',34),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',35),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParse.py',36),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParse.py',37),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParse.py',38),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParse.py',39),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParse.py',40),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParse.py',41),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParse.py',42),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParse.py',43),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParse.py',44),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParse.py',45),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParse.py',48),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParse.py',49),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParse.py',52),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParse.py',55),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParse.py',56),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParse.py',59),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParse.py',62),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParse.py',63),
  ('module -> MODULE ID NEWLINE statements END','module',5,'p_module','ExpressionLanguageParse.py',66),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParse.py',70),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParse.py',71),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements_block END','function',8,'p_function','ExpressionLanguageParse.py',74),
  ('function -> DEF ID opt_return_type NEWLINE statements_block END','function',6,'p_function','ExpressionLanguageParse.py',75),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',78),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',79),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParse.py',81),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParse.py',82),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParse.py',85),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParse.py',86),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParse.py',87),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParse.py',88),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParse.py',91),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParse.py',92),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParse.py',95),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParse.py',96),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParse.py',97),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParse.py',98),
  ('types -> float','types',1,'p_types','ExpressionLanguageParse.py',99),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParse.py',100),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParse.py',103),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParse.py',104),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParse.py',105),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParse.py',106),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParse.py',107),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParse.py',108),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParse.py',109),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParse.py',110),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParse.py',111),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParse.py',112),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParse.py',113),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParse.py',116),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParse.py',117),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParse.py',118),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParse.py',121),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',124),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',125),
  ('literal -> string_literal','literal',1,'p_literal','ExpressionLanguageParse.py',126),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParse.py',127),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParse.py',128),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParse.py',129),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParse.py',132),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParse.py',133),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',136),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',137),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParse.py',140),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParse.py',141),
  ('variable_declaration -> ID types ASSIGN expression','variable_declaration',4,'p_variable_declaration','ExpressionLanguageParse.py',144),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParse.py',145),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParse.py',146),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParse.py',149),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParse.py',150),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParse.py',153),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParse.py',154),
  ('expression -> ternary_expression','expression',1,'p_expression','ExpressionLanguageParse.py',158),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParse.py',159),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',163),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',164),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',165),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',166),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',167),
  ('assignment_target -> postfix_expression','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',170),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',171),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParse.py',172),
  ('ternary_expression -> logical_or_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParse.py',175),
  ('ternary_expression -> logical_or_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParse.py',176),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParse.py',179),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParse.py',180),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParse.py',183),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParse.py',184),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParse.py',187),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',188),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',189),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',190),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParse.py',193),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',194),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',195),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',196),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',197),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParse.py',200),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',201),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',202),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParse.py',206),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',207),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',208),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',209),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParse.py',212),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParse.py',213),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',216),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',217),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',218),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',219),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParse.py',220),
  ('postfix_expression -> primary_expression postfix_suffixes','postfix_expression',2,'p_postfix_expression','ExpressionLanguageParse.py',225),
  ('postfix_suffixes -> postfix_suffix postfix_suffixes','postfix_suffixes',2,'p_postfix_suffixes','ExpressionLanguageParse.py',228),
  ('postfix_suffixes -> postfix_suffix','postfix_suffixes',1,'p_postfix_suffixes','ExpressionLanguageParse.py',229),
  ('postfix_suffix -> LBRACKET expression RBRACKET','postfix_suffix',3,'p_postfix_suffix','ExpressionLanguageParse.py',232),
  ('postfix_suffix -> DOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',233),
  ('postfix_suffix -> DOTDOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',234),
  ('primary_expression -> expression_between_parentesis','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',237),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',238),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',239),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',240),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',241),
  ('expression_between_parentesis -> LPAREN expression RPAREN','expression_between_parentesis',3,'p_expression_between_parentesis','ExpressionLanguageParse.py',244),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParse.py',246),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','ExpressionLanguageParse.py',248),
  ('string_literal -> STRING INTERP_START expression INTERP_END string_literal','string_literal',5,'p_string_literal','ExpressionLanguageParse.py',249),
  ('statements -> statement','statements',1,'p_statements','ExpressionLanguageParse.py',253),
  ('statements -> statement NEWLINE statements','statements',3,'p_statements','ExpressionLanguageParse.py',254),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParse.py',257),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParse.py',258),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParse.py',259),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',262),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',263),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',264),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',265),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',266),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',267),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',270),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',271),
  ('if_statement -> IF expression statements_block opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParse.py',274),
  ('unless_statement -> UNLESS expression statements_block opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParse.py',277),
  ('opt_elsif -> ELSIF expression statements_block opt_elsif','opt_elsif',4,'p_opt_elsif','ExpressionLanguageParse.py',280),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParse.py',281),
  ('opt_else -> ELSE statements_block','opt_else',2,'p_opt_else','ExpressionLanguageParse.py',284),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParse.py',285),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',288),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',289),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',290),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',291),
  ('while -> WHILE expression statements_block','while',3,'p_while','ExpressionLanguageParse.py',294),
  ('until -> UNTIL expression statements_block','until',3,'p_until','ExpressionLanguageParse.py',297),
  ('loop -> LOOP statements_block','loop',2,'p_loop','ExpressionLanguageParse.py',300),
  ('iterator -> expression DOT MULTI statements_block','iterator',4,'p_iterator','ExpressionLanguageParse.py',304),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements_block END','iterator',9,'p_iterator','ExpressionLanguageParse.py',305),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements_block','iterator',9,'p_iterator','ExpressionLanguageParse.py',306),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParse.py',309),
  ('when_list -> WHEN expression statements_block','when_list',3,'p_when_list','ExpressionLanguageParse.py',312),
  ('when_list -> when_list WHEN expression statements_block','when_list',4,'p_when_list','ExpressionLanguageParse.py',313),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParse.py',316),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParse.py',319),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParse.py',322),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',325),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',326),
  ('statements_block -> statements','statements_block',1,'p_statements_block','ExpressionLanguageParse.py',329),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParse.py',332),
]
