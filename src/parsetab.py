
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANLESS_EQUALGREATER_THANGREATER_EQUALleftEQUALNOT_EQUALTIPO_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightNOTTILDEAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUSMINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUSPLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n                |   require_list constant_list module_list\n                |   require_list constant_list function_list\n                |   require_list module_list function_list\n                |   constant_list module_list function_list\n                |   require_list constant_list\n                |   require_list module_list\n                |   constant_list module_list\n                |   require_list function_list\n                |   constant_list function_list\n                |   module_list function_list\n                |   require_list\n                |   constant_list\n                |   module_list\n                |   function_listrequire_list :   require require_list\n                    |   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n                        |   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n                    |   modulemodule   :   MODULE ID statements ENDfunction_list    :   function \n                        |   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END\n                |   DEF ID opt_return_type NEWLINE statements  ENDopt_argument_list    :   argument_list\n                            |   emptyargument_list    :   argument\n                        |   argument COMMA argument_listargument :   ID\n                |   ID COLON types\n                |   ID ASSIGN expression\n                |   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n                        |   emptytypes    :   STRING\n                |   CHAR\n                |   NIL\n                |   integer\n                |   float\n                |   booleaninteger  :   INT\n                |   INT8\n                |   INT16\n                |   INT32\n                |   INT64\n                |   INT128\n                |   UINT8\n                |   UINT16\n                |   UINT32\n                |   UINT64\n                |   UINT128float    :   FLOAT\n                |   FLOAT32\n                |   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n                |   FLOATNUMBER\n                |   string_literal\n                |   CHAR\n                |   TRUE\n                |   FALSEvariable_declaration :   ID types ASSIGN expression\n                            |   ID ASSIGN expression\n                            |   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n                            |   ID COMMA list_of_identifierslist_of_values   :   expression\n                        |   expression COMMA list_of_valuesfunction_call    :   ID LPAREN expression_list RPAREN\n                        |   ID LPAREN RPARENopt_expression_list  :   expression_list\n                            |   emptyexpression_list  :   expression\n                        |   expression_list COMMA expressionstatements   :   statements_list statements_list  :   statements_list statements_base\n                        |   empty statements_base   :   statement NEWLINE\n                         |   statement SEMICOLONstatement    :   expression\n                    |   control_structure\n                    |   variable_declaration\n                    |   function_callcontrol_structure    :   conditional\n                            |   loop_structure\n                            |   case_structure\n                            |   return_statement\n                            |   break_statement\n                            |   next_statementconditional  :   if_statement\n                    |   unless_statementif_statement : IF if_condition statements opt_elsif opt_else ENDunless_statement : UNLESS if_condition statements opt_else ENDif_condition : expression\n                    | expression LBRACE statements RBRACEopt_elsif : elsif_list\n                 | emptyelsif_list : elsif_list elsif\n                  | elsifelsif : ELSIF if_condition statementsopt_else : ELSE statements\n                | emptyloop_structure   :   while\n                        |   until\n                        |   loop\n                        |   iteratorwhile    :   WHILE expression statementsuntil    :   UNTIL expression statementsloop :   LOOP statementsiterator :   expression DOT MULTI statements\n                |   expression DOT EACH DO PIPE ID PIPE statements END\n                |   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statementscase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements\n                    |   when_list WHEN expression statementsreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n                        |   emptyexpression   :   ternary_expression\n                    |   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n                                |   assignment_target PLUS_ASSIGN expression\n                                |   assignment_target MINUS_ASSIGN expression\n                                |   assignment_target MULTI_ASSIGN expression\n                                |   assignment_target DIVIDE_ASSIGN expressionassignment_target    :   postfix_expression\n                            |   UNDERSCORE\n                            |   ASTERISK assignment_targetternary_expression   :   logical_or_expression QMARK expression TCOLON expression\n                            |   logical_or_expressionlogical_or_expression    :   logical_and_expression\n                                |   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n                                |   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n                            |   equality_expression EQUAL relational_expression\n                            |   equality_expression NOT_EQUAL relational_expression\n                            |   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n                                |   relational_expression GREATER_THAN additive_expression\n                                |   relational_expression LESS_THAN additive_expression\n                                |   relational_expression GREATER_EQUAL additive_expression\n                                |   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n                            |   additive_expression PLUS multiplicative_expression\n                            |   additive_expression MINUS multiplicative_expression multiplicative_expression    :   potenciacao_expression\n                                    |   multiplicative_expression MULTI potenciacao_expression\n                                    |   multiplicative_expression DIVIDE potenciacao_expression\n                                    |   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n                                |   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUSPLUS ID\n                        |   ID PLUSPLUS\n                        |   MINUSMINUS ID\n                        |   ID MINUSMINUS\n                        |   EXCLAMATION unary_expression\n                        |   TILDE unary_expression\n                        |   postfix_expressionprimary_expression   :   expression_between_parentesis\n                            |   array_literal\n                            |   literal\n                            |   IDpostfix_expression   :   primary_expression postfix_suffixespostfix_suffixes :   postfix_suffix postfix_suffixes\n                        |   postfix_suffixpostfix_suffix   :   LBRACKET expression RBRACKET\n                        |   DOTDOT primary_expression\n                        |   DOTDOTDOT primary_expression expression_between_parentesis : LPAREN expression RPARENarray_literal    :   LBRACKET opt_expression_list RBRACKETstring_literal : STRING\n                      | STRING INTERP_START expression INTERP_END string_literalempty :'
    
_lr_action_items = {'REQUIRE':([0,6,24,],[10,10,-18,]),'CONSTANT':([0,2,6,7,20,24,32,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,250,251,],[11,11,-17,11,-16,-18,-21,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-135,-179,]),'MODULE':([0,2,3,6,7,8,14,20,21,24,32,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,116,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,250,251,],[12,12,12,-17,-20,12,12,-16,-19,-18,-21,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-24,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-135,-179,]),'DEF':([0,2,3,4,6,7,8,9,14,15,17,20,21,22,24,28,32,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,116,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,249,250,251,287,],[13,13,13,13,-17,-20,-23,13,13,13,13,-16,-19,-22,-18,13,-21,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-24,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-28,-135,-179,-27,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,72,83,87,88,96,97,110,111,112,114,115,116,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,249,250,251,287,],[0,-12,-13,-14,-15,-17,-20,-23,-25,-6,-7,-9,-8,-10,-11,-16,-19,-22,-26,-18,-2,-3,-4,-5,-21,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-1,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-24,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-28,-135,-179,-27,]),'STRING':([10,25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,70,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,129,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,221,222,223,226,227,229,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[24,58,-180,-125,-126,-136,-137,-165,58,-139,-141,-166,-167,-168,-145,58,58,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,58,58,58,-81,152,-38,58,58,58,58,58,58,58,58,-169,58,58,58,-170,-172,58,58,58,58,58,58,58,-160,-162,58,58,58,58,58,58,58,-159,-161,-163,-165,-164,-80,152,58,58,58,58,58,58,58,58,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,58,-154,-155,-156,-158,-82,-83,58,58,-180,-98,-180,-180,-180,152,58,-180,58,-173,58,-180,58,58,-180,-180,-135,-179,58,58,-180,-180,58,58,-180,-180,-99,58,-180,-180,58,]),'ASSIGN':([11,36,38,39,44,45,46,51,52,53,54,55,56,58,81,82,83,87,88,129,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,184,186,187,194,195,205,227,234,235,245,251,275,],[25,75,-132,-133,-166,-167,-168,-60,-61,-62,-63,-64,-65,-178,-134,-132,-169,-170,-172,206,222,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-171,-174,-175,-176,-177,232,-173,-69,257,271,-179,-70,]),'ID':([12,13,25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,207,208,215,216,217,218,219,222,223,224,226,227,230,232,239,241,247,250,251,256,257,260,261,263,268,271,273,274,278,283,284,290,294,299,300,],[26,27,47,-180,-125,-126,-136,-137,-165,83,-139,-141,-166,-167,-168,-145,47,47,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,110,111,113,113,129,-81,145,-38,47,113,47,47,47,47,47,113,-169,113,113,113,-170,-172,47,83,83,113,113,113,113,-160,-162,113,113,113,113,113,47,113,-159,-161,-163,-165,-164,-80,47,47,47,47,47,47,47,47,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,47,-154,-155,-156,-158,-82,-83,47,234,47,-180,-98,-180,-180,-180,47,-180,145,47,-173,-180,47,47,-180,-180,-135,-179,234,47,47,-180,-180,47,47,288,289,-180,-180,-99,47,-180,-180,47,]),'UNDERSCORE':([25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,71,73,75,76,77,78,79,83,87,88,89,96,97,108,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[39,-180,-125,-126,-136,-137,-165,39,-139,-141,-166,-167,-168,-145,39,39,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,39,-81,-38,39,39,39,39,39,39,-169,-170,-172,39,-160,-162,39,-159,-161,-163,-165,-164,-80,39,39,39,39,39,39,39,39,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,39,-154,-155,-156,-158,-82,-83,39,39,-180,-98,-180,-180,-180,39,-180,39,-173,-180,39,39,-180,-180,-135,-179,39,39,-180,-180,39,39,-180,-180,-99,39,-180,-180,39,]),'ASTERISK':([25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,71,73,75,76,77,78,79,83,87,88,89,96,97,108,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[40,-180,-125,-126,-136,-137,-165,40,-139,-141,-166,-167,-168,-145,40,40,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,40,-81,-38,40,40,40,40,40,40,-169,-170,-172,40,-160,-162,40,-159,-161,-163,-165,-164,-80,40,40,40,40,40,40,40,40,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,40,-154,-155,-156,-158,-82,-83,40,40,-180,-98,-180,-180,-180,40,-180,40,-173,-180,40,40,-180,-180,-135,-179,40,40,-180,-180,40,40,-180,-180,-99,40,-180,-180,40,]),'LPAREN':([25,26,27,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,129,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[49,-180,68,-125,-126,-136,-137,-165,49,-139,-141,-166,-167,-168,-145,49,49,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,49,49,49,-81,-38,49,49,49,49,49,49,49,49,-169,49,49,49,-170,-172,49,49,49,49,49,49,49,-160,-162,49,49,49,49,49,49,49,-159,-161,-163,-165,-164,-80,208,49,49,49,49,49,49,49,49,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,49,-154,-155,-156,-158,-82,-83,49,49,-180,-98,-180,-180,-180,49,-180,49,-173,-180,49,49,-180,-180,-135,-179,49,49,-180,-180,49,49,-180,-180,-99,49,-180,-180,49,]),'LBRACKET':([25,26,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,129,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[50,-180,-125,-126,-136,-137,-165,50,-139,89,-141,-166,-167,-168,-169,-145,50,50,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,50,50,50,-81,-38,50,50,50,50,50,50,50,50,-169,50,50,50,-170,89,50,50,50,50,50,50,50,-160,-162,50,50,50,50,50,50,50,-159,-161,-163,-169,-165,-164,-80,-169,50,50,50,50,50,50,50,50,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,50,-154,-155,-156,-158,-82,-83,50,50,-180,-98,-180,-180,-180,50,-180,50,-173,-180,50,50,-180,-180,-135,-179,50,50,-180,-180,50,50,-180,-180,-99,50,-180,-180,50,]),'INTNUMBER':([25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[51,-180,-125,-126,-136,-137,-165,51,-139,-141,-166,-167,-168,-145,51,51,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,51,51,51,-81,-38,51,51,51,51,51,51,51,51,-169,51,51,51,-170,-172,51,51,51,51,51,51,51,-160,-162,51,51,51,51,51,51,51,-159,-161,-163,-165,-164,-80,51,51,51,51,51,51,51,51,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,51,-154,-155,-156,-158,-82,-83,51,51,-180,-98,-180,-180,-180,51,-180,51,-173,-180,51,51,-180,-180,-135,-179,51,51,-180,-180,51,51,-180,-180,-99,51,-180,-180,51,]),'FLOATNUMBER':([25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[52,-180,-125,-126,-136,-137,-165,52,-139,-141,-166,-167,-168,-145,52,52,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,52,52,52,-81,-38,52,52,52,52,52,52,52,52,-169,52,52,52,-170,-172,52,52,52,52,52,52,52,-160,-162,52,52,52,52,52,52,52,-159,-161,-163,-165,-164,-80,52,52,52,52,52,52,52,52,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,52,-154,-155,-156,-158,-82,-83,52,52,-180,-98,-180,-180,-180,52,-180,52,-173,-180,52,52,-180,-180,-135,-179,52,52,-180,-180,52,52,-180,-180,-99,52,-180,-180,52,]),'CHAR':([25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,70,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,129,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,221,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[54,-180,-125,-126,-136,-137,-165,54,-139,-141,-166,-167,-168,-145,54,54,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,54,54,54,-81,153,-38,54,54,54,54,54,54,54,54,-169,54,54,54,-170,-172,54,54,54,54,54,54,54,-160,-162,54,54,54,54,54,54,54,-159,-161,-163,-165,-164,-80,153,54,54,54,54,54,54,54,54,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,54,-154,-155,-156,-158,-82,-83,54,54,-180,-98,-180,-180,-180,153,54,-180,54,-173,-180,54,54,-180,-180,-135,-179,54,54,-180,-180,54,54,-180,-180,-99,54,-180,-180,54,]),'TRUE':([25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[55,-180,-125,-126,-136,-137,-165,55,-139,-141,-166,-167,-168,-145,55,55,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,55,55,55,-81,-38,55,55,55,55,55,55,55,55,-169,55,55,55,-170,-172,55,55,55,55,55,55,55,-160,-162,55,55,55,55,55,55,55,-159,-161,-163,-165,-164,-80,55,55,55,55,55,55,55,55,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,55,-154,-155,-156,-158,-82,-83,55,55,-180,-98,-180,-180,-180,55,-180,55,-173,-180,55,55,-180,-180,-135,-179,55,55,-180,-180,55,55,-180,-180,-99,55,-180,-180,55,]),'FALSE':([25,26,33,34,35,37,38,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[56,-180,-125,-126,-136,-137,-165,56,-139,-141,-166,-167,-168,-145,56,56,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,56,56,56,-81,-38,56,56,56,56,56,56,56,56,-169,56,56,56,-170,-172,56,56,56,56,56,56,56,-160,-162,56,56,56,56,56,56,56,-159,-161,-163,-165,-164,-80,56,56,56,56,56,56,56,56,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,56,-154,-155,-156,-158,-82,-83,56,56,-180,-98,-180,-180,-180,56,-180,56,-173,-180,56,56,-180,-180,-135,-179,56,56,-180,-180,56,56,-180,-180,-99,56,-180,-180,56,]),'PLUSPLUS':([25,26,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,129,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[61,-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,96,-145,61,61,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,61,61,61,-81,-38,61,61,61,61,61,61,61,61,-169,61,61,61,-170,-172,61,61,61,61,61,-160,-162,61,61,61,61,61,61,61,-159,-161,-163,96,-165,-164,-80,96,61,61,61,61,61,61,61,61,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,61,-154,-155,-156,-158,-82,-83,61,61,-180,-98,-180,-180,-180,61,-180,61,-173,-180,61,61,-180,-180,-135,-179,61,61,-180,-180,61,61,-180,-180,-99,61,-180,-180,61,]),'MINUSMINUS':([25,26,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,117,129,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[62,-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,97,-145,62,62,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,62,62,62,-81,-38,62,62,62,62,62,62,62,62,-169,62,62,62,-170,-172,62,62,62,62,62,-160,-162,62,62,62,62,62,62,62,-159,-161,-163,97,-165,-164,-80,97,62,62,62,62,62,62,62,62,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,62,-154,-155,-156,-158,-82,-83,62,62,-180,-98,-180,-180,-180,62,-180,62,-173,-180,62,62,-180,-180,-135,-179,62,62,-180,-180,62,62,-180,-180,-99,62,-180,-180,62,]),'EXCLAMATION':([25,26,33,34,35,37,38,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[63,-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,63,63,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,63,63,63,-81,-38,63,63,63,63,63,63,63,63,-169,63,63,63,-170,-172,63,63,63,63,63,-160,-162,63,63,63,63,63,63,63,-159,-161,-163,-165,-164,-80,63,63,63,63,63,63,63,63,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,63,-154,-155,-156,-158,-82,-83,63,63,-180,-98,-180,-180,-180,63,-180,63,-173,-180,63,63,-180,-180,-135,-179,63,63,-180,-180,63,63,-180,-180,-99,63,-180,-180,63,]),'TILDE':([25,26,33,34,35,37,38,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,66,67,71,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,114,115,117,136,137,138,139,140,141,142,143,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,206,208,215,216,217,218,219,222,223,226,227,230,232,239,241,247,250,251,257,260,261,263,268,271,278,283,284,290,294,299,300,],[64,-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,64,64,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,64,64,64,-81,-38,64,64,64,64,64,64,64,64,-169,64,64,64,-170,-172,64,64,64,64,64,-160,-162,64,64,64,64,64,64,64,-159,-161,-163,-165,-164,-80,64,64,64,64,64,64,64,64,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,64,-154,-155,-156,-158,-82,-83,64,64,-180,-98,-180,-180,-180,64,-180,64,-173,-180,64,64,-180,-180,-135,-179,64,64,-180,-180,64,64,-180,-180,-99,64,-180,-180,64,]),'CASE':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,136,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'RETURN':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,137,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'BREAK':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,138,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'NEXT':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,139,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'IF':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,140,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'UNLESS':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,141,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'WHILE':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,142,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'UNTIL':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,143,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'LOOP':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,71,83,87,88,96,97,110,111,112,114,115,117,144,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,218,219,223,227,230,241,247,250,251,261,263,278,283,284,294,299,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,144,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,-180,-180,-173,-180,-180,-180,-135,-179,-180,-180,-180,-180,-99,-180,-180,]),'END':([26,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,65,66,67,71,83,87,88,96,97,110,111,112,114,115,117,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,223,225,227,238,240,242,247,250,251,259,261,262,263,264,265,266,267,270,272,278,279,280,281,282,283,284,291,293,294,298,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,116,-79,-81,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-180,249,-173,-180,-180,-180,-180,-135,-179,277,-180,-106,-180,-180,-100,-101,-103,285,287,-180,-105,-118,292,-102,-180,-99,-119,-104,-180,301,]),'COLON':([27,145,223,],[70,221,70,]),'NEWLINE':([27,33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,69,71,83,87,88,96,97,110,111,112,114,115,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,137,138,139,144,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,210,211,212,213,214,218,219,220,227,230,233,237,243,244,250,251,252,255,258,277,285,292,296,297,299,301,302,303,],[-180,-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-79,-81,150,-38,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,202,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-107,-108,-109,-110,-180,-180,-180,-180,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-120,-123,-124,-121,-122,-180,-180,-113,-173,-180,-67,-74,-111,-112,-135,-179,-114,-66,-73,-117,-97,-96,-71,-68,-180,-115,-116,-72,]),'RPAREN':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,68,83,87,88,96,97,100,104,110,111,112,114,115,145,146,147,148,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,208,227,228,236,245,246,248,250,251,286,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-180,-169,-170,-172,-160,-162,194,-77,-159,-161,-163,-165,-164,-33,223,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,237,-173,-78,258,-34,-35,-32,-135,-179,-36,]),'COMMA':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,102,104,110,111,112,114,115,129,145,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,228,234,236,245,246,250,251,276,286,296,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,196,-77,-159,-161,-163,-165,-164,207,-33,224,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-78,256,196,-34,-35,-135,-179,290,-36,300,]),'RBRACKET':([33,34,35,37,38,41,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,101,102,103,104,110,111,112,114,115,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,228,250,251,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-180,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,195,-75,-76,-77,-159,-161,-163,-165,-164,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,227,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-78,-135,-179,]),'DOT':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,119,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,250,251,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,204,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-135,-179,]),'SEMICOLON':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,83,87,88,96,97,110,111,112,114,115,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,137,138,139,144,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,210,211,212,213,214,218,219,220,227,230,233,237,243,244,250,251,252,255,258,277,285,292,296,297,299,301,302,303,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-79,-81,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,203,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-107,-108,-109,-110,-180,-180,-180,-180,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-120,-123,-124,-121,-122,-180,-180,-113,-173,-180,-67,-74,-111,-112,-135,-179,-114,-66,-73,-117,-97,-96,-71,-68,-180,-115,-116,-72,]),'TCOLON':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,250,251,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,226,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-135,-179,]),'INTERP_END':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,227,250,251,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,229,-158,-173,-135,-179,]),'WHEN':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,83,87,88,96,97,110,111,112,114,115,117,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,209,227,238,250,251,263,278,280,291,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-79,-81,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,239,-173,260,-135,-179,-180,-180,-118,-119,]),'LBRACE':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,216,227,231,250,251,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,241,-173,254,-135,-179,]),'ELSIF':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,83,87,88,96,97,110,111,112,114,115,117,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,227,240,250,251,265,267,282,283,284,293,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-79,-81,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-173,268,-135,-179,268,-103,-102,-180,-99,-104,]),'ELSE':([33,34,35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,66,67,83,87,88,96,97,110,111,112,114,115,117,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,202,203,215,216,217,227,238,240,242,250,251,263,264,265,266,267,278,280,282,283,284,291,293,],[-125,-126,-136,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-79,-81,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-80,-138,-127,-128,-129,-130,-131,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-82,-83,-180,-98,-180,-173,261,-180,261,-135,-179,-180,261,-100,-101,-103,-180,-118,-102,-180,-99,-119,-104,]),'QMARK':([35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,174,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[73,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-138,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'OR':([35,37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,174,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[74,-137,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-138,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'PLUS_ASSIGN':([36,38,39,44,45,46,51,52,53,54,55,56,58,81,82,83,87,88,184,186,187,194,195,227,251,],[76,-132,-133,-166,-167,-168,-60,-61,-62,-63,-64,-65,-178,-134,-132,-169,-170,-172,-171,-174,-175,-176,-177,-173,-179,]),'MINUS_ASSIGN':([36,38,39,44,45,46,51,52,53,54,55,56,58,81,82,83,87,88,184,186,187,194,195,227,251,],[77,-132,-133,-166,-167,-168,-60,-61,-62,-63,-64,-65,-178,-134,-132,-169,-170,-172,-171,-174,-175,-176,-177,-173,-179,]),'MULTI_ASSIGN':([36,38,39,44,45,46,51,52,53,54,55,56,58,81,82,83,87,88,184,186,187,194,195,227,251,],[78,-132,-133,-166,-167,-168,-60,-61,-62,-63,-64,-65,-178,-134,-132,-169,-170,-172,-171,-174,-175,-176,-177,-173,-179,]),'DIVIDE_ASSIGN':([36,38,39,44,45,46,51,52,53,54,55,56,58,81,82,83,87,88,184,186,187,194,195,227,251,],[79,-132,-133,-166,-167,-168,-60,-61,-62,-63,-64,-65,-178,-134,-132,-169,-170,-172,-171,-174,-175,-176,-177,-173,-179,]),'AND':([37,38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,174,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[80,-165,-139,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,80,-140,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'POTENCIACAO':([38,44,45,46,51,52,53,54,55,56,58,59,60,83,87,88,96,97,110,111,112,114,115,184,186,187,194,195,197,198,199,201,227,251,],[-165,-166,-167,-168,-60,-61,-62,-63,-64,-65,-178,109,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-171,-174,-175,-176,-177,109,109,109,-158,-173,-179,]),'MULTI':([38,44,45,46,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,184,186,187,192,193,194,195,197,198,199,201,204,227,251,],[-165,-166,-167,-168,-60,-61,-62,-63,-64,-65,105,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-171,-174,-175,105,105,-176,-177,-154,-155,-156,-158,230,-173,-179,]),'DIVIDE':([38,44,45,46,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,184,186,187,192,193,194,195,197,198,199,201,227,251,],[-165,-166,-167,-168,-60,-61,-62,-63,-64,-65,106,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-171,-174,-175,106,106,-176,-177,-154,-155,-156,-158,-173,-179,]),'MODULO':([38,44,45,46,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,184,186,187,192,193,194,195,197,198,199,201,227,251,],[-165,-166,-167,-168,-60,-61,-62,-63,-64,-65,107,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-171,-174,-175,107,107,-176,-177,-154,-155,-156,-158,-173,-179,]),'PLUS':([38,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,-166,-167,-168,98,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-171,-174,-175,98,98,98,98,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'MINUS':([38,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,-166,-167,-168,99,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,-171,-174,-175,99,99,99,99,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'GREATER_THAN':([38,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,92,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,92,92,92,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'LESS_THAN':([38,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,93,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,93,93,93,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'GREATER_EQUAL':([38,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,94,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,94,94,94,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'LESS_EQUAL':([38,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,95,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,95,95,95,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'EQUAL':([38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,84,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,84,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'NOT_EQUAL':([38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,85,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,85,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'TIPO_EQUAL':([38,41,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,83,87,88,96,97,110,111,112,114,115,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,197,198,199,201,227,251,],[-165,86,-141,-166,-167,-168,-145,-60,-61,-62,-63,-64,-65,-150,-178,-153,-157,-169,-170,-172,-160,-162,-159,-161,-163,-165,-164,86,-142,-143,-144,-171,-174,-175,-146,-147,-148,-149,-151,-152,-176,-177,-154,-155,-156,-158,-173,-179,]),'DOTDOT':([42,44,45,46,47,51,52,53,54,55,56,58,83,88,113,129,186,187,194,195,227,251,],[90,-166,-167,-168,-169,-60,-61,-62,-63,-64,-65,-178,-169,90,-169,-169,-174,-175,-176,-177,-173,-179,]),'DOTDOTDOT':([42,44,45,46,47,51,52,53,54,55,56,58,83,88,113,129,186,187,194,195,227,251,],[91,-166,-167,-168,-169,-60,-61,-62,-63,-64,-65,-178,-169,91,-169,-169,-174,-175,-176,-177,-173,-179,]),'INTERP_START':([58,],[108,]),'RBRACE':([66,67,117,202,203,241,269,295,],[-79,-81,-80,-82,-83,-180,284,299,]),'NIL':([70,129,221,],[154,154,154,]),'INT':([70,129,221,],[158,158,158,]),'INT8':([70,129,221,],[159,159,159,]),'INT16':([70,129,221,],[160,160,160,]),'INT32':([70,129,221,],[161,161,161,]),'INT64':([70,129,221,],[162,162,162,]),'INT128':([70,129,221,],[163,163,163,]),'UINT8':([70,129,221,],[164,164,164,]),'UINT16':([70,129,221,],[165,165,165,]),'UINT32':([70,129,221,],[166,166,166,]),'UINT64':([70,129,221,],[167,167,167,]),'UINT128':([70,129,221,],[168,168,168,]),'FLOAT':([70,129,221,],[169,169,169,]),'FLOAT32':([70,129,221,],[170,170,170,]),'FLOAT64':([70,129,221,],[171,171,171,]),'BOOL':([70,129,221,],[172,172,172,]),'EACH':([204,],[231,]),'DO':([231,],[253,]),'PIPE':([253,254,288,289,],[273,274,294,295,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,72,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,49,50,66,73,75,76,77,78,79,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[32,100,104,119,173,175,176,177,178,179,185,200,209,211,211,211,216,216,218,219,228,233,104,246,250,255,263,276,278,216,286,296,296,]),'ternary_expression':([25,49,50,66,73,75,76,77,78,79,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_expression':([25,49,50,66,73,75,76,77,78,79,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'logical_or_expression':([25,49,50,66,73,75,76,77,78,79,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assignment_target':([25,40,49,50,66,73,75,76,77,78,79,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[36,81,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'logical_and_expression':([25,49,50,66,73,74,75,76,77,78,79,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[37,37,37,37,37,174,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'postfix_expression':([25,40,49,50,63,64,66,73,74,75,76,77,78,79,80,84,85,86,89,92,93,94,95,98,99,105,106,107,108,109,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[38,82,38,38,114,114,38,38,114,38,38,38,38,38,114,114,114,114,38,114,114,114,114,114,114,114,114,114,38,114,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'equality_expression':([25,49,50,66,73,74,75,76,77,78,79,80,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[41,41,41,41,41,41,41,41,41,41,41,180,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'primary_expression':([25,40,49,50,63,64,66,73,74,75,76,77,78,79,80,84,85,86,89,90,91,92,93,94,95,98,99,105,106,107,108,109,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,186,187,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'relational_expression':([25,49,50,66,73,74,75,76,77,78,79,80,84,85,86,89,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[43,43,43,43,43,43,43,43,43,43,43,43,181,182,183,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expression_between_parentesis':([25,40,49,50,63,64,66,73,74,75,76,77,78,79,80,84,85,86,89,90,91,92,93,94,95,98,99,105,106,107,108,109,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'array_literal':([25,40,49,50,63,64,66,73,74,75,76,77,78,79,80,84,85,86,89,90,91,92,93,94,95,98,99,105,106,107,108,109,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'literal':([25,40,49,50,63,64,66,73,74,75,76,77,78,79,80,84,85,86,89,90,91,92,93,94,95,98,99,105,106,107,108,109,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'additive_expression':([25,49,50,66,73,74,75,76,77,78,79,80,84,85,86,89,92,93,94,95,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,188,189,190,191,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'string_literal':([25,40,49,50,63,64,66,73,74,75,76,77,78,79,80,84,85,86,89,90,91,92,93,94,95,98,99,105,106,107,108,109,136,137,138,139,140,141,142,143,196,206,208,222,226,229,232,239,257,260,268,271,290,300,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,251,53,53,53,53,53,53,53,53,]),'multiplicative_expression':([25,49,50,66,73,74,75,76,77,78,79,80,84,85,86,89,92,93,94,95,98,99,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,192,193,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'potenciacao_expression':([25,49,50,66,73,74,75,76,77,78,79,80,84,85,86,89,92,93,94,95,98,99,105,106,107,108,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,197,198,199,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'unary_expression':([25,49,50,63,64,66,73,74,75,76,77,78,79,80,84,85,86,89,92,93,94,95,98,99,105,106,107,108,109,136,137,138,139,140,141,142,143,196,206,208,222,226,232,239,257,260,268,271,290,300,],[60,60,60,112,115,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,201,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'statements':([26,144,150,215,217,218,219,230,241,247,261,263,278,283,294,299,],[65,220,225,240,242,243,244,252,269,272,279,280,291,293,298,302,]),'statements_list':([26,144,150,215,217,218,219,230,241,247,261,263,278,283,294,299,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'empty':([26,27,50,68,137,138,139,144,150,215,217,218,219,223,230,238,240,241,242,247,261,263,264,278,283,294,299,],[67,71,103,148,212,212,212,67,67,67,67,67,67,71,67,262,266,67,262,67,67,67,262,67,67,67,67,]),'opt_return_type':([27,223,],[69,247,]),'postfix_suffixes':([42,88,],[87,184,]),'postfix_suffix':([42,88,],[88,88,]),'opt_expression_list':([50,],[101,]),'expression_list':([50,208,],[102,236,]),'statements_base':([66,],[117,]),'statement':([66,],[118,]),'control_structure':([66,],[120,]),'variable_declaration':([66,],[121,]),'function_call':([66,],[122,]),'conditional':([66,],[123,]),'loop_structure':([66,],[124,]),'case_structure':([66,],[125,]),'return_statement':([66,],[126,]),'break_statement':([66,],[127,]),'next_statement':([66,],[128,]),'if_statement':([66,],[130,]),'unless_statement':([66,],[131,]),'while':([66,],[132,]),'until':([66,],[133,]),'loop':([66,],[134,]),'iterator':([66,],[135,]),'opt_argument_list':([68,],[146,]),'argument_list':([68,224,],[147,248,]),'argument':([68,224,],[149,149,]),'types':([70,129,221,],[151,205,245,]),'integer':([70,129,221,],[155,155,155,]),'float':([70,129,221,],[156,156,156,]),'boolean':([70,129,221,],[157,157,157,]),'opt_expression':([137,138,139,],[210,213,214,]),'if_condition':([140,141,268,],[215,217,283,]),'list_of_identifiers':([207,256,],[235,275,]),'when_list':([209,],[238,]),'opt_else':([238,242,264,],[259,270,281,]),'opt_elsif':([240,],[264,]),'elsif_list':([240,],[265,]),'elsif':([240,265,],[267,282,]),'list_of_values':([290,300,],[297,303,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParser.py',22),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParser.py',23),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParser.py',24),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',25),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',26),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParser.py',27),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParser.py',28),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParser.py',29),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParser.py',30),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParser.py',31),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParser.py',32),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParser.py',33),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParser.py',34),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParser.py',35),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParser.py',36),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParser.py',39),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParser.py',40),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParser.py',43),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParser.py',46),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParser.py',47),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParser.py',50),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParser.py',53),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParser.py',54),
  ('module -> MODULE ID statements END','module',4,'p_module','ExpressionLanguageParser.py',57),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParser.py',61),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParser.py',62),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END','function',8,'p_function','ExpressionLanguageParser.py',65),
  ('function -> DEF ID opt_return_type NEWLINE statements END','function',6,'p_function','ExpressionLanguageParser.py',66),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',69),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',70),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParser.py',72),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParser.py',73),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParser.py',76),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParser.py',77),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParser.py',78),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParser.py',79),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParser.py',82),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParser.py',83),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParser.py',86),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParser.py',87),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParser.py',88),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParser.py',89),
  ('types -> float','types',1,'p_types','ExpressionLanguageParser.py',90),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParser.py',91),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParser.py',94),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParser.py',95),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParser.py',96),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParser.py',97),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParser.py',98),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParser.py',99),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParser.py',100),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParser.py',101),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParser.py',102),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParser.py',103),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParser.py',104),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParser.py',107),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParser.py',108),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParser.py',109),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParser.py',112),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',115),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',116),
  ('literal -> string_literal','literal',1,'p_literal','ExpressionLanguageParser.py',117),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParser.py',118),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParser.py',119),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParser.py',120),
  ('variable_declaration -> ID types ASSIGN expression','variable_declaration',4,'p_variable_declaration','ExpressionLanguageParser.py',125),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParser.py',126),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParser.py',127),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParser.py',130),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParser.py',131),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParser.py',134),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParser.py',135),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParser.py',141),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParser.py',142),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',145),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',146),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParser.py',149),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParser.py',150),
  ('statements -> statements_list','statements',1,'p_statements','ExpressionLanguageParser.py',155),
  ('statements_list -> statements_list statements_base','statements_list',2,'p_statements_list','ExpressionLanguageParser.py',158),
  ('statements_list -> empty','statements_list',1,'p_statements_list','ExpressionLanguageParser.py',159),
  ('statements_base -> statement NEWLINE','statements_base',2,'p_statements_base','ExpressionLanguageParser.py',162),
  ('statements_base -> statement SEMICOLON','statements_base',2,'p_statements_base','ExpressionLanguageParser.py',163),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParser.py',166),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParser.py',167),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParser.py',168),
  ('statement -> function_call','statement',1,'p_statement','ExpressionLanguageParser.py',169),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',172),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',173),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',174),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',175),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',176),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',177),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',180),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',181),
  ('if_statement -> IF if_condition statements opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParser.py',185),
  ('unless_statement -> UNLESS if_condition statements opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParser.py',188),
  ('if_condition -> expression','if_condition',1,'p_if_condition','ExpressionLanguageParser.py',191),
  ('if_condition -> expression LBRACE statements RBRACE','if_condition',4,'p_if_condition','ExpressionLanguageParser.py',192),
  ('opt_elsif -> elsif_list','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',195),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',196),
  ('elsif_list -> elsif_list elsif','elsif_list',2,'p_elsif_list','ExpressionLanguageParser.py',199),
  ('elsif_list -> elsif','elsif_list',1,'p_elsif_list','ExpressionLanguageParser.py',200),
  ('elsif -> ELSIF if_condition statements','elsif',3,'p_elsif','ExpressionLanguageParser.py',203),
  ('opt_else -> ELSE statements','opt_else',2,'p_opt_else','ExpressionLanguageParser.py',206),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParser.py',207),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',210),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',211),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',212),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',213),
  ('while -> WHILE expression statements','while',3,'p_while','ExpressionLanguageParser.py',216),
  ('until -> UNTIL expression statements','until',3,'p_until','ExpressionLanguageParser.py',219),
  ('loop -> LOOP statements','loop',2,'p_loop','ExpressionLanguageParser.py',222),
  ('iterator -> expression DOT MULTI statements','iterator',4,'p_iterator','ExpressionLanguageParser.py',226),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements END','iterator',9,'p_iterator','ExpressionLanguageParser.py',227),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements','iterator',9,'p_iterator','ExpressionLanguageParser.py',228),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParser.py',231),
  ('when_list -> WHEN expression statements','when_list',3,'p_when_list','ExpressionLanguageParser.py',234),
  ('when_list -> when_list WHEN expression statements','when_list',4,'p_when_list','ExpressionLanguageParser.py',235),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',238),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParser.py',241),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParser.py',244),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',247),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',248),
  ('expression -> ternary_expression','expression',1,'p_expression','ExpressionLanguageParser.py',252),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParser.py',253),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',257),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',258),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',259),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',260),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',261),
  ('assignment_target -> postfix_expression','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',264),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',265),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParser.py',266),
  ('ternary_expression -> logical_or_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParser.py',269),
  ('ternary_expression -> logical_or_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParser.py',270),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParser.py',273),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParser.py',274),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParser.py',277),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParser.py',278),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParser.py',281),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',282),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',283),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',284),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParser.py',288),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',289),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',290),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',291),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',292),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParser.py',295),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',296),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',297),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParser.py',301),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',302),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',303),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',304),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParser.py',307),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParser.py',308),
  ('unary_expression -> PLUSPLUS ID','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',311),
  ('unary_expression -> ID PLUSPLUS','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',312),
  ('unary_expression -> MINUSMINUS ID','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',313),
  ('unary_expression -> ID MINUSMINUS','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',314),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',315),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',316),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParser.py',317),
  ('primary_expression -> expression_between_parentesis','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',321),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',322),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',323),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',324),
  ('postfix_expression -> primary_expression postfix_suffixes','postfix_expression',2,'p_postfix_expression','ExpressionLanguageParser.py',328),
  ('postfix_suffixes -> postfix_suffix postfix_suffixes','postfix_suffixes',2,'p_postfix_suffixes','ExpressionLanguageParser.py',331),
  ('postfix_suffixes -> postfix_suffix','postfix_suffixes',1,'p_postfix_suffixes','ExpressionLanguageParser.py',332),
  ('postfix_suffix -> LBRACKET expression RBRACKET','postfix_suffix',3,'p_postfix_suffix','ExpressionLanguageParser.py',335),
  ('postfix_suffix -> DOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParser.py',336),
  ('postfix_suffix -> DOTDOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParser.py',337),
  ('expression_between_parentesis -> LPAREN expression RPAREN','expression_between_parentesis',3,'p_expression_between_parentesis','ExpressionLanguageParser.py',341),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParser.py',344),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','ExpressionLanguageParser.py',347),
  ('string_literal -> STRING INTERP_START expression INTERP_END string_literal','string_literal',5,'p_string_literal','ExpressionLanguageParser.py',348),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParser.py',352),
]
