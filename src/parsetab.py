
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANLESS_EQUALGREATER_THANGREATER_EQUALleftEQUALNOT_EQUALTIPO_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSNOTTILDEAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID statements ENDfunction_list    :   function \n|   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END\n|   DEF ID opt_return_type NEWLINE statements ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   string_literal\n|   CHAR\n|   TRUE\n|   FALSEstring_literal   :   STRING\n|   STRING INTERP_START expression INTERP_END string_literalvariable_declaration :   ID COLON types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesfunction_call    :   ID LPAREN expression_list RPAREN\n|   ID LPAREN RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionstatements   :   statement\n|   statement NEWLINE statementsstatement    :   expression\n|   control_structure\n|   variable_declaration\n|   function_callcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement : IF if_condition statements opt_elsif opt_else ENDunless_statement : UNLESS if_condition statements opt_else ENDif_condition : expression\n| expression LBRACE statements RBRACEopt_elsif : elsif_list\n| emptyelsif_list : elsif_list elsif\n| elsifelsif : ELSIF if_condition statementsopt_else : ELSE statements\n| emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statementsuntil    :   UNTIL expression statementsloop :   LOOP statementsiterator :   expression DOT MULTI statements\n|   expression DOT EACH DO PIPE ID PIPE statements END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statementscase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements\n|   when_list WHEN expression statementsreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptyexpression   :   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expression\n|   ternary_expressionassignment_target    :   ID LBRACKET expression RBRACKET \n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   range_expression QMARK expression TCOLON expression\n|   range_expressionrange_expression :   logical_or_expression DOTDOT logical_or_expression\n|   logical_or_expression DOTDOTDOT logical_or_expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   multiplicative_expression PLUS additive_expression\n|   multiplicative_expression MINUS additive_expression multiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   primary_expressionprimary_expression   :   LPAREN expression RPAREN\n|   array_literal\n|   literal\n|   IDarray_literal    :   LBRACKET opt_expression_list RBRACKETempty :'
    
_lr_action_items = {'REQUIRE':([0,6,24,],[10,10,-18,]),'CONSTANT':([0,2,6,7,20,24,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,126,127,128,130,131,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,258,259,],[11,11,-17,11,-16,-18,-21,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-161,-169,-162,-163,-164,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-134,-67,]),'MODULE':([0,2,3,6,7,8,14,20,21,24,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,126,127,128,130,131,138,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,258,259,],[12,12,12,-17,-20,12,12,-16,-19,-18,-21,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-161,-169,-162,-163,-164,-24,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-134,-67,]),'DEF':([0,2,3,4,6,7,8,9,14,15,17,20,21,22,24,28,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,126,127,128,130,131,138,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,257,258,259,283,],[13,13,13,13,-17,-20,-23,13,13,13,13,-16,-19,-22,-18,13,-21,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-161,-169,-162,-163,-164,-24,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-28,-134,-67,-27,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,96,126,127,128,130,131,138,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,257,258,259,283,],[0,-12,-13,-14,-15,-17,-20,-23,-25,-6,-7,-9,-8,-10,-11,-16,-19,-22,-26,-18,-2,-3,-4,-5,-21,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-1,-161,-169,-162,-163,-164,-24,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-28,-134,-67,-27,]),'STRING':([10,25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,94,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,225,226,227,232,233,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[24,63,63,-124,-130,-169,63,-135,-138,-139,-141,-143,-147,-152,63,63,-155,-159,63,63,-165,63,-167,-168,-60,-61,-62,-63,-64,-65,-66,63,63,63,63,63,63,63,63,63,160,-38,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-161,-169,-162,63,-163,-164,63,160,63,63,63,63,-97,63,63,63,63,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,63,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,63,63,63,160,63,-171,63,63,63,63,63,63,63,63,63,-134,-67,63,63,-98,63,63,63,63,63,]),'ASSIGN':([11,34,38,64,107,153,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,209,211,212,230,253,261,],[25,97,-132,135,-133,226,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,234,-71,236,-131,274,-72,]),'ID':([12,13,25,26,33,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,92,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,136,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,228,232,234,235,236,242,243,245,250,255,258,259,263,264,266,271,272,274,276,286,288,290,],[26,27,36,64,-124,-130,-169,36,108,-135,-138,-139,-141,-143,-147,-152,127,127,-155,-159,127,127,-165,36,-167,-168,-60,-61,-62,-63,-64,-65,-66,36,36,36,36,36,36,36,36,64,153,-38,36,36,36,36,36,36,36,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-161,-169,-162,127,-163,-164,36,36,211,36,64,64,-97,64,64,64,64,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,36,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,64,36,64,36,-171,153,36,36,211,36,36,64,64,36,64,-134,-67,277,278,64,64,-98,36,36,64,36,64,]),'UNDERSCORE':([25,26,33,35,36,37,39,40,41,42,43,44,45,46,49,50,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,126,127,128,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[38,38,-124,-130,-169,38,38,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,38,-167,-168,-60,-61,-62,-63,-64,-65,-66,38,38,38,38,38,38,38,38,38,-38,38,38,38,38,38,38,38,-161,-169,-162,-163,-164,38,38,38,38,38,-97,38,38,38,38,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,38,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,38,38,38,38,-171,38,38,38,38,38,38,38,38,-134,-67,38,38,-98,38,38,38,38,38,]),'ASTERISK':([25,26,33,35,36,37,39,40,41,42,43,44,45,46,49,50,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,126,127,128,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[39,39,-124,-130,-169,39,39,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,39,-167,-168,-60,-61,-62,-63,-64,-65,-66,39,39,39,39,39,39,39,39,39,-38,39,39,39,39,39,39,39,-161,-169,-162,-163,-164,39,39,39,39,39,-97,39,39,39,39,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,39,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,39,39,39,39,-171,39,39,39,39,39,39,39,39,-134,-67,39,39,-98,39,39,39,39,39,]),'PLUS':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[47,47,-124,-130,-169,47,-135,-138,-139,-141,-143,-147,121,47,47,-155,-159,47,47,-165,47,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,47,47,47,47,47,47,47,47,47,-38,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-161,-169,-162,47,-163,-164,47,47,47,47,47,-97,47,47,47,47,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,47,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,47,47,47,47,-171,47,47,47,47,47,47,47,47,-134,-67,47,47,-98,47,47,47,47,47,]),'MINUS':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[48,48,-124,-130,-169,48,-135,-138,-139,-141,-143,-147,122,48,48,-155,-159,48,48,-165,48,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,48,48,48,48,48,48,48,48,48,-38,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-161,-169,-162,48,-163,-164,48,48,48,48,48,-97,48,48,48,48,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,48,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,48,48,48,48,-171,48,48,48,48,48,48,48,48,-134,-67,48,48,-98,48,48,48,48,48,]),'EXCLAMATION':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[51,51,-124,-130,-169,51,-135,-138,-139,-141,-143,-147,-152,51,51,-155,-159,51,51,-165,51,-167,-168,-60,-61,-62,-63,-64,-65,-66,51,51,51,51,51,51,51,51,51,-38,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-161,-169,-162,51,-163,-164,51,51,51,51,51,-97,51,51,51,51,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,51,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,51,51,51,51,-171,51,51,51,51,51,51,51,51,-134,-67,51,51,-98,51,51,51,51,51,]),'TILDE':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[52,52,-124,-130,-169,52,-135,-138,-139,-141,-143,-147,-152,52,52,-155,-159,52,52,-165,52,-167,-168,-60,-61,-62,-63,-64,-65,-66,52,52,52,52,52,52,52,52,52,-38,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-161,-169,-162,52,-163,-164,52,52,52,52,52,-97,52,52,52,52,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,52,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,52,52,52,52,-171,52,52,52,52,52,52,52,52,-134,-67,52,52,-98,52,52,52,52,52,]),'LPAREN':([25,26,27,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[54,54,92,-124,-130,-169,54,-135,-138,-139,-141,-143,-147,-152,54,54,-155,-159,54,54,-165,54,-167,-168,-60,-61,-62,-63,-64,-65,-66,137,54,54,54,54,54,54,54,54,54,-38,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-161,-169,-162,54,-163,-164,54,54,54,54,54,-97,54,54,54,54,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,54,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,54,54,54,54,-171,54,54,54,54,54,54,54,54,-134,-67,54,54,-98,54,54,54,54,54,]),'LBRACKET':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[37,37,-124,-130,102,37,-135,-138,-139,-141,-143,-147,-152,37,37,-155,-159,37,37,-165,37,-167,-168,-60,-61,-62,-63,-64,-65,-66,102,37,37,37,37,37,37,37,37,37,-38,37,37,37,37,37,37,102,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-161,-169,-162,37,-163,-164,37,37,37,37,37,-97,37,37,37,37,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,37,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,37,37,37,37,-171,37,37,37,37,37,37,37,37,-134,-67,37,37,-98,37,37,37,37,37,]),'INTNUMBER':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[57,57,-124,-130,-169,57,-135,-138,-139,-141,-143,-147,-152,57,57,-155,-159,57,57,-165,57,-167,-168,-60,-61,-62,-63,-64,-65,-66,57,57,57,57,57,57,57,57,57,-38,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-161,-169,-162,57,-163,-164,57,57,57,57,57,-97,57,57,57,57,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,57,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,57,57,57,57,-171,57,57,57,57,57,57,57,57,-134,-67,57,57,-98,57,57,57,57,57,]),'FLOATNUMBER':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[58,58,-124,-130,-169,58,-135,-138,-139,-141,-143,-147,-152,58,58,-155,-159,58,58,-165,58,-167,-168,-60,-61,-62,-63,-64,-65,-66,58,58,58,58,58,58,58,58,58,-38,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-161,-169,-162,58,-163,-164,58,58,58,58,58,-97,58,58,58,58,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,58,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,58,58,58,58,-171,58,58,58,58,58,58,58,58,-134,-67,58,58,-98,58,58,58,58,58,]),'CHAR':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,94,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,225,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[60,60,-124,-130,-169,60,-135,-138,-139,-141,-143,-147,-152,60,60,-155,-159,60,60,-165,60,-167,-168,-60,-61,-62,-63,-64,-65,-66,60,60,60,60,60,60,60,60,60,161,-38,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-161,-169,-162,60,-163,-164,60,161,60,60,60,60,-97,60,60,60,60,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,60,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,60,60,60,161,60,-171,60,60,60,60,60,60,60,60,-134,-67,60,60,-98,60,60,60,60,60,]),'TRUE':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[61,61,-124,-130,-169,61,-135,-138,-139,-141,-143,-147,-152,61,61,-155,-159,61,61,-165,61,-167,-168,-60,-61,-62,-63,-64,-65,-66,61,61,61,61,61,61,61,61,61,-38,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-161,-169,-162,61,-163,-164,61,61,61,61,61,-97,61,61,61,61,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,61,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,61,61,61,61,-171,61,61,61,61,61,61,61,61,-134,-67,61,61,-98,61,61,61,61,61,]),'FALSE':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,83,84,85,86,87,88,89,90,91,95,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,137,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,219,221,226,227,232,234,236,242,243,245,250,255,258,259,266,271,272,274,276,286,288,290,],[62,62,-124,-130,-169,62,-135,-138,-139,-141,-143,-147,-152,62,62,-155,-159,62,62,-165,62,-167,-168,-60,-61,-62,-63,-64,-65,-66,62,62,62,62,62,62,62,62,62,-38,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-161,-169,-162,62,-163,-164,62,62,62,62,62,-97,62,62,62,62,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,62,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,62,62,62,62,-171,62,62,62,62,62,62,62,62,-134,-67,62,62,-98,62,62,62,62,62,]),'CASE':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[83,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,83,-38,-161,-169,-162,-163,-164,83,83,-97,83,83,83,83,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,83,83,-171,83,83,83,-134,-67,83,83,-98,83,83,]),'RETURN':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[84,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,84,-38,-161,-169,-162,-163,-164,84,84,-97,84,84,84,84,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,84,84,-171,84,84,84,-134,-67,84,84,-98,84,84,]),'BREAK':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[85,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,85,-38,-161,-169,-162,-163,-164,85,85,-97,85,85,85,85,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,85,85,-171,85,85,85,-134,-67,85,85,-98,85,85,]),'NEXT':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[86,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,86,-38,-161,-169,-162,-163,-164,86,86,-97,86,86,86,86,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,86,86,-171,86,86,86,-134,-67,86,86,-98,86,86,]),'IF':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[87,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,87,-38,-161,-169,-162,-163,-164,87,87,-97,87,87,87,87,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,87,87,-171,87,87,87,-134,-67,87,87,-98,87,87,]),'UNLESS':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[88,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,88,-38,-161,-169,-162,-163,-164,88,88,-97,88,88,88,88,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,88,88,-171,88,88,88,-134,-67,88,88,-98,88,88,]),'WHILE':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[89,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,89,-38,-161,-169,-162,-163,-164,89,89,-97,89,89,89,89,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,89,89,-171,89,89,89,-134,-67,89,89,-98,89,89,]),'UNTIL':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[90,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,90,-38,-161,-169,-162,-163,-164,90,90,-97,90,90,90,90,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,90,90,-171,90,90,90,-134,-67,90,90,-98,90,90,]),'LOOP':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,91,95,126,127,128,130,131,139,147,148,149,150,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,216,221,227,243,245,255,258,259,266,271,272,286,290,],[91,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,91,-38,-161,-169,-162,-163,-164,91,91,-97,91,91,91,91,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,91,91,-171,91,91,91,-134,-67,91,91,-98,91,91,]),'COLON':([27,64,153,227,],[94,134,225,94,]),'NEWLINE':([27,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,93,95,126,127,128,130,131,142,143,144,145,146,152,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,214,215,223,224,237,238,258,259,260,265,273,280,284,285,291,292,293,],[-171,-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,139,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-106,-107,-108,-109,-171,-171,-171,158,-38,-161,-169,-162,-163,-164,-119,-122,-123,-120,-121,-112,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-69,-76,-82,-110,-111,-75,-113,-134,-67,-68,-116,-96,-95,-73,-70,-74,-114,-115,]),'DOT':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,67,126,127,128,130,131,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,258,259,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,140,-161,-169,-162,-163,-164,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-134,-67,]),'END':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,126,127,128,130,131,142,143,144,145,146,152,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,214,215,218,220,222,223,224,229,237,238,241,244,246,247,248,249,252,258,259,260,265,267,268,269,270,273,275,279,280,281,284,285,289,291,292,293,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,138,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-106,-107,-108,-109,-171,-171,-171,-161,-169,-162,-163,-164,-119,-122,-123,-120,-121,-112,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-69,-76,-82,-171,-171,-171,-110,-111,257,-75,-113,265,-105,-171,-99,-100,-102,273,-134,-67,-68,-116,-104,-117,280,-101,-96,283,-118,-95,-103,-73,-70,292,-74,-114,-115,]),'COMMA':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,104,106,126,127,128,130,131,153,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,213,231,253,254,258,259,262,282,284,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,136,188,-79,-161,-169,-162,-163,-164,-33,228,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,235,188,-80,-34,-35,-134,-67,276,-36,288,]),'RBRACKET':([33,35,36,37,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,103,104,105,106,126,127,128,130,131,181,182,183,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,231,258,259,],[-124,-130,-169,-171,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,187,-77,-78,-79,-161,-169,-162,-163,-164,-125,-126,-127,-128,-129,230,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-80,-134,-67,]),'RPAREN':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,92,106,126,127,128,130,131,132,137,153,154,155,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,213,231,253,254,256,258,259,282,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-171,-79,-161,-169,-162,-163,-164,207,214,-33,227,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,237,-80,-34,-35,-32,-134,-67,-36,]),'WHEN':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,126,127,128,130,131,141,142,143,144,145,146,152,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,214,215,218,223,224,237,238,258,259,260,265,268,273,279,280,284,285,291,292,293,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-106,-107,-108,-109,-171,-171,-171,-161,-169,-162,-163,-164,219,-119,-122,-123,-120,-121,-112,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-69,-76,-82,242,-110,-111,-75,-113,-134,-67,-68,-116,-117,-96,-118,-95,-73,-70,-74,-114,-115,]),'ELSIF':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,126,127,128,130,131,142,143,144,145,146,152,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,214,215,220,223,224,237,238,247,249,258,259,260,265,270,273,280,281,284,285,291,292,293,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-106,-107,-108,-109,-171,-171,-171,-161,-169,-162,-163,-164,-119,-122,-123,-120,-121,-112,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-69,-76,-82,250,-110,-111,-75,-113,250,-102,-134,-67,-68,-116,-101,-96,-95,-103,-73,-70,-74,-114,-115,]),'ELSE':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,126,127,128,130,131,142,143,144,145,146,152,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,214,215,218,220,222,223,224,237,238,246,247,248,249,258,259,260,265,268,270,273,279,280,281,284,285,291,292,293,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-106,-107,-108,-109,-171,-171,-171,-161,-169,-162,-163,-164,-119,-122,-123,-120,-121,-112,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-69,-76,-82,243,-171,243,-110,-111,-75,-113,243,-99,-100,-102,-134,-67,-68,-116,-117,-101,-96,-118,-95,-103,-73,-70,-74,-114,-115,]),'RBRACE':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,126,127,128,130,131,142,143,144,145,146,152,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,214,215,223,224,237,238,251,258,259,260,265,273,280,284,285,287,291,292,293,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-106,-107,-108,-109,-171,-171,-171,-161,-169,-162,-163,-164,-119,-122,-123,-120,-121,-112,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-69,-76,-82,-110,-111,-75,-113,272,-134,-67,-68,-116,-96,-95,-73,-70,290,-74,-114,-115,]),'LBRACE':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,126,127,128,130,131,148,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,217,258,259,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-161,-169,-162,-163,-164,221,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,240,-134,-67,]),'TCOLON':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,126,127,128,130,131,181,182,183,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,258,259,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-161,-169,-162,-163,-164,-125,-126,-127,-128,-129,-170,232,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-134,-67,]),'INTERP_END':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,126,127,128,130,131,181,182,183,184,185,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,258,259,],[-124,-130,-169,-135,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-161,-169,-162,-163,-164,-125,-126,-127,-128,-129,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,233,-134,-67,]),'PLUS_ASSIGN':([34,38,107,230,],[98,-132,-133,-131,]),'MINUS_ASSIGN':([34,38,107,230,],[99,-132,-133,-131,]),'MULTI_ASSIGN':([34,38,107,230,],[100,-132,-133,-131,]),'DIVIDE_ASSIGN':([34,38,107,230,],[101,-132,-133,-131,]),'POTENCIACAO':([36,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,203,204,205,206,207,259,],[-169,129,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,129,129,129,-160,-166,-67,]),'MULTI':([36,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,140,187,203,204,205,206,207,259,],[-169,123,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,216,-170,-156,-157,-158,-160,-166,-67,]),'DIVIDE':([36,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,203,204,205,206,207,259,],[-169,124,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,-156,-157,-158,-160,-166,-67,]),'MODULO':([36,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,203,204,205,206,207,259,],[-169,125,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,-156,-157,-158,-160,-166,-67,]),'GREATER_THAN':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,117,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,117,117,117,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'LESS_THAN':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,118,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,118,118,118,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'GREATER_EQUAL':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,119,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,119,119,119,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'LESS_EQUAL':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,120,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,120,120,120,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'EQUAL':([36,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,114,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,114,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'NOT_EQUAL':([36,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,115,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,115,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'TIPO_EQUAL':([36,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,116,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,116,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'AND':([36,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,113,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,113,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'DOTDOT':([36,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,110,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'DOTDOTDOT':([36,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,111,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'OR':([36,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,112,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,112,112,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'QMARK':([36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,126,127,128,130,131,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,259,],[-169,109,-138,-139,-141,-143,-147,-152,-155,-159,-165,-167,-168,-60,-61,-62,-63,-64,-65,-66,-169,-161,-169,-162,-163,-164,-170,-136,-137,-140,-142,-144,-145,-146,-148,-149,-150,-151,-153,-154,-156,-157,-158,-160,-166,-67,]),'INTERP_START':([63,],[133,]),'NIL':([94,134,225,],[162,162,162,]),'INT':([94,134,225,],[166,166,166,]),'INT8':([94,134,225,],[167,167,167,]),'INT16':([94,134,225,],[168,168,168,]),'INT32':([94,134,225,],[169,169,169,]),'INT64':([94,134,225,],[170,170,170,]),'INT128':([94,134,225,],[171,171,171,]),'UINT8':([94,134,225,],[172,172,172,]),'UINT16':([94,134,225,],[173,173,173,]),'UINT32':([94,134,225,],[174,174,174,]),'UINT64':([94,134,225,],[175,175,175,]),'UINT128':([94,134,225,],[176,176,176,]),'FLOAT':([94,134,225,],[177,177,177,]),'FLOAT32':([94,134,225,],[178,178,178,]),'FLOAT64':([94,134,225,],[179,179,179,]),'BOOL':([94,134,225,],[180,180,180,]),'EACH':([140,],[217,]),'DO':([217,],[239,]),'PIPE':([239,240,277,278,],[263,264,286,287,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,96,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[32,67,106,132,141,143,143,143,148,148,150,151,67,181,182,183,184,185,186,189,208,210,106,67,67,67,67,67,67,231,67,245,67,254,258,260,262,266,67,67,148,67,67,67,282,284,67,284,67,]),'assignment_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_target':([25,26,37,39,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[34,34,34,107,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ternary_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'range_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'logical_or_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,190,191,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'logical_and_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,192,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'equality_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,193,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'relational_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,194,195,196,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'additive_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,197,198,199,200,201,202,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'multiplicative_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'potenciacao_expression':([25,26,37,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,203,204,205,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'unary_expression':([25,26,37,47,48,51,52,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[50,50,50,126,128,130,131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,206,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'primary_expression':([25,26,37,47,48,51,52,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'array_literal':([25,26,37,47,48,51,52,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'literal':([25,26,37,47,48,51,52,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'string_literal':([25,26,37,47,48,51,52,54,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,133,135,137,139,147,149,150,151,158,188,216,219,221,226,232,233,234,236,242,243,245,250,255,266,271,274,276,286,288,290,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,259,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'statements':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[65,152,215,220,222,223,224,229,238,251,267,268,275,279,281,289,293,]),'statement':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'control_structure':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'variable_declaration':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'function_call':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'conditional':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'loop_structure':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'case_structure':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'return_statement':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'break_statement':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'next_statement':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'if_statement':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'unless_statement':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'while':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'until':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'loop':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'iterator':([26,91,139,147,149,150,151,158,216,221,243,245,255,266,271,286,290,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'opt_return_type':([27,227,],[93,255,]),'empty':([27,37,84,85,86,92,218,220,222,227,246,],[95,105,144,144,144,156,244,248,244,95,244,]),'opt_expression_list':([37,],[103,]),'expression_list':([37,137,],[104,213,]),'opt_expression':([84,85,86,],[142,145,146,]),'if_condition':([87,88,250,],[147,149,271,]),'opt_argument_list':([92,],[154,]),'argument_list':([92,228,],[155,256,]),'argument':([92,228,],[157,157,]),'types':([94,134,225,],[159,209,253,]),'integer':([94,134,225,],[163,163,163,]),'float':([94,134,225,],[164,164,164,]),'boolean':([94,134,225,],[165,165,165,]),'list_of_identifiers':([136,235,],[212,261,]),'when_list':([141,],[218,]),'opt_else':([218,222,246,],[241,252,269,]),'opt_elsif':([220,],[246,]),'elsif_list':([220,],[247,]),'elsif':([220,247,],[249,270,]),'list_of_values':([276,288,],[285,291,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParser.py',25),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParser.py',26),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParser.py',27),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',28),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',29),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParser.py',30),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParser.py',31),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParser.py',32),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParser.py',33),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParser.py',34),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParser.py',35),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParser.py',36),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParser.py',37),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParser.py',38),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParser.py',39),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParser.py',80),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParser.py',81),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParser.py',88),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParser.py',93),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParser.py',94),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParser.py',102),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParser.py',108),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParser.py',109),
  ('module -> MODULE ID statements END','module',4,'p_module','ExpressionLanguageParser.py',117),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParser.py',122),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParser.py',123),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END','function',8,'p_function','ExpressionLanguageParser.py',131),
  ('function -> DEF ID opt_return_type NEWLINE statements END','function',6,'p_function','ExpressionLanguageParser.py',132),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',140),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',141),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParser.py',145),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParser.py',146),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParser.py',154),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParser.py',155),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParser.py',156),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParser.py',157),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParser.py',169),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParser.py',170),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParser.py',176),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParser.py',177),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParser.py',178),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParser.py',179),
  ('types -> float','types',1,'p_types','ExpressionLanguageParser.py',180),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParser.py',181),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParser.py',184),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParser.py',185),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParser.py',186),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParser.py',187),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParser.py',188),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParser.py',189),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParser.py',190),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParser.py',191),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParser.py',192),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParser.py',193),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParser.py',194),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParser.py',197),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParser.py',198),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParser.py',199),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParser.py',202),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',205),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',206),
  ('literal -> string_literal','literal',1,'p_literal','ExpressionLanguageParser.py',207),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParser.py',208),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParser.py',209),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParser.py',210),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','ExpressionLanguageParser.py',213),
  ('string_literal -> STRING INTERP_START expression INTERP_END string_literal','string_literal',5,'p_string_literal','ExpressionLanguageParser.py',214),
  ('variable_declaration -> ID COLON types ASSIGN expression','variable_declaration',5,'p_variable_declaration','ExpressionLanguageParser.py',218),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParser.py',219),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParser.py',220),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParser.py',223),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParser.py',224),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParser.py',227),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParser.py',228),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParser.py',234),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParser.py',235),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',238),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',239),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParser.py',242),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParser.py',243),
  ('statements -> statement','statements',1,'p_statements','ExpressionLanguageParser.py',248),
  ('statements -> statement NEWLINE statements','statements',3,'p_statements','ExpressionLanguageParser.py',249),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParser.py',252),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParser.py',253),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParser.py',254),
  ('statement -> function_call','statement',1,'p_statement','ExpressionLanguageParser.py',255),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',258),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',259),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',260),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',261),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',262),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',263),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',266),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',267),
  ('if_statement -> IF if_condition statements opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParser.py',270),
  ('unless_statement -> UNLESS if_condition statements opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParser.py',273),
  ('if_condition -> expression','if_condition',1,'p_if_condition','ExpressionLanguageParser.py',276),
  ('if_condition -> expression LBRACE statements RBRACE','if_condition',4,'p_if_condition','ExpressionLanguageParser.py',277),
  ('opt_elsif -> elsif_list','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',280),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',281),
  ('elsif_list -> elsif_list elsif','elsif_list',2,'p_elsif_list','ExpressionLanguageParser.py',284),
  ('elsif_list -> elsif','elsif_list',1,'p_elsif_list','ExpressionLanguageParser.py',285),
  ('elsif -> ELSIF if_condition statements','elsif',3,'p_elsif','ExpressionLanguageParser.py',288),
  ('opt_else -> ELSE statements','opt_else',2,'p_opt_else','ExpressionLanguageParser.py',291),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParser.py',292),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',295),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',296),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',297),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',298),
  ('while -> WHILE expression statements','while',3,'p_while','ExpressionLanguageParser.py',301),
  ('until -> UNTIL expression statements','until',3,'p_until','ExpressionLanguageParser.py',304),
  ('loop -> LOOP statements','loop',2,'p_loop','ExpressionLanguageParser.py',307),
  ('iterator -> expression DOT MULTI statements','iterator',4,'p_iterator','ExpressionLanguageParser.py',311),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements END','iterator',9,'p_iterator','ExpressionLanguageParser.py',312),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements','iterator',9,'p_iterator','ExpressionLanguageParser.py',313),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParser.py',316),
  ('when_list -> WHEN expression statements','when_list',3,'p_when_list','ExpressionLanguageParser.py',319),
  ('when_list -> when_list WHEN expression statements','when_list',4,'p_when_list','ExpressionLanguageParser.py',320),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',323),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParser.py',326),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParser.py',329),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',332),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',333),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParser.py',337),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',340),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',341),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',342),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',343),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',344),
  ('assignment_expression -> ternary_expression','assignment_expression',1,'p_assignment_expression','ExpressionLanguageParser.py',345),
  ('assignment_target -> ID LBRACKET expression RBRACKET','assignment_target',4,'p_assignment_target','ExpressionLanguageParser.py',348),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',349),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParser.py',350),
  ('ternary_expression -> range_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParser.py',353),
  ('ternary_expression -> range_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParser.py',354),
  ('range_expression -> logical_or_expression DOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',357),
  ('range_expression -> logical_or_expression DOTDOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',358),
  ('range_expression -> logical_or_expression','range_expression',1,'p_range_expression','ExpressionLanguageParser.py',359),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParser.py',362),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParser.py',363),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParser.py',366),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParser.py',367),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParser.py',370),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',371),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',372),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',373),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParser.py',377),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',378),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',379),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',380),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',381),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParser.py',384),
  ('additive_expression -> multiplicative_expression PLUS additive_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',385),
  ('additive_expression -> multiplicative_expression MINUS additive_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',386),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParser.py',389),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',390),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',391),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',392),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParser.py',395),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParser.py',396),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',399),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',400),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',401),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',402),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParser.py',403),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','ExpressionLanguageParser.py',407),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',408),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',409),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',410),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParser.py',413),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParser.py',417),
]
