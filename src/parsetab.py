
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNPLUS_ASSIGNMINUS_ASSIGNMULTI_ASSIGNDIVIDE_ASSIGNMODULO_ASSIGNrightQMARKTCOLONleftORleftANDnonassocEQUALNOT_EQUALTIPO_EQUALnonassocGREATER_THANLESS_THANGREATER_EQUALLESS_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSEXCLAMATIONTILDEnonassocDOTDOTDOTDOTDOTleftDOTleftLBRACKETRBRACKETAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID NEWLINE statements ENDfunction_list    :   function \n|   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements_block END\n|   DEF ID opt_return_type NEWLINE statements_block ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   string_literal\n|   CHAR\n|   TRUE\n|   FALSEfunction_call    :   ID LPAREN expression_list RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionvariable_declaration :   ID types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesexpression   :   ternary_expression\n|   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expressionassignment_target    :   postfix_expression\n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   logical_or_expression QMARK expression TCOLON expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expression multiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   postfix_expressionpostfix_expression   :   primary_expression postfix_suffixespostfix_suffixes :   postfix_suffix postfix_suffixes\n|   postfix_suffixpostfix_suffix   :   LBRACKET expression RBRACKET\n|   DOTDOT primary_expression\n|   DOTDOTDOT primary_expressionprimary_expression   :   expression_between_parentesis\n|   array_literal\n|   literal\n|   IDexpression_between_parentesis : LPAREN expression RPARENarray_literal    :   LBRACKET opt_expression_list RBRACKETstring_literal : STRING\n| STRING INTERP_START expression INTERP_END string_literalstatements   :   statement\n|   statement NEWLINE statementsstatement    :   expression\n|   control_structure\n|   variable_declarationcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement :   IF expression statements_block opt_elsif opt_else ENDunless_statement :   UNLESS expression statements_block opt_else ENDopt_elsif    :   ELSIF expression statements_block opt_elsif\n| emptyopt_else :   ELSE statements_block\n|   emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statements_blockuntil    :   UNTIL expression statements_blockloop :   LOOP statements_blockiterator :   expression DOT MULTI statements_block\n|   expression DOT EACH DO PIPE ID PIPE statements_block END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements_blockcase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements_block\n|   when_list WHEN expression statements_blockreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptystatements_block :   statementsempty :'
    
_lr_action_items = {'REQUIRE':([0,6,24,],[10,10,-18,]),'CONSTANT':([0,2,6,7,20,24,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,239,240,],[11,11,-17,11,-16,-18,-21,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-88,-130,]),'MODULE':([0,2,3,6,7,8,14,20,21,24,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,197,218,239,240,],[12,12,12,-17,-20,12,12,-16,-19,-18,-21,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-24,-120,-88,-130,]),'DEF':([0,2,3,4,6,7,8,9,14,15,17,20,21,22,24,28,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,197,218,238,239,240,270,],[13,13,13,13,-17,-20,-23,13,13,13,13,-16,-19,-22,-18,13,-21,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-24,-120,-28,-88,-130,-27,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,70,84,85,103,104,105,108,109,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,197,218,238,239,240,270,],[0,-12,-13,-14,-15,-17,-20,-23,-25,-6,-7,-9,-8,-10,-11,-16,-19,-22,-26,-18,-2,-3,-4,-5,-21,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-1,-117,-119,-112,-116,-113,-114,-115,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-24,-120,-28,-88,-130,-27,]),'STRING':([10,25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,110,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,212,213,214,217,218,220,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[24,60,-78,-79,-89,-90,-116,60,-92,-94,-123,-124,-125,-126,-98,60,60,-60,-61,-62,-63,-64,-65,-103,60,60,-129,-106,-110,60,60,60,144,-38,60,60,60,60,60,60,60,60,60,60,60,-117,-119,60,60,60,60,60,60,60,60,60,60,60,60,-112,-116,-113,60,60,-114,-115,144,60,60,60,60,60,60,60,60,60,60,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,60,-107,-108,-109,-111,60,60,60,60,60,60,144,60,-169,60,-120,60,60,60,60,60,-88,-130,60,60,60,60,60,60,60,60,60,60,60,60,]),'ASSIGN':([11,36,38,39,44,45,46,47,51,52,53,54,55,56,60,79,80,84,85,110,137,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,176,178,179,186,187,194,218,223,224,234,240,258,],[25,73,-85,-86,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,-87,-85,-117,-119,195,213,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-118,-121,-122,-127,-128,221,-120,-74,243,256,-130,-75,]),'ID':([12,13,25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,196,198,206,207,208,209,213,214,215,217,218,221,226,229,236,239,240,242,243,248,249,251,253,256,260,261,263,267,271,279,282,284,],[26,27,47,-78,-79,-89,-90,-116,47,-92,-94,-123,-124,-125,-126,-98,47,47,-60,-61,-62,-63,-64,-65,-103,47,47,-129,-106,-110,47,47,110,137,-38,47,47,47,47,47,47,47,47,47,47,47,-117,-119,47,47,47,47,47,47,47,47,47,47,47,47,-112,-116,-113,47,47,-114,-115,47,47,47,47,47,47,47,47,110,110,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,47,-107,-108,-109,-111,47,223,110,110,110,110,110,47,-169,137,47,-120,47,110,47,110,-88,-130,223,47,47,110,110,47,47,272,273,110,110,47,110,47,110,]),'UNDERSCORE':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,65,69,71,73,74,75,76,77,84,85,86,103,104,105,106,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[39,-78,-79,-89,-90,-116,39,-92,-94,-123,-124,-125,-126,-98,39,39,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,39,-38,39,39,39,39,39,39,-117,-119,39,-112,-116,-113,39,-114,-115,39,39,39,39,39,39,39,39,39,39,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,39,-107,-108,-109,-111,39,39,39,39,39,39,39,-169,39,-120,39,39,39,39,-88,-130,39,39,39,39,39,39,39,39,39,39,39,39,]),'ASTERISK':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,65,69,71,73,74,75,76,77,84,85,86,103,104,105,106,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[40,-78,-79,-89,-90,-116,40,-92,-94,-123,-124,-125,-126,-98,40,40,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,40,-38,40,40,40,40,40,40,-117,-119,40,-112,-116,-113,40,-114,-115,40,40,40,40,40,40,40,40,40,40,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,40,-107,-108,-109,-111,40,40,40,40,40,40,40,-169,40,-120,40,40,40,40,-88,-130,40,40,40,40,40,40,40,40,40,40,40,40,]),'LPAREN':([25,27,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[49,66,-78,-79,-89,-90,-116,49,-92,-94,-123,-124,-125,-126,-98,49,49,-60,-61,-62,-63,-64,-65,-103,49,49,-129,-106,-110,49,49,49,-38,49,49,49,49,49,49,49,49,49,49,49,-117,-119,49,49,49,49,49,49,49,49,49,49,49,49,-112,-116,-113,49,49,-114,-115,49,49,49,49,49,49,49,49,49,49,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,49,-107,-108,-109,-111,49,49,49,49,49,49,49,-169,49,-120,49,49,49,49,-88,-130,49,49,49,49,49,49,49,49,49,49,49,49,]),'LBRACKET':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,110,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[50,-78,-79,-89,-90,-116,50,-92,86,-94,-123,-124,-125,-126,-98,50,50,-60,-61,-62,-63,-64,-65,-103,50,50,-129,-106,-110,50,50,50,-38,50,50,50,50,50,50,50,50,50,50,50,-117,86,50,50,50,50,50,50,50,50,50,50,50,50,-112,-116,-113,50,50,-114,-115,-126,50,50,50,50,50,50,50,50,50,50,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,50,-107,-108,-109,-111,50,50,50,50,50,50,50,-169,50,-120,50,50,50,50,-88,-130,50,50,50,50,50,50,50,50,50,50,50,50,]),'INTNUMBER':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[51,-78,-79,-89,-90,-116,51,-92,-94,-123,-124,-125,-126,-98,51,51,-60,-61,-62,-63,-64,-65,-103,51,51,-129,-106,-110,51,51,51,-38,51,51,51,51,51,51,51,51,51,51,51,-117,-119,51,51,51,51,51,51,51,51,51,51,51,51,-112,-116,-113,51,51,-114,-115,51,51,51,51,51,51,51,51,51,51,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,51,-107,-108,-109,-111,51,51,51,51,51,51,51,-169,51,-120,51,51,51,51,-88,-130,51,51,51,51,51,51,51,51,51,51,51,51,]),'FLOATNUMBER':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[52,-78,-79,-89,-90,-116,52,-92,-94,-123,-124,-125,-126,-98,52,52,-60,-61,-62,-63,-64,-65,-103,52,52,-129,-106,-110,52,52,52,-38,52,52,52,52,52,52,52,52,52,52,52,-117,-119,52,52,52,52,52,52,52,52,52,52,52,52,-112,-116,-113,52,52,-114,-115,52,52,52,52,52,52,52,52,52,52,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,52,-107,-108,-109,-111,52,52,52,52,52,52,52,-169,52,-120,52,52,52,52,-88,-130,52,52,52,52,52,52,52,52,52,52,52,52,]),'CHAR':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,110,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,212,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[54,-78,-79,-89,-90,-116,54,-92,-94,-123,-124,-125,-126,-98,54,54,-60,-61,-62,-63,-64,-65,-103,54,54,-129,-106,-110,54,54,54,145,-38,54,54,54,54,54,54,54,54,54,54,54,-117,-119,54,54,54,54,54,54,54,54,54,54,54,54,-112,-116,-113,54,54,-114,-115,145,54,54,54,54,54,54,54,54,54,54,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,54,-107,-108,-109,-111,54,54,54,54,54,54,145,54,-169,54,-120,54,54,54,54,-88,-130,54,54,54,54,54,54,54,54,54,54,54,54,]),'TRUE':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[55,-78,-79,-89,-90,-116,55,-92,-94,-123,-124,-125,-126,-98,55,55,-60,-61,-62,-63,-64,-65,-103,55,55,-129,-106,-110,55,55,55,-38,55,55,55,55,55,55,55,55,55,55,55,-117,-119,55,55,55,55,55,55,55,55,55,55,55,55,-112,-116,-113,55,55,-114,-115,55,55,55,55,55,55,55,55,55,55,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,55,-107,-108,-109,-111,55,55,55,55,55,55,55,-169,55,-120,55,55,55,55,-88,-130,55,55,55,55,55,55,55,55,55,55,55,55,]),'FALSE':([25,33,34,35,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[56,-78,-79,-89,-90,-116,56,-92,-94,-123,-124,-125,-126,-98,56,56,-60,-61,-62,-63,-64,-65,-103,56,56,-129,-106,-110,56,56,56,-38,56,56,56,56,56,56,56,56,56,56,56,-117,-119,56,56,56,56,56,56,56,56,56,56,56,56,-112,-116,-113,56,56,-114,-115,56,56,56,56,56,56,56,56,56,56,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,56,-107,-108,-109,-111,56,56,56,56,56,56,56,-169,56,-120,56,56,56,56,-88,-130,56,56,56,56,56,56,56,56,56,56,56,56,]),'PLUS':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[58,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,93,58,58,-60,-61,-62,-63,-64,-65,-103,58,58,-129,-106,-110,58,58,58,-38,58,58,58,58,58,58,58,58,58,58,58,-117,-119,58,58,58,58,58,58,58,58,58,58,-112,-116,-113,58,58,-114,-115,58,58,58,58,58,58,58,58,58,58,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,93,93,93,93,-104,-105,-127,-128,58,-107,-108,-109,-111,58,58,58,58,58,58,58,-169,58,-120,58,58,58,58,-88,-130,58,58,58,58,58,58,58,58,58,58,58,58,]),'MINUS':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[59,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,94,59,59,-60,-61,-62,-63,-64,-65,-103,59,59,-129,-106,-110,59,59,59,-38,59,59,59,59,59,59,59,59,59,59,59,-117,-119,59,59,59,59,59,59,59,59,59,59,-112,-116,-113,59,59,-114,-115,59,59,59,59,59,59,59,59,59,59,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,94,94,94,94,-104,-105,-127,-128,59,-107,-108,-109,-111,59,59,59,59,59,59,59,-169,59,-120,59,59,59,59,-88,-130,59,59,59,59,59,59,59,59,59,59,59,59,]),'EXCLAMATION':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[63,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,63,63,-60,-61,-62,-63,-64,-65,-103,63,63,-129,-106,-110,63,63,63,-38,63,63,63,63,63,63,63,63,63,63,63,-117,-119,63,63,63,63,63,63,63,63,63,63,-112,-116,-113,63,63,-114,-115,63,63,63,63,63,63,63,63,63,63,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,63,-107,-108,-109,-111,63,63,63,63,63,63,63,-169,63,-120,63,63,63,63,-88,-130,63,63,63,63,63,63,63,63,63,63,63,63,]),'TILDE':([25,33,34,35,37,38,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,81,82,83,84,85,86,89,90,91,92,93,94,100,101,102,103,104,105,106,107,108,109,128,129,130,131,132,133,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,195,198,206,207,208,209,213,214,217,218,221,226,229,236,239,240,243,248,249,251,253,256,263,267,271,279,282,284,],[64,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,64,64,-60,-61,-62,-63,-64,-65,-103,64,64,-129,-106,-110,64,64,64,-38,64,64,64,64,64,64,64,64,64,64,64,-117,-119,64,64,64,64,64,64,64,64,64,64,-112,-116,-113,64,64,-114,-115,64,64,64,64,64,64,64,64,64,64,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,64,-107,-108,-109,-111,64,64,64,64,64,64,64,-169,64,-120,64,64,64,64,-88,-130,64,64,64,64,64,64,64,64,64,64,64,64,]),'NEWLINE':([26,27,33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,67,69,84,85,103,104,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,201,202,203,204,205,210,211,218,222,225,232,233,239,240,241,244,262,268,275,277,278,285,286,287,],[65,-169,-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,142,-38,-117,-119,-112,-116,-113,-114,-115,198,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-150,-151,-152,-153,-169,-169,-169,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-163,-166,-167,-164,-165,-156,-168,-120,-72,-132,-154,-155,-88,-130,-71,-157,-160,-145,-144,-76,-73,-77,-158,-159,]),'COLON':([27,137,214,],[68,212,68,]),'RPAREN':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,66,84,85,95,103,104,105,108,109,137,138,139,140,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,234,235,237,239,240,269,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-169,-117,-119,186,-112,-116,-113,-114,-115,-33,214,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-34,-35,-32,-88,-130,-36,]),'COMMA':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,97,99,103,104,105,108,109,110,137,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,219,223,234,235,239,240,259,269,277,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,188,-69,-112,-116,-113,-114,-115,196,-33,215,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-70,242,-34,-35,-88,-130,271,-36,282,]),'RBRACKET':([33,34,35,37,38,41,43,44,45,46,47,48,50,51,52,53,54,55,56,57,60,61,62,84,85,96,97,98,99,103,104,105,108,109,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,219,239,240,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-169,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,187,-67,-68,-69,-112,-116,-113,-114,-115,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,218,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-70,-88,-130,]),'DOT':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,113,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,239,240,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,199,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-88,-130,]),'END':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,201,202,203,204,205,210,211,216,218,222,225,228,230,231,232,233,239,240,241,244,247,250,252,254,255,257,262,264,265,266,268,274,275,276,277,278,281,283,285,286,287,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,197,-131,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-150,-151,-152,-153,-169,-169,-169,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-163,-166,-167,-164,-165,-156,-168,238,-120,-72,-132,-169,-169,-169,-154,-155,-88,-130,-71,-157,262,-149,-169,-147,268,270,-160,-148,-161,275,-145,-162,-144,-169,-76,-73,-146,286,-77,-158,-159,]),'TCOLON':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,239,240,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,217,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-88,-130,]),'INTERP_END':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,218,239,240,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,220,-111,-120,-88,-130,]),'WHEN':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,200,201,202,203,204,205,210,211,218,222,225,228,232,233,239,240,241,244,262,265,268,274,275,277,278,285,286,287,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-131,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-150,-151,-152,-153,-169,-169,-169,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,229,-163,-166,-167,-164,-165,-156,-168,-120,-72,-132,248,-154,-155,-88,-130,-71,-157,-160,-161,-145,-162,-144,-76,-73,-77,-158,-159,]),'ELSIF':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,201,202,203,204,205,210,211,218,222,225,230,232,233,239,240,241,244,262,268,275,276,277,278,285,286,287,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-131,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-150,-151,-152,-153,-169,-169,-169,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-163,-166,-167,-164,-165,-156,-168,-120,-72,-132,253,-154,-155,-88,-130,-71,-157,-160,-145,-144,253,-76,-73,-77,-158,-159,]),'ELSE':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,201,202,203,204,205,210,211,218,222,225,228,230,231,232,233,239,240,241,244,252,254,262,265,268,274,275,276,277,278,281,285,286,287,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-131,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-150,-151,-152,-153,-169,-169,-169,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-163,-166,-167,-164,-165,-156,-168,-120,-72,-132,249,-169,249,-154,-155,-88,-130,-71,-157,249,-147,-160,-161,-145,-162,-144,-169,-76,-73,-146,-77,-158,-159,]),'CASE':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,128,-38,-117,-119,-112,-116,-113,-114,-115,128,128,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,128,128,128,128,128,-169,-120,128,128,-88,-130,128,128,128,128,128,128,]),'RETURN':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,129,-38,-117,-119,-112,-116,-113,-114,-115,129,129,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,129,129,129,129,129,-169,-120,129,129,-88,-130,129,129,129,129,129,129,]),'BREAK':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,130,-38,-117,-119,-112,-116,-113,-114,-115,130,130,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,130,130,130,130,130,-169,-120,130,130,-88,-130,130,130,130,130,130,130,]),'NEXT':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,131,-38,-117,-119,-112,-116,-113,-114,-115,131,131,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,131,131,131,131,131,-169,-120,131,131,-88,-130,131,131,131,131,131,131,]),'IF':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,132,-38,-117,-119,-112,-116,-113,-114,-115,132,132,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,132,132,132,132,132,-169,-120,132,132,-88,-130,132,132,132,132,132,132,]),'UNLESS':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,133,-38,-117,-119,-112,-116,-113,-114,-115,133,133,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,133,133,133,133,133,-169,-120,133,133,-88,-130,133,133,133,133,133,133,]),'WHILE':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,134,-38,-117,-119,-112,-116,-113,-114,-115,134,134,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,134,134,134,134,134,-169,-120,134,134,-88,-130,134,134,134,134,134,134,]),'UNTIL':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,135,-38,-117,-119,-112,-116,-113,-114,-115,135,135,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,135,135,135,135,135,-169,-120,135,135,-88,-130,135,135,135,135,135,135,]),'LOOP':([33,34,35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,65,69,84,85,103,104,105,108,109,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,198,206,207,208,209,214,218,226,236,239,240,249,251,263,267,279,284,],[-78,-79,-89,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,136,-38,-117,-119,-112,-116,-113,-114,-115,136,136,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-91,-80,-81,-82,-83,-84,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,136,136,136,136,136,-169,-120,136,136,-88,-130,136,136,136,136,136,136,]),'QMARK':([35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,166,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[71,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-91,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'OR':([35,37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,166,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[72,-90,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-91,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'PLUS_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,79,80,84,85,176,178,179,186,187,218,240,],[74,-85,-86,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,-87,-85,-117,-119,-118,-121,-122,-127,-128,-120,-130,]),'MINUS_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,79,80,84,85,176,178,179,186,187,218,240,],[75,-85,-86,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,-87,-85,-117,-119,-118,-121,-122,-127,-128,-120,-130,]),'MULTI_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,79,80,84,85,176,178,179,186,187,218,240,],[76,-85,-86,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,-87,-85,-117,-119,-118,-121,-122,-127,-128,-120,-130,]),'DIVIDE_ASSIGN':([36,38,39,44,45,46,47,51,52,53,54,55,56,60,79,80,84,85,176,178,179,186,187,218,240,],[77,-85,-86,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,-87,-85,-117,-119,-118,-121,-122,-127,-128,-120,-130,]),'AND':([37,38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,166,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[78,-116,-92,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,78,-93,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'POTENCIACAO':([38,44,45,46,47,51,52,53,54,55,56,60,61,62,84,85,103,104,105,108,109,176,178,179,186,187,189,190,191,193,218,240,],[-116,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,107,-110,-117,-119,-112,-116,-113,-114,-115,-118,-121,-122,-127,-128,107,107,107,-111,-120,-130,]),'MULTI':([38,44,45,46,47,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,176,178,179,184,185,186,187,189,190,191,193,199,218,240,],[-116,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,100,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-118,-121,-122,100,100,-127,-128,-107,-108,-109,-111,226,-120,-130,]),'DIVIDE':([38,44,45,46,47,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,176,178,179,184,185,186,187,189,190,191,193,218,240,],[-116,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,101,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-118,-121,-122,101,101,-127,-128,-107,-108,-109,-111,-120,-130,]),'MODULO':([38,44,45,46,47,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,176,178,179,184,185,186,187,189,190,191,193,218,240,],[-116,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,102,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,-118,-121,-122,102,102,-127,-128,-107,-108,-109,-111,-120,-130,]),'GREATER_THAN':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[-116,89,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,89,89,89,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'LESS_THAN':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[-116,90,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,90,90,90,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'GREATER_EQUAL':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[-116,91,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,91,91,91,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'LESS_EQUAL':([38,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[-116,92,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,92,92,92,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'EQUAL':([38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[-116,81,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,81,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'NOT_EQUAL':([38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[-116,82,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,82,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'TIPO_EQUAL':([38,41,43,44,45,46,47,48,51,52,53,54,55,56,57,60,61,62,84,85,103,104,105,108,109,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,190,191,193,218,240,],[-116,83,-94,-123,-124,-125,-126,-98,-60,-61,-62,-63,-64,-65,-103,-129,-106,-110,-117,-119,-112,-116,-113,-114,-115,83,-95,-96,-97,-118,-121,-122,-99,-100,-101,-102,-104,-105,-127,-128,-107,-108,-109,-111,-120,-130,]),'DOTDOT':([42,44,45,46,47,51,52,53,54,55,56,60,85,110,178,179,186,187,218,240,],[87,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,87,-126,-121,-122,-127,-128,-120,-130,]),'DOTDOTDOT':([42,44,45,46,47,51,52,53,54,55,56,60,85,110,178,179,186,187,218,240,],[88,-123,-124,-125,-126,-60,-61,-62,-63,-64,-65,-129,88,-126,-121,-122,-127,-128,-120,-130,]),'INTERP_START':([60,],[106,]),'NIL':([68,110,212,],[146,146,146,]),'INT':([68,110,212,],[150,150,150,]),'INT8':([68,110,212,],[151,151,151,]),'INT16':([68,110,212,],[152,152,152,]),'INT32':([68,110,212,],[153,153,153,]),'INT64':([68,110,212,],[154,154,154,]),'INT128':([68,110,212,],[155,155,155,]),'UINT8':([68,110,212,],[156,156,156,]),'UINT16':([68,110,212,],[157,157,157,]),'UINT32':([68,110,212,],[158,158,158,]),'UINT64':([68,110,212,],[159,159,159,]),'UINT128':([68,110,212,],[160,160,160,]),'FLOAT':([68,110,212,],[161,161,161,]),'FLOAT32':([68,110,212,],[162,162,162,]),'FLOAT64':([68,110,212,],[163,163,163,]),'BOOL':([68,110,212,],[164,164,164,]),'EACH':([199,],[227,]),'DO':([227,],[245,]),'LBRACE':([227,],[246,]),'PIPE':([245,246,272,273,],[260,261,279,280,]),'RBRACE':([280,],[284,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,70,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,49,50,65,71,73,74,75,76,77,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[32,95,99,113,165,167,168,169,170,171,177,192,200,202,202,202,206,207,208,209,113,113,219,222,113,113,113,113,113,235,239,241,113,251,113,259,263,113,113,267,269,113,113,277,113,277,113,]),'ternary_expression':([25,49,50,65,71,73,74,75,76,77,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_expression':([25,49,50,65,71,73,74,75,76,77,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'logical_or_expression':([25,49,50,65,71,73,74,75,76,77,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assignment_target':([25,40,49,50,65,71,73,74,75,76,77,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[36,79,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'logical_and_expression':([25,49,50,65,71,72,73,74,75,76,77,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[37,37,37,37,37,166,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'postfix_expression':([25,40,49,50,58,59,63,64,65,71,72,73,74,75,76,77,78,81,82,83,86,89,90,91,92,93,94,100,101,102,106,107,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[38,80,38,38,104,104,104,104,38,38,104,38,38,38,38,38,104,104,104,104,38,104,104,104,104,104,104,104,104,104,38,104,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'equality_expression':([25,49,50,65,71,72,73,74,75,76,77,78,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[41,41,41,41,41,41,41,41,41,41,41,172,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'primary_expression':([25,40,49,50,58,59,63,64,65,71,72,73,74,75,76,77,78,81,82,83,86,87,88,89,90,91,92,93,94,100,101,102,106,107,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,178,179,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'relational_expression':([25,49,50,65,71,72,73,74,75,76,77,78,81,82,83,86,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[43,43,43,43,43,43,43,43,43,43,43,43,173,174,175,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expression_between_parentesis':([25,40,49,50,58,59,63,64,65,71,72,73,74,75,76,77,78,81,82,83,86,87,88,89,90,91,92,93,94,100,101,102,106,107,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'array_literal':([25,40,49,50,58,59,63,64,65,71,72,73,74,75,76,77,78,81,82,83,86,87,88,89,90,91,92,93,94,100,101,102,106,107,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'literal':([25,40,49,50,58,59,63,64,65,71,72,73,74,75,76,77,78,81,82,83,86,87,88,89,90,91,92,93,94,100,101,102,106,107,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'additive_expression':([25,49,50,65,71,72,73,74,75,76,77,78,81,82,83,86,89,90,91,92,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,180,181,182,183,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'string_literal':([25,40,49,50,58,59,63,64,65,71,72,73,74,75,76,77,78,81,82,83,86,87,88,89,90,91,92,93,94,100,101,102,106,107,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,220,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,240,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'multiplicative_expression':([25,49,50,65,71,72,73,74,75,76,77,78,81,82,83,86,89,90,91,92,93,94,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,184,185,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'potenciacao_expression':([25,49,50,65,71,72,73,74,75,76,77,78,81,82,83,86,89,90,91,92,93,94,100,101,102,106,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,189,190,191,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'unary_expression':([25,49,50,58,59,63,64,65,71,72,73,74,75,76,77,78,81,82,83,86,89,90,91,92,93,94,100,101,102,106,107,128,129,130,131,132,133,134,135,136,142,188,195,198,206,207,208,209,213,217,221,226,229,236,243,248,249,251,253,256,263,267,271,279,282,284,],[62,62,62,103,105,108,109,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,193,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'opt_return_type':([27,214,],[67,236,]),'empty':([27,50,66,129,130,131,214,228,230,231,252,276,],[69,98,140,203,203,203,69,250,254,250,250,254,]),'postfix_suffixes':([42,85,],[84,176,]),'postfix_suffix':([42,85,],[85,85,]),'opt_expression_list':([50,],[96,]),'expression_list':([50,],[97,]),'statements':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[111,211,211,225,211,211,211,211,211,211,211,211,211,211,211,211,]),'statement':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'control_structure':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'variable_declaration':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'conditional':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'loop_structure':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'case_structure':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'return_statement':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'break_statement':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'next_statement':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'if_statement':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'unless_statement':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'while':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'until':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'loop':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'iterator':([65,136,142,198,206,207,208,209,226,236,249,251,263,267,279,284,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'opt_argument_list':([66,],[138,]),'argument_list':([66,215,],[139,237,]),'argument':([66,215,],[141,141,]),'types':([68,110,212,],[143,194,234,]),'integer':([68,110,212,],[147,147,147,]),'float':([68,110,212,],[148,148,148,]),'boolean':([68,110,212,],[149,149,149,]),'opt_expression':([129,130,131,],[201,204,205,]),'statements_block':([136,142,206,207,208,209,226,236,249,251,263,267,279,284,],[210,216,230,231,232,233,244,257,264,265,274,276,283,287,]),'list_of_identifiers':([196,242,],[224,258,]),'when_list':([200,],[228,]),'opt_else':([228,231,252,],[247,255,266,]),'opt_elsif':([230,276,],[252,281,]),'list_of_values':([271,282,],[278,285,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParse.py',32),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParse.py',33),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParse.py',34),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',35),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',36),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParse.py',37),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParse.py',38),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParse.py',39),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParse.py',40),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParse.py',41),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParse.py',42),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParse.py',43),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParse.py',44),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParse.py',45),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParse.py',46),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParse.py',49),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParse.py',50),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParse.py',53),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParse.py',56),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParse.py',57),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParse.py',60),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParse.py',63),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParse.py',64),
  ('module -> MODULE ID NEWLINE statements END','module',5,'p_module','ExpressionLanguageParse.py',67),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParse.py',71),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParse.py',72),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements_block END','function',8,'p_function','ExpressionLanguageParse.py',75),
  ('function -> DEF ID opt_return_type NEWLINE statements_block END','function',6,'p_function','ExpressionLanguageParse.py',76),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',79),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',80),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParse.py',82),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParse.py',83),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParse.py',86),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParse.py',87),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParse.py',88),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParse.py',89),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParse.py',92),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParse.py',93),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParse.py',96),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParse.py',97),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParse.py',98),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParse.py',99),
  ('types -> float','types',1,'p_types','ExpressionLanguageParse.py',100),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParse.py',101),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParse.py',104),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParse.py',105),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParse.py',106),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParse.py',107),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParse.py',108),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParse.py',109),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParse.py',110),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParse.py',111),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParse.py',112),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParse.py',113),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParse.py',114),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParse.py',117),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParse.py',118),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParse.py',119),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParse.py',122),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',125),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',126),
  ('literal -> string_literal','literal',1,'p_literal','ExpressionLanguageParse.py',127),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParse.py',128),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParse.py',129),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParse.py',130),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParse.py',133),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',137),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',138),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParse.py',141),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParse.py',142),
  ('variable_declaration -> ID types ASSIGN expression','variable_declaration',4,'p_variable_declaration','ExpressionLanguageParse.py',145),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParse.py',146),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParse.py',147),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParse.py',150),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParse.py',151),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParse.py',154),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParse.py',155),
  ('expression -> ternary_expression','expression',1,'p_expression','ExpressionLanguageParse.py',159),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParse.py',160),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',164),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',165),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',166),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',167),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',168),
  ('assignment_target -> postfix_expression','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',171),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',172),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParse.py',173),
  ('ternary_expression -> logical_or_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParse.py',176),
  ('ternary_expression -> logical_or_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParse.py',177),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParse.py',180),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParse.py',181),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParse.py',184),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParse.py',185),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParse.py',188),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',189),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',190),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',191),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParse.py',194),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',195),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',196),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',197),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',198),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParse.py',201),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',202),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',203),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParse.py',207),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',208),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',209),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',210),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParse.py',213),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParse.py',214),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',217),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',218),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',219),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',220),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParse.py',221),
  ('postfix_expression -> primary_expression postfix_suffixes','postfix_expression',2,'p_postfix_expression','ExpressionLanguageParse.py',226),
  ('postfix_suffixes -> postfix_suffix postfix_suffixes','postfix_suffixes',2,'p_postfix_suffixes','ExpressionLanguageParse.py',229),
  ('postfix_suffixes -> postfix_suffix','postfix_suffixes',1,'p_postfix_suffixes','ExpressionLanguageParse.py',230),
  ('postfix_suffix -> LBRACKET expression RBRACKET','postfix_suffix',3,'p_postfix_suffix','ExpressionLanguageParse.py',233),
  ('postfix_suffix -> DOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',234),
  ('postfix_suffix -> DOTDOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',235),
  ('primary_expression -> expression_between_parentesis','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',238),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',239),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',240),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',241),
  ('expression_between_parentesis -> LPAREN expression RPAREN','expression_between_parentesis',3,'p_expression_between_parentesis','ExpressionLanguageParse.py',244),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParse.py',246),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','ExpressionLanguageParse.py',248),
  ('string_literal -> STRING INTERP_START expression INTERP_END string_literal','string_literal',5,'p_string_literal','ExpressionLanguageParse.py',249),
  ('statements -> statement','statements',1,'p_statements','ExpressionLanguageParse.py',253),
  ('statements -> statement NEWLINE statements','statements',3,'p_statements','ExpressionLanguageParse.py',254),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParse.py',257),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParse.py',258),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParse.py',259),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',262),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',263),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',264),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',265),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',266),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',267),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',270),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',271),
  ('if_statement -> IF expression statements_block opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParse.py',274),
  ('unless_statement -> UNLESS expression statements_block opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParse.py',277),
  ('opt_elsif -> ELSIF expression statements_block opt_elsif','opt_elsif',4,'p_opt_elsif','ExpressionLanguageParse.py',280),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParse.py',281),
  ('opt_else -> ELSE statements_block','opt_else',2,'p_opt_else','ExpressionLanguageParse.py',284),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParse.py',285),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',288),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',289),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',290),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',291),
  ('while -> WHILE expression statements_block','while',3,'p_while','ExpressionLanguageParse.py',294),
  ('until -> UNTIL expression statements_block','until',3,'p_until','ExpressionLanguageParse.py',297),
  ('loop -> LOOP statements_block','loop',2,'p_loop','ExpressionLanguageParse.py',300),
  ('iterator -> expression DOT MULTI statements_block','iterator',4,'p_iterator','ExpressionLanguageParse.py',304),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements_block END','iterator',9,'p_iterator','ExpressionLanguageParse.py',305),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements_block','iterator',9,'p_iterator','ExpressionLanguageParse.py',306),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParse.py',309),
  ('when_list -> WHEN expression statements_block','when_list',3,'p_when_list','ExpressionLanguageParse.py',312),
  ('when_list -> when_list WHEN expression statements_block','when_list',4,'p_when_list','ExpressionLanguageParse.py',313),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParse.py',316),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParse.py',319),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParse.py',322),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',325),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',326),
  ('statements_block -> statements','statements_block',1,'p_statements_block','ExpressionLanguageParse.py',329),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParse.py',332),
]
