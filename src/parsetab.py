
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANLESS_EQUALGREATER_THANGREATER_EQUALleftEQUALNOT_EQUALTIPO_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSNOTTILDEAND AS ASSIGN ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_list\n|   statementsrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID statements ENDfunction_list    :   function \n|   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END\n|   DEF ID opt_return_type statements ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   STRING\n|   CHAR\n|   TRUE\n|   FALSEvariable_declaration :   ID COLON types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesfunction_call    :   ID LPAREN expression_list RPAREN\n|   ID LPAREN RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionstatements   :   statementstatement    :   expression\n|   control_structure\n|   variable_declaration\n|   function_callcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement : IF if_condition statements opt_elsif opt_else ENDunless_statement : UNLESS if_condition statements opt_else ENDif_condition : expression\n| expression LBRACE statements RBRACEopt_elsif : elsif_list\n| emptyelsif_list : elsif_list elsif\n| elsifelsif : ELSIF if_condition statementsopt_else : ELSE statements\n| emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statementsuntil    :   UNTIL expression statementsloop :   LOOP statementsiterator :   expression DOT MULTI statements\n|   expression DOT EACH DO PIPE ID PIPE statements END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statementscase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements\n|   when_list WHEN expression statementsreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptyexpression   :   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expression\n|   ternary_expressionassignment_target    :   ID\n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   range_expression QMARK expression TCOLON expression\n|   range_expressionrange_expression :   logical_or_expression DOTDOT logical_or_expression\n|   logical_or_expression DOTDOTDOT logical_or_expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expression multiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   primary_expressionprimary_expression   :   LPAREN expression RPAREN\n|   array_literal\n|   literal\n|   IDarray_literal    :   LBRACKET opt_expression_list RBRACKETempty :'
    
_lr_action_items = {'REQUIRE':([0,7,81,],[12,12,-19,]),'CONSTANT':([0,2,7,8,13,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,77,81,91,128,129,130,132,133,142,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,254,],[14,14,-18,14,-63,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-17,-19,-167,-159,-167,-160,-161,-162,-22,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-132,]),'MODULE':([0,2,3,7,8,9,13,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,71,77,78,81,91,128,129,130,132,133,142,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,214,254,],[16,16,16,-18,-21,16,-63,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,16,-17,-20,-19,-167,-159,-167,-160,-161,-162,-22,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-25,-132,]),'DEF':([0,2,3,4,7,8,9,10,13,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,71,72,74,77,78,79,81,91,128,129,130,132,133,138,142,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,214,249,254,280,],[18,18,18,18,-18,-21,-24,18,-63,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,18,18,18,-17,-20,-23,-19,-167,-159,-167,-160,-161,-162,18,-22,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-25,-29,-132,-28,]),'ID':([0,13,16,18,19,23,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,87,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,173,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,216,217,225,227,228,230,231,236,240,241,246,247,248,251,254,257,258,262,265,270,274,277,278,],[17,-63,84,89,91,-122,-128,91,91,91,91,104,-133,91,91,91,91,17,-136,-137,-139,-141,-145,-150,129,129,-153,-157,129,129,-163,-165,-166,91,-61,-62,-64,-65,-66,91,17,91,169,91,-169,-167,91,91,91,91,91,91,17,-95,17,17,17,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-159,-167,-160,129,-161,-162,17,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,219,17,-39,-164,-123,-124,-125,-126,-127,91,17,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,91,91,169,91,-38,91,17,17,91,91,260,261,91,-169,219,17,-132,17,-96,91,17,17,91,17,91,]),'CASE':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[38,-63,-122,-128,-133,38,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,38,-169,-167,38,-95,38,38,38,-159,-167,-160,-161,-162,38,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,38,-39,-164,-123,-124,-125,-126,-127,38,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,38,38,-169,38,-132,38,-96,38,38,38,]),'RETURN':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[39,-63,-122,-128,-133,39,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,39,-169,-167,39,-95,39,39,39,-159,-167,-160,-161,-162,39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,39,-39,-164,-123,-124,-125,-126,-127,39,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,39,39,-169,39,-132,39,-96,39,39,39,]),'BREAK':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[40,-63,-122,-128,-133,40,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,40,-169,-167,40,-95,40,40,40,-159,-167,-160,-161,-162,40,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,40,-39,-164,-123,-124,-125,-126,-127,40,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,40,40,-169,40,-132,40,-96,40,40,40,]),'NEXT':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[41,-63,-122,-128,-133,41,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,41,-169,-167,41,-95,41,41,41,-159,-167,-160,-161,-162,41,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,41,-39,-164,-123,-124,-125,-126,-127,41,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,41,41,-169,41,-132,41,-96,41,41,41,]),'UNDERSCORE':([0,13,19,23,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[42,-63,42,-122,-128,42,42,42,42,42,-133,42,42,42,42,42,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,42,-61,-62,-64,-65,-66,42,42,42,42,-169,-167,42,42,42,42,42,42,42,-95,42,42,42,-159,-167,-160,-161,-162,42,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,42,-39,-164,-123,-124,-125,-126,-127,42,42,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,42,42,42,-38,42,42,42,42,42,42,-169,42,-132,42,-96,42,42,42,42,42,42,]),'ASTERISK':([0,13,19,23,31,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[43,-63,43,-122,-128,43,43,43,43,43,-133,43,43,43,43,43,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,43,-61,-62,-64,-65,-66,43,43,43,43,-169,-167,43,43,43,43,43,43,43,-95,43,43,43,-159,-167,-160,-161,-162,43,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,43,-39,-164,-123,-124,-125,-126,-127,43,43,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,43,43,43,-38,43,43,43,43,43,43,-169,43,-132,43,-96,43,43,43,43,43,43,]),'IF':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[45,-63,-122,-128,-133,45,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,45,-169,-167,45,-95,45,45,45,-159,-167,-160,-161,-162,45,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,45,-39,-164,-123,-124,-125,-126,-127,45,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,45,45,-169,45,-132,45,-96,45,45,45,]),'UNLESS':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[46,-63,-122,-128,-133,46,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,46,-169,-167,46,-95,46,46,46,-159,-167,-160,-161,-162,46,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,46,-39,-164,-123,-124,-125,-126,-127,46,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,46,46,-169,46,-132,46,-96,46,46,46,]),'WHILE':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[47,-63,-122,-128,-133,47,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,47,-169,-167,47,-95,47,47,47,-159,-167,-160,-161,-162,47,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,47,-39,-164,-123,-124,-125,-126,-127,47,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,47,47,-169,47,-132,47,-96,47,47,47,]),'UNTIL':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[48,-63,-122,-128,-133,48,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,48,-169,-167,48,-95,48,48,48,-159,-167,-160,-161,-162,48,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,48,-39,-164,-123,-124,-125,-126,-127,48,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,48,48,-169,48,-132,48,-96,48,48,48,]),'LOOP':([0,13,23,31,44,49,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,84,89,91,106,107,108,109,110,128,129,130,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,225,228,230,247,251,254,257,258,265,270,277,],[49,-63,-122,-128,-133,49,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,49,-169,-167,49,-95,49,49,49,-159,-167,-160,-161,-162,49,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,49,-39,-164,-123,-124,-125,-126,-127,49,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-38,49,49,-169,49,-132,49,-96,49,49,49,]),'PLUS':([0,13,17,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[56,-63,-167,56,-122,-128,56,56,56,56,-133,56,56,56,56,56,-136,-137,-139,-141,123,-150,56,56,-153,-157,56,56,-163,-165,-166,56,-61,-62,-64,-65,-66,56,56,56,56,-169,-167,56,56,56,56,56,56,56,-95,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-159,-167,-160,56,-161,-162,56,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,56,-39,-164,-123,-124,-125,-126,-127,56,56,-134,-135,-138,-140,-142,-143,-144,123,123,123,123,-151,-152,-154,-155,-156,-158,-168,56,56,56,-38,56,56,56,56,56,56,-169,56,-132,56,-96,56,56,56,56,56,56,]),'MINUS':([0,13,17,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[57,-63,-167,57,-122,-128,57,57,57,57,-133,57,57,57,57,57,-136,-137,-139,-141,124,-150,57,57,-153,-157,57,57,-163,-165,-166,57,-61,-62,-64,-65,-66,57,57,57,57,-169,-167,57,57,57,57,57,57,57,-95,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-159,-167,-160,57,-161,-162,57,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,57,-39,-164,-123,-124,-125,-126,-127,57,57,-134,-135,-138,-140,-142,-143,-144,124,124,124,124,-151,-152,-154,-155,-156,-158,-168,57,57,57,-38,57,57,57,57,57,57,-169,57,-132,57,-96,57,57,57,57,57,57,]),'EXCLAMATION':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[60,-63,60,-122,-128,60,60,60,60,-133,60,60,60,60,60,-136,-137,-139,-141,-145,-150,60,60,-153,-157,60,60,-163,-165,-166,60,-61,-62,-64,-65,-66,60,60,60,60,-169,-167,60,60,60,60,60,60,60,-95,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-159,-167,-160,60,-161,-162,60,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,60,-39,-164,-123,-124,-125,-126,-127,60,60,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,60,60,60,-38,60,60,60,60,60,60,-169,60,-132,60,-96,60,60,60,60,60,60,]),'TILDE':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[61,-63,61,-122,-128,61,61,61,61,-133,61,61,61,61,61,-136,-137,-139,-141,-145,-150,61,61,-153,-157,61,61,-163,-165,-166,61,-61,-62,-64,-65,-66,61,61,61,61,-169,-167,61,61,61,61,61,61,61,-95,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-159,-167,-160,61,-161,-162,61,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,61,-39,-164,-123,-124,-125,-126,-127,61,61,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,61,61,61,-38,61,61,61,61,61,61,-169,61,-132,61,-96,61,61,61,61,61,61,]),'LPAREN':([0,13,17,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[19,-63,88,19,-122,-128,19,19,19,19,-133,19,19,19,19,19,-136,-137,-139,-141,-145,-150,19,19,-153,-157,19,19,-163,-165,-166,19,-61,-62,-64,-65,-66,19,19,19,19,173,-167,19,19,19,19,19,19,19,-95,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-159,-167,-160,19,-161,-162,19,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,19,-39,-164,-123,-124,-125,-126,-127,19,19,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,19,19,19,-38,19,19,19,19,19,19,-169,19,-132,19,-96,19,19,19,19,19,19,]),'LBRACKET':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[65,-63,65,-122,-128,65,65,65,65,-133,65,65,65,65,65,-136,-137,-139,-141,-145,-150,65,65,-153,-157,65,65,-163,-165,-166,65,-61,-62,-64,-65,-66,65,65,65,65,-169,-167,65,65,65,65,65,65,65,-95,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-159,-167,-160,65,-161,-162,65,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,65,-39,-164,-123,-124,-125,-126,-127,65,65,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,65,65,65,-38,65,65,65,65,65,65,-169,65,-132,65,-96,65,65,65,65,65,65,]),'INTNUMBER':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[66,-63,66,-122,-128,66,66,66,66,-133,66,66,66,66,66,-136,-137,-139,-141,-145,-150,66,66,-153,-157,66,66,-163,-165,-166,66,-61,-62,-64,-65,-66,66,66,66,66,-169,-167,66,66,66,66,66,66,66,-95,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-159,-167,-160,66,-161,-162,66,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,66,-39,-164,-123,-124,-125,-126,-127,66,66,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,66,66,66,-38,66,66,66,66,66,66,-169,66,-132,66,-96,66,66,66,66,66,66,]),'FLOATNUMBER':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[67,-63,67,-122,-128,67,67,67,67,-133,67,67,67,67,67,-136,-137,-139,-141,-145,-150,67,67,-153,-157,67,67,-163,-165,-166,67,-61,-62,-64,-65,-66,67,67,67,67,-169,-167,67,67,67,67,67,67,67,-95,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-159,-167,-160,67,-161,-162,67,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,67,-39,-164,-123,-124,-125,-126,-127,67,67,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,67,67,67,-38,67,67,67,67,67,67,-169,67,-132,67,-96,67,67,67,67,67,67,]),'STRING':([0,12,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,85,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,175,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,245,246,247,251,254,257,258,262,265,270,274,277,278,],[13,81,-63,13,-122,-128,13,13,13,13,-133,13,13,13,13,13,-136,-137,-139,-141,-145,-150,13,13,-153,-157,13,13,-163,-165,-166,13,-61,-62,-64,-65,-66,13,13,147,13,13,-169,-167,13,13,13,13,13,13,13,-95,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-159,-167,-160,13,-161,-162,13,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,13,147,-39,-164,-123,-124,-125,-126,-127,13,13,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,13,13,13,-38,13,13,13,13,13,147,13,-169,13,-132,13,-96,13,13,13,13,13,13,]),'CHAR':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,85,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,175,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,245,246,247,251,254,257,258,262,265,270,274,277,278,],[68,-63,68,-122,-128,68,68,68,68,-133,68,68,68,68,68,-136,-137,-139,-141,-145,-150,68,68,-153,-157,68,68,-163,-165,-166,68,-61,-62,-64,-65,-66,68,68,148,68,68,-169,-167,68,68,68,68,68,68,68,-95,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-159,-167,-160,68,-161,-162,68,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,68,148,-39,-164,-123,-124,-125,-126,-127,68,68,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,68,68,68,-38,68,68,68,68,68,148,68,-169,68,-132,68,-96,68,68,68,68,68,68,]),'TRUE':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[69,-63,69,-122,-128,69,69,69,69,-133,69,69,69,69,69,-136,-137,-139,-141,-145,-150,69,69,-153,-157,69,69,-163,-165,-166,69,-61,-62,-64,-65,-66,69,69,69,69,-169,-167,69,69,69,69,69,69,69,-95,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-159,-167,-160,69,-161,-162,69,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,69,-39,-164,-123,-124,-125,-126,-127,69,69,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,69,69,69,-38,69,69,69,69,69,69,-169,69,-132,69,-96,69,69,69,69,69,69,]),'FALSE':([0,13,19,23,31,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,84,86,88,89,91,92,93,94,95,96,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,143,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,176,177,178,179,180,181,182,184,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,215,217,225,227,228,230,231,236,246,247,251,254,257,258,262,265,270,274,277,278,],[70,-63,70,-122,-128,70,70,70,70,-133,70,70,70,70,70,-136,-137,-139,-141,-145,-150,70,70,-153,-157,70,70,-163,-165,-166,70,-61,-62,-64,-65,-66,70,70,70,70,-169,-167,70,70,70,70,70,70,70,-95,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-159,-167,-160,70,-161,-162,70,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,70,-39,-164,-123,-124,-125,-126,-127,70,70,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,70,70,70,-38,70,70,70,70,70,70,-169,70,-132,70,-96,70,70,70,70,70,70,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,41,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,91,98,99,100,101,102,111,128,129,130,132,133,138,139,140,141,142,168,172,177,178,179,180,181,182,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,214,218,242,249,250,254,259,268,272,273,280,281,282,283,],[0,-12,-13,-14,-15,-16,-18,-21,-24,-26,-80,-63,-81,-167,-82,-83,-84,-122,-85,-86,-87,-88,-89,-90,-128,-91,-92,-104,-105,-106,-107,-169,-169,-169,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-6,-7,-9,-8,-10,-11,-17,-20,-23,-27,-19,-167,-117,-120,-121,-118,-119,-110,-159,-167,-160,-161,-162,-2,-3,-4,-5,-22,-68,-75,-164,-123,-124,-125,-126,-127,-108,-109,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-1,-111,-25,-74,-67,-29,-114,-132,-94,-93,-72,-69,-28,-112,-113,-73,]),'END':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,41,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,98,99,100,101,102,111,128,129,130,132,133,145,168,172,177,178,179,180,181,182,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,218,224,226,229,232,233,234,235,238,242,250,252,253,254,255,256,259,267,268,269,272,273,275,276,281,282,283,],[-80,-63,-81,-167,-82,-83,-84,-122,-85,-86,-87,-88,-89,-90,-128,-91,-92,-104,-105,-106,-107,-169,-169,-169,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-117,-120,-121,-118,-119,-110,-159,-167,-160,-161,-162,214,-68,-75,-164,-123,-124,-125,-126,-127,-169,-169,-169,-108,-109,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-111,-74,249,250,-103,-169,-97,-98,-100,259,-67,-114,-102,-115,-132,268,-99,-94,-116,-93,-101,-72,-69,280,281,-112,-113,-73,]),'ELSIF':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,41,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,98,99,100,101,102,111,128,129,130,132,133,168,172,177,178,179,180,181,182,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,218,233,235,242,250,254,256,259,268,269,272,273,281,282,283,],[-80,-63,-81,-167,-82,-83,-84,-122,-85,-86,-87,-88,-89,-90,-128,-91,-92,-104,-105,-106,-107,-169,-169,-169,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-117,-120,-121,-118,-119,-110,-159,-167,-160,-161,-162,-68,-75,-164,-123,-124,-125,-126,-127,236,-108,-109,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-111,-74,236,-100,-67,-114,-132,-99,-94,-93,-101,-72,-69,-112,-113,-73,]),'ELSE':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,41,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,98,99,100,101,102,111,128,129,130,132,133,168,172,177,178,179,180,181,182,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,218,232,233,234,235,242,250,253,254,256,259,267,268,269,272,273,281,282,283,],[-80,-63,-81,-167,-82,-83,-84,-122,-85,-86,-87,-88,-89,-90,-128,-91,-92,-104,-105,-106,-107,-169,-169,-169,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-117,-120,-121,-118,-119,-110,-159,-167,-160,-161,-162,-68,-75,-164,-123,-124,-125,-126,-127,228,-169,228,-108,-109,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-111,-74,228,-97,-98,-100,-67,-114,-115,-132,-99,-94,-116,-93,-101,-72,-69,-112,-113,-73,]),'RBRACE':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,41,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,98,99,100,101,102,111,128,129,130,132,133,168,172,177,178,179,180,181,182,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,218,237,242,250,254,259,268,271,272,273,281,282,283,],[-80,-63,-81,-167,-82,-83,-84,-122,-85,-86,-87,-88,-89,-90,-128,-91,-92,-104,-105,-106,-107,-169,-169,-169,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-117,-120,-121,-118,-119,-110,-159,-167,-160,-161,-162,-68,-75,-164,-123,-124,-125,-126,-127,-108,-109,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-111,-74,258,-67,-114,-132,-94,-93,277,-72,-69,-112,-113,-73,]),'WHEN':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,40,41,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,97,98,99,100,101,102,111,128,129,130,132,133,168,172,177,178,179,180,181,182,183,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,218,242,250,253,254,259,267,268,272,273,281,282,283,],[-80,-63,-81,-167,-82,-83,-84,-122,-85,-86,-87,-88,-89,-90,-128,-91,-92,-104,-105,-106,-107,-169,-169,-169,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,184,-117,-120,-121,-118,-119,-110,-159,-167,-160,-161,-162,-68,-75,-164,-123,-124,-125,-126,-127,227,-108,-109,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-111,-74,-67,-114,-115,-132,-94,-116,-93,-72,-69,-112,-113,-73,]),'POTENCIACAO':([13,17,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,204,205,206,207,208,],[-63,-167,131,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,131,131,131,-158,-168,]),'MULTI':([13,17,55,58,59,62,63,64,66,67,68,69,70,83,91,128,129,130,132,133,177,202,203,204,205,206,207,208,],[-63,-167,125,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,143,-167,-159,-167,-160,-161,-162,-164,125,125,-154,-155,-156,-158,-168,]),'DIVIDE':([13,17,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,202,203,204,205,206,207,208,],[-63,-167,126,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,126,126,-154,-155,-156,-158,-168,]),'MODULO':([13,17,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,202,203,204,205,206,207,208,],[-63,-167,127,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,127,127,-154,-155,-156,-158,-168,]),'GREATER_THAN':([13,17,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,119,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,119,119,119,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'LESS_THAN':([13,17,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,120,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,120,120,120,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'GREATER_EQUAL':([13,17,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,121,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,121,121,121,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'LESS_EQUAL':([13,17,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,122,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,122,122,122,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'EQUAL':([13,17,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,116,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,116,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'NOT_EQUAL':([13,17,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,117,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,117,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'TIPO_EQUAL':([13,17,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,118,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,118,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'AND':([13,17,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,115,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,115,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'DOTDOT':([13,17,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,112,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'DOTDOTDOT':([13,17,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,113,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'OR':([13,17,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,114,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,114,114,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'QMARK':([13,17,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,],[-63,-167,105,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,]),'DOT':([13,15,17,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,254,],[-63,83,-167,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-132,]),'RPAREN':([13,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,88,90,91,128,129,130,132,133,137,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,173,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,239,254,263,264,266,279,],[-63,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,172,177,-167,-159,-167,-160,-161,-162,-78,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,218,-169,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-34,247,-30,-31,-32,-79,-132,-35,-36,-33,-37,]),'LBRACE':([13,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,107,128,129,130,132,133,144,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,254,],[-63,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,187,-159,-167,-160,-161,-162,213,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-132,]),'COMMA':([13,17,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,135,137,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,171,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,219,223,239,244,254,263,264,272,279,],[-63,87,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,209,-78,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,216,209,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-34,248,-79,262,-132,-35,-36,278,-37,]),'RBRACKET':([13,23,31,44,50,51,52,53,54,55,58,59,62,63,64,65,66,67,68,69,70,91,128,129,130,132,133,134,135,136,137,177,178,179,180,181,182,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,239,254,],[-63,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-169,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,208,-76,-77,-78,-164,-123,-124,-125,-126,-127,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-79,-132,]),'TCOLON':([13,23,31,44,50,51,52,53,54,55,58,59,62,63,64,66,67,68,69,70,91,128,129,130,132,133,177,178,179,180,181,182,185,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,254,],[-63,-122,-128,-133,-136,-137,-139,-141,-145,-150,-153,-157,-163,-165,-166,-61,-62,-64,-65,-66,-167,-159,-167,-160,-161,-162,-164,-123,-124,-125,-126,-127,231,-134,-135,-138,-140,-142,-143,-144,-146,-147,-148,-149,-151,-152,-154,-155,-156,-158,-168,-132,]),'ASSIGN':([14,17,30,42,91,103,104,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,219,243,263,],[82,86,92,-130,-129,-131,-129,215,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-70,217,246,-71,274,]),'COLON':([17,89,219,247,],[85,175,245,175,]),'PLUS_ASSIGN':([17,30,42,91,103,104,],[-129,93,-130,-129,-131,-129,]),'MINUS_ASSIGN':([17,30,42,91,103,104,],[-129,94,-130,-129,-131,-129,]),'MULTI_ASSIGN':([17,30,42,91,103,104,],[-129,95,-130,-129,-131,-129,]),'DIVIDE_ASSIGN':([17,30,42,91,103,104,],[-129,96,-130,-129,-131,-129,]),'EACH':([83,],[144,]),'NIL':([85,175,245,],[149,149,149,]),'INT':([85,175,245,],[153,153,153,]),'INT8':([85,175,245,],[154,154,154,]),'INT16':([85,175,245,],[155,155,155,]),'INT32':([85,175,245,],[156,156,156,]),'INT64':([85,175,245,],[157,157,157,]),'INT128':([85,175,245,],[158,158,158,]),'UINT8':([85,175,245,],[159,159,159,]),'UINT16':([85,175,245,],[160,160,160,]),'UINT32':([85,175,245,],[161,161,161,]),'UINT64':([85,175,245,],[162,162,162,]),'UINT128':([85,175,245,],[163,163,163,]),'FLOAT':([85,175,245,],[164,164,164,]),'FLOAT32':([85,175,245,],[165,165,165,]),'FLOAT64':([85,175,245,],[166,166,166,]),'BOOL':([85,175,245,],[167,167,167,]),'DO':([144,],[212,]),'PIPE':([212,213,260,261,],[240,241,270,271,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,7,],[2,77,]),'constant_list':([0,2,8,],[3,71,78,]),'module_list':([0,2,3,9,71,],[4,72,74,79,138,]),'function_list':([0,2,3,4,10,71,72,74,138,],[5,73,75,76,80,139,140,141,210,]),'statements':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[6,111,145,186,188,189,190,211,224,237,252,253,267,269,275,276,282,]),'require':([0,7,],[7,7,]),'constant':([0,2,8,],[8,8,8,]),'module':([0,2,3,9,71,],[9,9,9,9,9,]),'function':([0,2,3,4,10,71,72,74,138,],[10,10,10,10,10,10,10,10,10,]),'statement':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[15,90,97,99,99,99,107,107,109,110,15,137,142,15,168,137,178,179,180,181,182,185,15,15,15,15,15,15,230,15,239,242,244,251,15,15,254,107,264,15,15,272,15,15,279,15,272,]),'control_structure':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'variable_declaration':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'function_call':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'assignment_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'conditional':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'loop_structure':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'case_structure':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'return_statement':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'break_statement':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'next_statement':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'assignment_target':([0,19,38,39,40,41,43,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[30,30,30,30,30,30,103,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ternary_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'if_statement':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'unless_statement':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'while':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'until':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'loop':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'iterator':([0,49,84,106,108,109,110,143,174,187,228,230,251,257,265,270,277,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'range_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'logical_or_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,191,192,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'logical_and_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,193,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'equality_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,194,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'relational_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,195,196,197,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'additive_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,198,199,200,201,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'multiplicative_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,202,203,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'potenciacao_expression':([0,19,38,39,40,41,45,46,47,48,49,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,204,205,206,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'unary_expression':([0,19,38,39,40,41,45,46,47,48,49,56,57,60,61,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[59,59,59,59,59,59,59,59,59,59,59,128,130,132,133,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,207,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'primary_expression':([0,19,38,39,40,41,45,46,47,48,49,56,57,60,61,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'array_literal':([0,19,38,39,40,41,45,46,47,48,49,56,57,60,61,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'literal':([0,19,38,39,40,41,45,46,47,48,49,56,57,60,61,65,82,84,86,88,92,93,94,95,96,105,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,143,174,184,187,209,215,217,227,228,230,231,236,246,251,257,262,265,270,274,277,278,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'opt_expression':([39,40,41,],[98,101,102,]),'empty':([39,40,41,65,89,173,183,186,188,232,247,],[100,100,100,136,176,222,229,234,229,229,176,]),'if_condition':([45,46,236,],[106,108,257,]),'opt_expression_list':([65,],[134,]),'expression_list':([65,88,],[135,171,]),'types':([85,175,245,],[146,225,263,]),'integer':([85,175,245,],[150,150,150,]),'float':([85,175,245,],[151,151,151,]),'boolean':([85,175,245,],[152,152,152,]),'list_of_identifiers':([87,216,],[170,243,]),'opt_return_type':([89,247,],[174,265,]),'when_list':([97,],[183,]),'opt_argument_list':([173,],[220,]),'argument_list':([173,248,],[221,266,]),'argument':([173,248,],[223,223,]),'opt_else':([183,188,232,],[226,238,255,]),'opt_elsif':([186,],[232,]),'elsif_list':([186,],[233,]),'elsif':([186,233,],[235,256,]),'list_of_values':([262,278,],[273,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParser.py',30),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParser.py',31),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParser.py',32),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',33),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',34),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParser.py',35),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParser.py',36),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParser.py',37),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParser.py',38),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParser.py',39),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParser.py',40),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParser.py',41),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParser.py',42),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParser.py',43),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParser.py',44),
  ('program -> statements','program',1,'p_program','ExpressionLanguageParser.py',45),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParser.py',51),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParser.py',52),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParser.py',55),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParser.py',59),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParser.py',60),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParser.py',64),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParser.py',69),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParser.py',70),
  ('module -> MODULE ID statements END','module',4,'p_module','ExpressionLanguageParser.py',74),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParser.py',78),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParser.py',79),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END','function',8,'p_function','ExpressionLanguageParser.py',83),
  ('function -> DEF ID opt_return_type statements END','function',5,'p_function','ExpressionLanguageParser.py',84),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',87),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',88),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParser.py',91),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParser.py',92),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParser.py',96),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParser.py',97),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParser.py',98),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParser.py',99),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParser.py',103),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParser.py',104),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParser.py',109),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParser.py',110),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParser.py',111),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParser.py',112),
  ('types -> float','types',1,'p_types','ExpressionLanguageParser.py',113),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParser.py',114),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParser.py',117),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParser.py',118),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParser.py',119),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParser.py',120),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParser.py',121),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParser.py',122),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParser.py',123),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParser.py',124),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParser.py',125),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParser.py',126),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParser.py',127),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParser.py',130),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParser.py',131),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParser.py',132),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParser.py',135),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',138),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',139),
  ('literal -> STRING','literal',1,'p_literal','ExpressionLanguageParser.py',140),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParser.py',141),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParser.py',142),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParser.py',143),
  ('variable_declaration -> ID COLON types ASSIGN expression','variable_declaration',5,'p_variable_declaration','ExpressionLanguageParser.py',148),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParser.py',149),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParser.py',150),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParser.py',153),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParser.py',154),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParser.py',157),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParser.py',158),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParser.py',162),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParser.py',163),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',166),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',167),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParser.py',170),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParser.py',171),
  ('statements -> statement','statements',1,'p_statements','ExpressionLanguageParser.py',176),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParser.py',180),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParser.py',181),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParser.py',182),
  ('statement -> function_call','statement',1,'p_statement','ExpressionLanguageParser.py',183),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',186),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',187),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',188),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',189),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',190),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',191),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',194),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',195),
  ('if_statement -> IF if_condition statements opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParser.py',198),
  ('unless_statement -> UNLESS if_condition statements opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParser.py',201),
  ('if_condition -> expression','if_condition',1,'p_if_condition','ExpressionLanguageParser.py',204),
  ('if_condition -> expression LBRACE statements RBRACE','if_condition',4,'p_if_condition','ExpressionLanguageParser.py',205),
  ('opt_elsif -> elsif_list','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',208),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',209),
  ('elsif_list -> elsif_list elsif','elsif_list',2,'p_elsif_list','ExpressionLanguageParser.py',212),
  ('elsif_list -> elsif','elsif_list',1,'p_elsif_list','ExpressionLanguageParser.py',213),
  ('elsif -> ELSIF if_condition statements','elsif',3,'p_elsif','ExpressionLanguageParser.py',216),
  ('opt_else -> ELSE statements','opt_else',2,'p_opt_else','ExpressionLanguageParser.py',219),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParser.py',220),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',223),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',224),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',225),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',226),
  ('while -> WHILE expression statements','while',3,'p_while','ExpressionLanguageParser.py',229),
  ('until -> UNTIL expression statements','until',3,'p_until','ExpressionLanguageParser.py',232),
  ('loop -> LOOP statements','loop',2,'p_loop','ExpressionLanguageParser.py',235),
  ('iterator -> expression DOT MULTI statements','iterator',4,'p_iterator','ExpressionLanguageParser.py',239),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements END','iterator',9,'p_iterator','ExpressionLanguageParser.py',240),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements','iterator',9,'p_iterator','ExpressionLanguageParser.py',241),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParser.py',244),
  ('when_list -> WHEN expression statements','when_list',3,'p_when_list','ExpressionLanguageParser.py',247),
  ('when_list -> when_list WHEN expression statements','when_list',4,'p_when_list','ExpressionLanguageParser.py',248),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',251),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParser.py',254),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParser.py',257),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',260),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',261),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParser.py',265),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',268),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',269),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',270),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',271),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',272),
  ('assignment_expression -> ternary_expression','assignment_expression',1,'p_assignment_expression','ExpressionLanguageParser.py',273),
  ('assignment_target -> ID','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',276),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',277),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParser.py',278),
  ('ternary_expression -> range_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParser.py',281),
  ('ternary_expression -> range_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParser.py',282),
  ('range_expression -> logical_or_expression DOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',285),
  ('range_expression -> logical_or_expression DOTDOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',286),
  ('range_expression -> logical_or_expression','range_expression',1,'p_range_expression','ExpressionLanguageParser.py',287),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParser.py',290),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParser.py',291),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParser.py',294),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParser.py',295),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParser.py',298),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',299),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',300),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',301),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParser.py',304),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',305),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',306),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',307),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',308),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParser.py',311),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',312),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',313),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParser.py',316),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',317),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',318),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',319),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParser.py',322),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParser.py',323),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',326),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',327),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',328),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',329),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParser.py',330),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','ExpressionLanguageParser.py',335),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',336),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',337),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',338),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParser.py',341),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParser.py',345),
]
