
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNPLUS_ASSIGNMINUS_ASSIGNMULTI_ASSIGNDIVIDE_ASSIGNMODULO_ASSIGNrightQMARKTCOLONleftORleftANDnonassocEQUALNOT_EQUALTIPO_EQUALnonassocGREATER_THANLESS_THANGREATER_EQUALLESS_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSEXCLAMATIONTILDEnonassocDOTDOTDOTDOTDOTleftDOTleftLBRACKETRBRACKETAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID NEWLINE statements ENDfunction_list    :   function function_list\n|   functionfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements_block ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   STRING\n|   CHAR\n|   TRUE\n|   FALSEfunction_call    :   ID LPAREN opt_expression_list RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression COMMA expression_listvariable_declaration :   ID types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesexpression   :   ternary_expression\n|   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expressionassignment_target    :   postfix_expression\n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   logical_or_expression QMARK expression TCOLON expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expressionmultiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   postfix_expressionpostfix_expression   :   primary_expression postfix_suffixespostfix_suffixes :   postfix_suffix postfix_suffixes\n|   emptypostfix_suffix   :   LBRACKET expression RBRACKET\n|   DOTDOT primary_expression\n|   DOTDOTDOT primary_expressionprimary_expression   :   LPAREN expression RPAREN\n|   array_literal\n|   literal\n|   function_call\n|   IDarray_literal    :   LBRACKET opt_expression_list RBRACKETstatements   :   statement\n|   statement NEWLINE statementsstatement    :   expression\n|   control_structure\n|   variable_declarationcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement :   IF expression statements_block opt_elsif opt_else ENDunless_statement :   UNLESS expression statements_block opt_else ENDopt_elsif    :   ELSIF expression statements_block opt_elsif\n| emptyopt_else :   ELSE statements_block\n|   emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statements_blockuntil    :   UNTIL expression statements_blockloop :   LOOP statements_blockiterator :   expression DOT MULTI statements_block\n|   expression DOT EACH DO PIPE ID PIPE statements_block END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements_blockcase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements_block\n|   when_list WHEN expression statements_blockreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptystatements_block :   statementsempty :'
    
_lr_action_items = {'REQUIRE':([0,6,24,],[10,10,-18,]),'CONSTANT':([0,2,6,7,20,24,32,33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,234,],[11,11,-17,11,-16,-18,-21,-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,-87,]),'MODULE':([0,2,3,6,7,8,14,20,21,24,32,33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,192,212,213,234,],[12,12,12,-17,-20,12,12,-16,-19,-18,-21,-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-24,-119,-65,-87,]),'DEF':([0,2,3,4,6,7,8,9,14,15,17,20,21,22,24,28,32,33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,192,212,213,234,265,],[13,13,13,13,-17,-20,-23,13,13,13,13,-16,-19,-22,-18,13,-21,-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-24,-119,-65,-87,-27,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,66,80,81,82,101,102,103,105,106,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,192,212,213,234,265,],[0,-12,-13,-14,-15,-17,-20,-23,-26,-6,-7,-9,-8,-10,-11,-16,-19,-22,-25,-18,-2,-3,-4,-5,-21,-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-1,-116,-166,-118,-111,-115,-112,-113,-114,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-24,-119,-65,-87,-27,]),'STRING':([10,25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,107,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,207,208,209,211,212,213,215,220,223,230,231,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[24,53,-77,-78,-88,-89,-115,53,-91,-166,-93,53,-123,-124,-125,-126,-97,53,-59,-60,-61,-62,-63,-64,-102,53,53,-105,-109,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-116,-166,-118,53,53,53,53,53,53,53,53,53,53,53,53,53,-111,-115,-112,53,-113,-114,171,53,53,53,53,53,53,53,53,53,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,53,-106,-107,-108,-110,53,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,53,53,53,53,53,171,53,-166,53,-119,-65,53,53,53,53,171,-37,-87,53,53,53,53,53,53,-36,53,53,53,53,53,53,]),'ASSIGN':([11,36,38,39,42,45,46,47,48,51,52,53,54,55,56,75,76,80,81,82,107,134,150,152,153,158,162,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,212,213,217,218,228,253,],[25,69,-84,-85,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,-86,-84,-116,-166,-118,169,208,-117,-120,-121,-122,-127,215,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-119,-65,-73,237,250,-74,]),'ID':([12,13,25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,210,211,212,213,215,220,223,230,232,234,236,237,242,243,245,247,250,252,255,256,258,262,266,274,277,279,],[26,27,48,-77,-78,-88,-89,-115,48,-91,-166,-93,48,-123,-124,-125,-126,-97,48,-59,-60,-61,-62,-63,-64,-102,48,48,-105,-109,48,48,107,134,48,48,48,48,48,48,48,48,48,48,48,-116,-166,-118,48,48,48,48,48,48,48,48,48,48,48,48,48,-111,-115,-112,48,-113,-114,48,48,48,48,48,48,48,48,107,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,48,-106,-107,-108,-110,48,217,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,107,107,107,107,107,48,-166,134,48,-119,-65,48,107,48,107,-37,-87,217,48,48,107,107,48,48,-36,267,268,107,107,48,107,48,107,]),'UNDERSCORE':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,67,69,70,71,72,73,80,81,82,83,91,101,102,103,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[39,-77,-78,-88,-89,-115,39,-91,-166,-93,39,-123,-124,-125,-126,-97,39,-59,-60,-61,-62,-63,-64,-102,-105,-109,39,39,39,39,39,39,39,-116,-166,-118,39,39,-111,-115,-112,-113,-114,39,39,39,39,39,39,39,39,39,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,39,-106,-107,-108,-110,39,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,39,39,39,39,39,39,-166,39,-119,-65,39,39,39,39,-37,-87,39,39,39,39,39,39,-36,39,39,39,39,39,39,]),'ASTERISK':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,67,69,70,71,72,73,80,81,82,83,91,101,102,103,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[40,-77,-78,-88,-89,-115,40,-91,-166,-93,40,-123,-124,-125,-126,-97,40,-59,-60,-61,-62,-63,-64,-102,-105,-109,40,40,40,40,40,40,40,-116,-166,-118,40,40,-111,-115,-112,-113,-114,40,40,40,40,40,40,40,40,40,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,40,-106,-107,-108,-110,40,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,40,40,40,40,40,40,-166,40,-119,-65,40,40,40,40,-37,-87,40,40,40,40,40,40,-36,40,40,40,40,40,40,]),'LPAREN':([25,27,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,107,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[44,65,-77,-78,-88,-89,-115,44,-91,-166,-93,44,-123,-124,-125,91,-97,44,-59,-60,-61,-62,-63,-64,-102,44,44,-105,-109,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-116,-166,-118,44,44,44,44,44,44,44,44,44,44,44,44,44,-111,-115,-112,44,-113,-114,91,44,44,44,44,44,44,44,44,44,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,44,-106,-107,-108,-110,44,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,44,44,44,44,44,44,-166,44,-119,-65,44,44,44,44,-37,-87,44,44,44,44,44,44,-36,44,44,44,44,44,44,]),'LBRACKET':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,107,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[50,-77,-78,-88,-89,-115,50,-91,83,-93,50,-123,-124,-125,-126,-97,50,-59,-60,-61,-62,-63,-64,-102,50,50,-105,-109,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-116,83,-118,50,50,50,50,50,50,50,50,50,50,50,50,50,-111,-115,-112,50,-113,-114,-126,50,50,50,50,50,50,50,50,50,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,50,-106,-107,-108,-110,50,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,50,50,50,50,50,50,-166,50,-119,-65,50,50,50,50,-37,-87,50,50,50,50,50,50,-36,50,50,50,50,50,50,]),'INTNUMBER':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[51,-77,-78,-88,-89,-115,51,-91,-166,-93,51,-123,-124,-125,-126,-97,51,-59,-60,-61,-62,-63,-64,-102,51,51,-105,-109,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-116,-166,-118,51,51,51,51,51,51,51,51,51,51,51,51,51,-111,-115,-112,51,-113,-114,51,51,51,51,51,51,51,51,51,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,51,-106,-107,-108,-110,51,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,51,51,51,51,51,51,-166,51,-119,-65,51,51,51,51,-37,-87,51,51,51,51,51,51,-36,51,51,51,51,51,51,]),'FLOATNUMBER':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[52,-77,-78,-88,-89,-115,52,-91,-166,-93,52,-123,-124,-125,-126,-97,52,-59,-60,-61,-62,-63,-64,-102,52,52,-105,-109,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-116,-166,-118,52,52,52,52,52,52,52,52,52,52,52,52,52,-111,-115,-112,52,-113,-114,52,52,52,52,52,52,52,52,52,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,52,-106,-107,-108,-110,52,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,52,52,52,52,52,52,-166,52,-119,-65,52,52,52,52,-37,-87,52,52,52,52,52,52,-36,52,52,52,52,52,52,]),'CHAR':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,107,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,207,208,209,211,212,213,215,220,223,230,231,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[54,-77,-78,-88,-89,-115,54,-91,-166,-93,54,-123,-124,-125,-126,-97,54,-59,-60,-61,-62,-63,-64,-102,54,54,-105,-109,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-116,-166,-118,54,54,54,54,54,54,54,54,54,54,54,54,54,-111,-115,-112,54,-113,-114,172,54,54,54,54,54,54,54,54,54,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,54,-106,-107,-108,-110,54,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,54,54,54,54,54,172,54,-166,54,-119,-65,54,54,54,54,172,-37,-87,54,54,54,54,54,54,-36,54,54,54,54,54,54,]),'TRUE':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[55,-77,-78,-88,-89,-115,55,-91,-166,-93,55,-123,-124,-125,-126,-97,55,-59,-60,-61,-62,-63,-64,-102,55,55,-105,-109,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-116,-166,-118,55,55,55,55,55,55,55,55,55,55,55,55,55,-111,-115,-112,55,-113,-114,55,55,55,55,55,55,55,55,55,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,55,-106,-107,-108,-110,55,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,55,55,55,55,55,55,-166,55,-119,-65,55,55,55,55,-37,-87,55,55,55,55,55,55,-36,55,55,55,55,55,55,]),'FALSE':([25,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[56,-77,-78,-88,-89,-115,56,-91,-166,-93,56,-123,-124,-125,-126,-97,56,-59,-60,-61,-62,-63,-64,-102,56,56,-105,-109,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-116,-166,-118,56,56,56,56,56,56,56,56,56,56,56,56,56,-111,-115,-112,56,-113,-114,56,56,56,56,56,56,56,56,56,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,56,-106,-107,-108,-110,56,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,56,56,56,56,56,56,-166,56,-119,-65,56,56,56,56,-37,-87,56,56,56,56,56,56,-36,56,56,56,56,56,56,]),'PLUS':([25,33,34,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,107,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[58,-77,-78,-88,-89,-115,-91,-166,-93,58,-123,-124,-125,-126,92,58,-59,-60,-61,-62,-63,-64,-102,58,58,-105,-109,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-116,-166,-118,58,58,58,58,58,58,58,58,58,58,58,-111,-115,-112,58,-113,-114,-126,58,58,58,58,58,58,58,58,58,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,92,92,92,92,-122,-103,-104,-127,58,-106,-107,-108,-110,58,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,58,58,58,58,58,58,-166,58,-119,-65,58,58,58,58,-37,-87,58,58,58,58,58,58,-36,58,58,58,58,58,58,]),'MINUS':([25,33,34,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,107,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[59,-77,-78,-88,-89,-115,-91,-166,-93,59,-123,-124,-125,-126,93,59,-59,-60,-61,-62,-63,-64,-102,59,59,-105,-109,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-116,-166,-118,59,59,59,59,59,59,59,59,59,59,59,-111,-115,-112,59,-113,-114,-126,59,59,59,59,59,59,59,59,59,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,93,93,93,93,-122,-103,-104,-127,59,-106,-107,-108,-110,59,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,59,59,59,59,59,59,-166,59,-119,-65,59,59,59,59,-37,-87,59,59,59,59,59,59,-36,59,59,59,59,59,59,]),'EXCLAMATION':([25,33,34,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[62,-77,-78,-88,-89,-115,-91,-166,-93,62,-123,-124,-125,-126,-97,62,-59,-60,-61,-62,-63,-64,-102,62,62,-105,-109,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-116,-166,-118,62,62,62,62,62,62,62,62,62,62,62,-111,-115,-112,62,-113,-114,62,62,62,62,62,62,62,62,62,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,62,-106,-107,-108,-110,62,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,62,62,62,62,62,62,-166,62,-119,-65,62,62,62,62,-37,-87,62,62,62,62,62,62,-36,62,62,62,62,62,62,]),'TILDE':([25,33,34,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,77,78,79,80,81,82,83,86,87,88,89,91,92,93,98,99,100,101,102,103,104,105,106,125,126,127,128,129,130,131,132,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,208,209,211,212,213,215,220,223,230,232,234,237,242,243,245,247,250,252,258,262,266,274,277,279,],[63,-77,-78,-88,-89,-115,-91,-166,-93,63,-123,-124,-125,-126,-97,63,-59,-60,-61,-62,-63,-64,-102,63,63,-105,-109,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-116,-166,-118,63,63,63,63,63,63,63,63,63,63,63,-111,-115,-112,63,-113,-114,63,63,63,63,63,63,63,63,63,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,63,-106,-107,-108,-110,63,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,63,63,63,63,63,63,-166,63,-119,-65,63,63,63,63,-37,-87,63,63,63,63,63,63,-36,63,63,63,63,63,63,]),'NEWLINE':([26,33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,196,197,198,199,200,205,206,212,213,216,219,226,227,234,235,238,257,263,270,272,273,280,281,282,],[64,-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,193,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-148,-149,-150,-166,-166,-166,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-160,-163,-164,-161,-162,-153,-165,-119,-65,-71,-129,-151,-152,-87,-70,-154,-157,-142,-141,-75,-72,-76,-155,-156,]),'RPAREN':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,65,80,81,82,90,91,95,96,97,101,102,103,105,106,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,212,213,214,228,229,233,234,264,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-166,-116,-166,-118,158,-166,-66,-67,-68,-111,-115,-112,-113,-114,-32,209,-28,-29,-30,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,213,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-119,-65,-69,-33,-34,-31,-87,-35,]),'COMMA':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,97,101,102,103,105,106,107,134,138,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,212,213,217,228,229,234,254,264,272,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,163,-111,-115,-112,-113,-114,170,-32,210,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-119,-65,236,-33,-34,-87,266,-35,277,]),'RBRACKET':([33,34,35,37,38,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,80,81,82,94,95,96,97,101,102,103,105,106,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,214,234,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-166,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,162,-66,-67,-68,-111,-115,-112,-113,-114,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,212,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,-69,-87,]),'DOT':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,110,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,234,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,194,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,-87,]),'END':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,196,197,198,199,200,205,206,212,213,216,219,222,224,225,226,227,234,235,238,241,244,246,248,249,251,257,259,260,261,263,269,270,271,272,273,276,278,280,281,282,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,192,-128,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-148,-149,-150,-166,-166,-166,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-160,-163,-164,-161,-162,-153,-165,-119,-65,-71,-129,-166,-166,-166,-151,-152,-87,-70,-154,257,-146,-166,-144,263,265,-157,-145,-158,270,-142,-159,-141,-166,-75,-72,-143,281,-76,-155,-156,]),'TCOLON':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,234,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,211,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,-87,]),'WHEN':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,195,196,197,198,199,200,205,206,212,213,216,219,222,226,227,234,235,238,257,260,263,269,270,272,273,280,281,282,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-128,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-148,-149,-150,-166,-166,-166,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,223,-160,-163,-164,-161,-162,-153,-165,-119,-65,-71,-129,242,-151,-152,-87,-70,-154,-157,-158,-142,-159,-141,-75,-72,-76,-155,-156,]),'ELSIF':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,196,197,198,199,200,205,206,212,213,216,219,224,226,227,234,235,238,257,263,270,271,272,273,280,281,282,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-128,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-148,-149,-150,-166,-166,-166,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-160,-163,-164,-161,-162,-153,-165,-119,-65,-71,-129,247,-151,-152,-87,-70,-154,-157,-142,-141,247,-75,-72,-76,-155,-156,]),'ELSE':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,196,197,198,199,200,205,206,212,213,216,219,222,224,225,226,227,234,235,238,246,248,257,260,263,269,270,271,272,273,276,280,281,282,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-128,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-148,-149,-150,-166,-166,-166,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-160,-163,-164,-161,-162,-153,-165,-119,-65,-71,-129,243,-166,243,-151,-152,-87,-70,-154,243,-144,-157,-158,-142,-159,-141,-166,-75,-72,-143,-76,-155,-156,]),'CASE':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,125,-116,-166,-118,-111,-115,-112,-113,-114,125,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,125,125,125,125,125,-166,-119,-65,125,125,-37,-87,125,125,-36,125,125,125,125,]),'RETURN':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,126,-116,-166,-118,-111,-115,-112,-113,-114,126,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,126,126,126,126,126,-166,-119,-65,126,126,-37,-87,126,126,-36,126,126,126,126,]),'BREAK':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,127,-116,-166,-118,-111,-115,-112,-113,-114,127,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,127,127,127,127,127,-166,-119,-65,127,127,-37,-87,127,127,-36,127,127,127,127,]),'NEXT':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,128,-116,-166,-118,-111,-115,-112,-113,-114,128,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,128,128,128,128,128,-166,-119,-65,128,128,-37,-87,128,128,-36,128,128,128,128,]),'IF':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,129,-116,-166,-118,-111,-115,-112,-113,-114,129,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,129,129,129,129,129,-166,-119,-65,129,129,-37,-87,129,129,-36,129,129,129,129,]),'UNLESS':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,130,-116,-166,-118,-111,-115,-112,-113,-114,130,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,130,130,130,130,130,-166,-119,-65,130,130,-37,-87,130,130,-36,130,130,130,130,]),'WHILE':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,131,-116,-166,-118,-111,-115,-112,-113,-114,131,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,131,131,131,131,131,-166,-119,-65,131,131,-37,-87,131,131,-36,131,131,131,131,]),'UNTIL':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,132,-116,-166,-118,-111,-115,-112,-113,-114,132,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,132,132,132,132,132,-166,-119,-65,132,132,-37,-87,132,132,-36,132,132,132,132,]),'LOOP':([33,34,35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,64,80,81,82,101,102,103,105,106,133,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,201,202,203,204,209,212,213,220,230,232,234,243,245,252,258,262,274,279,],[-77,-78,-88,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,133,-116,-166,-118,-111,-115,-112,-113,-114,133,-90,-79,-80,-81,-82,-83,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,133,133,133,133,133,-166,-119,-65,133,133,-37,-87,133,133,-36,133,133,133,133,]),'QMARK':([35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,140,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[67,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-90,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'OR':([35,37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,140,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[68,-89,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-90,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'PLUS_ASSIGN':([36,38,39,42,45,46,47,48,51,52,53,54,55,56,75,76,80,81,82,107,150,152,153,158,162,212,213,],[70,-84,-85,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,-86,-84,-116,-166,-118,-126,-117,-120,-121,-122,-127,-119,-65,]),'MINUS_ASSIGN':([36,38,39,42,45,46,47,48,51,52,53,54,55,56,75,76,80,81,82,107,150,152,153,158,162,212,213,],[71,-84,-85,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,-86,-84,-116,-166,-118,-126,-117,-120,-121,-122,-127,-119,-65,]),'MULTI_ASSIGN':([36,38,39,42,45,46,47,48,51,52,53,54,55,56,75,76,80,81,82,107,150,152,153,158,162,212,213,],[72,-84,-85,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,-86,-84,-116,-166,-118,-126,-117,-120,-121,-122,-127,-119,-65,]),'DIVIDE_ASSIGN':([36,38,39,42,45,46,47,48,51,52,53,54,55,56,75,76,80,81,82,107,150,152,153,158,162,212,213,],[73,-84,-85,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,-86,-84,-116,-166,-118,-126,-117,-120,-121,-122,-127,-119,-65,]),'AND':([37,38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,140,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[74,-115,-91,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,74,-92,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'POTENCIACAO':([38,42,45,46,47,48,51,52,53,54,55,56,60,61,80,81,82,101,102,103,105,106,107,150,152,153,158,162,164,165,166,167,212,213,],[-115,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,104,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-117,-120,-121,-122,-127,104,104,104,-110,-119,-65,]),'MULTI':([38,42,45,46,47,48,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,150,152,153,158,160,161,162,164,165,166,167,194,212,213,],[-115,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,98,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-117,-120,-121,-122,98,98,-127,-106,-107,-108,-110,220,-119,-65,]),'DIVIDE':([38,42,45,46,47,48,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,150,152,153,158,160,161,162,164,165,166,167,212,213,],[-115,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,99,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-117,-120,-121,-122,99,99,-127,-106,-107,-108,-110,-119,-65,]),'MODULO':([38,42,45,46,47,48,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,150,152,153,158,160,161,162,164,165,166,167,212,213,],[-115,-166,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,100,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,-117,-120,-121,-122,100,100,-127,-106,-107,-108,-110,-119,-65,]),'GREATER_THAN':([38,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[-115,-166,86,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,86,86,86,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'LESS_THAN':([38,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[-115,-166,87,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,87,87,87,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'GREATER_EQUAL':([38,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[-115,-166,88,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,88,88,88,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'LESS_EQUAL':([38,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[-115,-166,89,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,89,89,89,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'EQUAL':([38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[-115,77,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,77,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'NOT_EQUAL':([38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[-115,78,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,78,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'TIPO_EQUAL':([38,41,42,43,45,46,47,48,49,51,52,53,54,55,56,57,60,61,80,81,82,101,102,103,105,106,107,146,147,148,149,150,152,153,154,155,156,157,158,160,161,162,164,165,166,167,212,213,],[-115,79,-166,-93,-123,-124,-125,-126,-97,-59,-60,-61,-62,-63,-64,-102,-105,-109,-116,-166,-118,-111,-115,-112,-113,-114,-126,79,-94,-95,-96,-117,-120,-121,-98,-99,-100,-101,-122,-103,-104,-127,-106,-107,-108,-110,-119,-65,]),'DOTDOT':([42,45,46,47,48,51,52,53,54,55,56,81,107,152,153,158,162,212,213,],[84,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,84,-126,-120,-121,-122,-127,-119,-65,]),'DOTDOTDOT':([42,45,46,47,48,51,52,53,54,55,56,81,107,152,153,158,162,212,213,],[85,-123,-124,-125,-126,-59,-60,-61,-62,-63,-64,85,-126,-120,-121,-122,-127,-119,-65,]),'NIL':([107,207,231,],[173,173,173,]),'INT':([107,207,231,],[177,177,177,]),'INT8':([107,207,231,],[178,178,178,]),'INT16':([107,207,231,],[179,179,179,]),'INT32':([107,207,231,],[180,180,180,]),'INT64':([107,207,231,],[181,181,181,]),'INT128':([107,207,231,],[182,182,182,]),'UINT8':([107,207,231,],[183,183,183,]),'UINT16':([107,207,231,],[184,184,184,]),'UINT32':([107,207,231,],[185,185,185,]),'UINT64':([107,207,231,],[186,186,186,]),'UINT128':([107,207,231,],[187,187,187,]),'FLOAT':([107,207,231,],[188,188,188,]),'FLOAT32':([107,207,231,],[189,189,189,]),'FLOAT64':([107,207,231,],[190,190,190,]),'BOOL':([107,207,231,],[191,191,191,]),'COLON':([134,209,],[207,231,]),'EACH':([194,],[221,]),'DO':([221,],[239,]),'LBRACE':([221,],[240,]),'PIPE':([239,240,267,268,],[255,256,274,275,]),'RBRACE':([275,],[279,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,66,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,44,50,64,67,69,70,71,72,73,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[32,90,97,110,139,141,142,143,144,145,151,97,195,197,197,197,201,202,203,204,110,97,216,110,110,110,110,110,229,234,235,110,245,110,254,258,110,110,262,264,110,110,272,110,272,110,]),'ternary_expression':([25,44,50,64,67,69,70,71,72,73,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_expression':([25,44,50,64,67,69,70,71,72,73,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'logical_or_expression':([25,44,50,64,67,69,70,71,72,73,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'assignment_target':([25,40,44,50,64,67,69,70,71,72,73,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[36,75,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'logical_and_expression':([25,44,50,64,67,68,69,70,71,72,73,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[37,37,37,37,37,140,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'postfix_expression':([25,40,44,50,58,59,62,63,64,67,68,69,70,71,72,73,74,77,78,79,83,86,87,88,89,91,92,93,98,99,100,104,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[38,76,38,38,102,102,102,102,38,38,102,38,38,38,38,38,102,102,102,102,38,102,102,102,102,38,102,102,102,102,102,102,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'equality_expression':([25,44,50,64,67,68,69,70,71,72,73,74,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[41,41,41,41,41,41,41,41,41,41,41,146,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'primary_expression':([25,40,44,50,58,59,62,63,64,67,68,69,70,71,72,73,74,77,78,79,83,84,85,86,87,88,89,91,92,93,98,99,100,104,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,152,153,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'relational_expression':([25,44,50,64,67,68,69,70,71,72,73,74,77,78,79,83,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[43,43,43,43,43,43,43,43,43,43,43,43,147,148,149,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'array_literal':([25,40,44,50,58,59,62,63,64,67,68,69,70,71,72,73,74,77,78,79,83,84,85,86,87,88,89,91,92,93,98,99,100,104,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'literal':([25,40,44,50,58,59,62,63,64,67,68,69,70,71,72,73,74,77,78,79,83,84,85,86,87,88,89,91,92,93,98,99,100,104,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'function_call':([25,40,44,50,58,59,62,63,64,67,68,69,70,71,72,73,74,77,78,79,83,84,85,86,87,88,89,91,92,93,98,99,100,104,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'additive_expression':([25,44,50,64,67,68,69,70,71,72,73,74,77,78,79,83,86,87,88,89,91,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,154,155,156,157,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'multiplicative_expression':([25,44,50,64,67,68,69,70,71,72,73,74,77,78,79,83,86,87,88,89,91,92,93,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,160,161,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'potenciacao_expression':([25,44,50,64,67,68,69,70,71,72,73,74,77,78,79,83,86,87,88,89,91,92,93,98,99,100,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,164,165,166,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'unary_expression':([25,44,50,58,59,62,63,64,67,68,69,70,71,72,73,74,77,78,79,83,86,87,88,89,91,92,93,98,99,100,104,125,126,127,128,129,130,131,132,133,163,169,193,201,202,203,204,208,211,215,220,223,230,237,242,243,245,247,250,258,262,266,274,277,279,],[61,61,61,101,103,105,106,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,167,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'postfix_suffixes':([42,81,],[80,150,]),'postfix_suffix':([42,81,],[81,81,]),'empty':([42,50,65,81,91,126,127,128,209,222,224,225,246,271,],[82,96,137,82,96,198,198,198,232,244,248,244,244,248,]),'opt_expression_list':([50,91,],[94,159,]),'expression_list':([50,91,163,],[95,95,214,]),'statements':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[108,206,219,206,206,206,206,206,206,206,206,206,206,206,206,]),'statement':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'control_structure':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'variable_declaration':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'conditional':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'loop_structure':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'case_structure':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'return_statement':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'break_statement':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'next_statement':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'if_statement':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'unless_statement':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'while':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'until':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'loop':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'iterator':([64,133,193,201,202,203,204,220,230,243,245,258,262,274,279,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'opt_argument_list':([65,],[135,]),'argument_list':([65,210,],[136,233,]),'argument':([65,210,],[138,138,]),'types':([107,207,231,],[168,228,252,]),'integer':([107,207,231,],[174,174,174,]),'float':([107,207,231,],[175,175,175,]),'boolean':([107,207,231,],[176,176,176,]),'opt_expression':([126,127,128,],[196,199,200,]),'statements_block':([133,201,202,203,204,220,230,243,245,258,262,274,279,],[205,224,225,226,227,238,251,259,260,269,271,278,282,]),'list_of_identifiers':([170,236,],[218,253,]),'when_list':([195,],[222,]),'opt_return_type':([209,],[230,]),'opt_else':([222,225,246,],[241,249,261,]),'opt_elsif':([224,271,],[246,276,]),'list_of_values':([266,277,],[273,280,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParse.py',27),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParse.py',28),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParse.py',29),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',30),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParse.py',31),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParse.py',32),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParse.py',33),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParse.py',34),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParse.py',35),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParse.py',36),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParse.py',37),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParse.py',38),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParse.py',39),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParse.py',40),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParse.py',41),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParse.py',44),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParse.py',45),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParse.py',48),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParse.py',51),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParse.py',52),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParse.py',55),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParse.py',58),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParse.py',59),
  ('module -> MODULE ID NEWLINE statements END','module',5,'p_module','ExpressionLanguageParse.py',62),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParse.py',65),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParse.py',66),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements_block END','function',8,'p_function','ExpressionLanguageParse.py',69),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',72),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParse.py',73),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParse.py',75),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParse.py',76),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParse.py',79),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParse.py',80),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParse.py',81),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParse.py',82),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParse.py',85),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParse.py',86),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParse.py',89),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParse.py',90),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParse.py',91),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParse.py',92),
  ('types -> float','types',1,'p_types','ExpressionLanguageParse.py',93),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParse.py',94),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParse.py',97),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParse.py',98),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParse.py',99),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParse.py',100),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParse.py',101),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParse.py',102),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParse.py',103),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParse.py',104),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParse.py',105),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParse.py',106),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParse.py',107),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParse.py',110),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParse.py',111),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParse.py',112),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParse.py',115),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',118),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParse.py',119),
  ('literal -> STRING','literal',1,'p_literal','ExpressionLanguageParse.py',120),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParse.py',121),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParse.py',122),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParse.py',123),
  ('function_call -> ID LPAREN opt_expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParse.py',126),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',129),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParse.py',130),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParse.py',133),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','ExpressionLanguageParse.py',134),
  ('variable_declaration -> ID types ASSIGN expression','variable_declaration',4,'p_variable_declaration','ExpressionLanguageParse.py',137),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParse.py',138),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParse.py',139),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParse.py',142),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParse.py',143),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParse.py',146),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParse.py',147),
  ('expression -> ternary_expression','expression',1,'p_expression','ExpressionLanguageParse.py',151),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParse.py',152),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',156),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',157),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',158),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',159),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParse.py',160),
  ('assignment_target -> postfix_expression','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',163),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParse.py',164),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParse.py',165),
  ('ternary_expression -> logical_or_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParse.py',168),
  ('ternary_expression -> logical_or_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParse.py',169),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParse.py',172),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParse.py',173),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParse.py',176),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParse.py',177),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParse.py',180),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',181),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',182),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParse.py',183),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParse.py',186),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',187),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',188),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',189),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParse.py',190),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParse.py',193),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',194),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParse.py',195),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParse.py',199),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',200),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',201),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParse.py',202),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParse.py',205),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParse.py',206),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',209),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',210),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',211),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParse.py',212),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParse.py',213),
  ('postfix_expression -> primary_expression postfix_suffixes','postfix_expression',2,'p_postfix_expression','ExpressionLanguageParse.py',216),
  ('postfix_suffixes -> postfix_suffix postfix_suffixes','postfix_suffixes',2,'p_postfix_suffixes','ExpressionLanguageParse.py',219),
  ('postfix_suffixes -> empty','postfix_suffixes',1,'p_postfix_suffixes','ExpressionLanguageParse.py',220),
  ('postfix_suffix -> LBRACKET expression RBRACKET','postfix_suffix',3,'p_postfix_suffix','ExpressionLanguageParse.py',223),
  ('postfix_suffix -> DOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',224),
  ('postfix_suffix -> DOTDOTDOT primary_expression','postfix_suffix',2,'p_postfix_suffix','ExpressionLanguageParse.py',225),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','ExpressionLanguageParse.py',228),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',229),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',230),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',231),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParse.py',232),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParse.py',235),
  ('statements -> statement','statements',1,'p_statements','ExpressionLanguageParse.py',241),
  ('statements -> statement NEWLINE statements','statements',3,'p_statements','ExpressionLanguageParse.py',242),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParse.py',245),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParse.py',246),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParse.py',247),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',250),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',251),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',252),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',253),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',254),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParse.py',255),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',258),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParse.py',259),
  ('if_statement -> IF expression statements_block opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParse.py',262),
  ('unless_statement -> UNLESS expression statements_block opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParse.py',265),
  ('opt_elsif -> ELSIF expression statements_block opt_elsif','opt_elsif',4,'p_opt_elsif','ExpressionLanguageParse.py',268),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParse.py',269),
  ('opt_else -> ELSE statements_block','opt_else',2,'p_opt_else','ExpressionLanguageParse.py',272),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParse.py',273),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',276),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',277),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',278),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParse.py',279),
  ('while -> WHILE expression statements_block','while',3,'p_while','ExpressionLanguageParse.py',282),
  ('until -> UNTIL expression statements_block','until',3,'p_until','ExpressionLanguageParse.py',285),
  ('loop -> LOOP statements_block','loop',2,'p_loop','ExpressionLanguageParse.py',288),
  ('iterator -> expression DOT MULTI statements_block','iterator',4,'p_iterator','ExpressionLanguageParse.py',292),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements_block END','iterator',9,'p_iterator','ExpressionLanguageParse.py',293),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements_block','iterator',9,'p_iterator','ExpressionLanguageParse.py',294),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParse.py',297),
  ('when_list -> WHEN expression statements_block','when_list',3,'p_when_list','ExpressionLanguageParse.py',300),
  ('when_list -> when_list WHEN expression statements_block','when_list',4,'p_when_list','ExpressionLanguageParse.py',301),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParse.py',304),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParse.py',307),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParse.py',310),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',313),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParse.py',314),
  ('statements_block -> statements','statements_block',1,'p_statements_block','ExpressionLanguageParse.py',317),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParse.py',320),
]
