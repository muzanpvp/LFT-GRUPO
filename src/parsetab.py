
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANLESS_EQUALGREATER_THANGREATER_EQUALleftEQUALNOT_EQUALTIPO_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSNOTTILDEAND AS ASSIGN ASSOCIACAO ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUSMINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUSPLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID statements ENDfunction_list    :   function \n|   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END\n|   DEF ID opt_return_type NEWLINE statements ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   string_literal\n|   CHAR\n|   TRUE\n|   FALSEstring_literal   :   STRING\n|   STRING INTERP_START expression INTERP_END string_literalvariable_declaration :   ID COLON types ASSIGN expression\n|   ID ASSIGN expression\n|   ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_valueslist_of_identifiers  :   ID\n|   ID COMMA list_of_identifierslist_of_values   :   expression\n|   expression COMMA list_of_valuesfunction_call    :   ID LPAREN expression_list RPAREN\n|   ID LPAREN RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionstatements   :   statements_list statements_list  :   statements_list statements_base\n|   empty statements_base   :   statement NEWLINE\n|   statement SEMICOLONstatement    :   expression\n|   control_structure\n|   variable_declaration\n|   function_callcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement : IF if_condition statements opt_elsif opt_else ENDunless_statement : UNLESS if_condition statements opt_else ENDif_condition : expression\n| expression LBRACE statements RBRACEopt_elsif : elsif_list\n| emptyelsif_list : elsif_list elsif\n| elsifelsif : ELSIF if_condition statementsopt_else : ELSE statements\n| emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statementsuntil    :   UNTIL expression statementsloop :   LOOP statementsiterator :   expression DOT MULTI statements\n|   expression DOT EACH DO PIPE ID PIPE statements END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statementscase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements\n|   when_list WHEN expression statementsreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptyexpression   :   assignment_expressionassignment_expression    :   assignment_target ASSIGN expression\n|   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expression\n|   ternary_expressionassignment_target    :   ID\n|   ID LBRACKET expression RBRACKET \n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   range_expression QMARK expression TCOLON expression\n|   range_expressionrange_expression :   logical_or_expression DOTDOT logical_or_expression\n|   logical_or_expression DOTDOTDOT logical_or_expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expression multiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   primary_expressionprimary_expression   :   LPAREN expression RPAREN\n|   array_literal\n|   literal\n|   IDarray_literal    :   LBRACKET opt_expression_list RBRACKETempty :'
    
_lr_action_items = {'REQUIRE':([0,6,24,],[10,10,-18,]),'CONSTANT':([0,2,6,7,20,24,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,242,243,],[11,11,-17,11,-16,-18,-21,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-138,-67,]),'MODULE':([0,2,3,6,7,8,14,20,21,24,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,109,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,242,243,],[12,12,12,-17,-20,12,12,-16,-19,-18,-21,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-24,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-138,-67,]),'DEF':([0,2,3,4,6,7,8,9,14,15,17,20,21,22,24,28,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,109,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,241,242,243,280,],[13,13,13,13,-17,-20,-23,13,13,13,13,-16,-19,-22,-18,13,-21,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-24,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-28,-138,-67,-27,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,71,101,102,103,105,106,109,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,241,242,243,280,],[0,-12,-13,-14,-15,-17,-20,-23,-25,-6,-7,-9,-8,-10,-11,-16,-19,-22,-26,-18,-2,-3,-4,-5,-21,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-1,-165,-173,-166,-167,-168,-24,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-28,-138,-67,-27,]),'STRING':([10,25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,197,198,200,207,208,209,210,211,213,214,215,220,221,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[24,63,-175,-127,-133,-173,63,-139,-142,-143,-145,-147,-151,-156,63,63,-159,-163,63,63,-169,63,-171,-172,-60,-61,-62,-63,-64,-65,-66,63,-83,145,-38,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-165,-173,-166,63,-167,-168,63,-82,63,63,63,63,63,63,63,63,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,63,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,145,63,63,-175,-100,-175,-175,-175,145,63,-175,63,63,-175,63,-175,-175,-138,-67,63,63,63,-175,-175,63,63,-175,-175,-101,63,-175,-175,63,]),'ASSIGN':([11,34,36,38,82,83,122,138,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,218,224,226,227,237,268,],[25,72,-134,-136,-137,-134,198,214,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-135,247,-71,249,263,-72,]),'ID':([12,13,25,26,33,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,199,200,207,208,209,210,211,214,215,216,220,222,231,233,239,242,243,247,248,249,252,253,255,260,263,265,266,271,276,277,283,287,292,293,],[26,27,36,-175,-127,-133,-173,36,83,-139,-142,-143,-145,-147,-151,-156,102,102,-159,-163,102,102,-169,36,-171,-172,-60,-61,-62,-63,-64,-65,-66,122,-83,138,-38,36,36,36,36,36,36,36,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-165,-173,-166,102,-167,-168,36,-82,36,36,36,36,36,36,36,36,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,36,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,36,226,36,-175,-100,-175,-175,-175,36,-175,138,36,-175,36,-175,-175,-138,-67,36,226,36,36,-175,-175,36,36,281,282,-175,-175,-101,36,-175,-175,36,]),'UNDERSCORE':([25,26,33,35,36,37,39,40,41,42,43,44,45,46,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,101,102,103,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[38,-175,-127,-133,-173,38,38,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,38,-171,-172,-60,-61,-62,-63,-64,-65,-66,38,-83,-38,38,38,38,38,38,38,38,-165,-173,-166,-167,-168,38,-82,38,38,38,38,38,38,38,38,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,38,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,38,38,-175,-100,-175,-175,-175,38,-175,38,-175,38,-175,-175,-138,-67,38,38,38,-175,-175,38,38,-175,-175,-101,38,-175,-175,38,]),'ASTERISK':([25,26,33,35,36,37,39,40,41,42,43,44,45,46,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,101,102,103,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[39,-175,-127,-133,-173,39,39,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,39,-171,-172,-60,-61,-62,-63,-64,-65,-66,39,-83,-38,39,39,39,39,39,39,39,-165,-173,-166,-167,-168,39,-82,39,39,39,39,39,39,39,39,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,39,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,39,39,-175,-100,-175,-175,-175,39,-175,39,-175,39,-175,-175,-138,-67,39,39,39,-175,-175,39,39,-175,-175,-101,39,-175,-175,39,]),'PLUS':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,122,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[47,-175,-127,-133,-173,47,-139,-142,-143,-145,-147,96,-156,47,47,-159,-163,47,47,-169,47,-171,-172,-60,-61,-62,-63,-64,-65,-66,47,-83,-38,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-165,-173,-166,47,-167,-168,47,-82,-173,47,47,47,47,47,47,47,47,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,47,-140,-141,-144,-146,-148,-149,-150,96,96,96,96,-157,-158,-160,-161,-162,-164,-170,-84,-85,47,47,-175,-100,-175,-175,-175,47,-175,47,-175,47,-175,-175,-138,-67,47,47,47,-175,-175,47,47,-175,-175,-101,47,-175,-175,47,]),'MINUS':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,122,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[48,-175,-127,-133,-173,48,-139,-142,-143,-145,-147,97,-156,48,48,-159,-163,48,48,-169,48,-171,-172,-60,-61,-62,-63,-64,-65,-66,48,-83,-38,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-165,-173,-166,48,-167,-168,48,-82,-173,48,48,48,48,48,48,48,48,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,48,-140,-141,-144,-146,-148,-149,-150,97,97,97,97,-157,-158,-160,-161,-162,-164,-170,-84,-85,48,48,-175,-100,-175,-175,-175,48,-175,48,-175,48,-175,-175,-138,-67,48,48,48,-175,-175,48,48,-175,-175,-101,48,-175,-175,48,]),'EXCLAMATION':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[51,-175,-127,-133,-173,51,-139,-142,-143,-145,-147,-151,-156,51,51,-159,-163,51,51,-169,51,-171,-172,-60,-61,-62,-63,-64,-65,-66,51,-83,-38,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-165,-173,-166,51,-167,-168,51,-82,51,51,51,51,51,51,51,51,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,51,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,51,51,-175,-100,-175,-175,-175,51,-175,51,-175,51,-175,-175,-138,-67,51,51,51,-175,-175,51,51,-175,-175,-101,51,-175,-175,51,]),'TILDE':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[52,-175,-127,-133,-173,52,-139,-142,-143,-145,-147,-151,-156,52,52,-159,-163,52,52,-169,52,-171,-172,-60,-61,-62,-63,-64,-65,-66,52,-83,-38,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-165,-173,-166,52,-167,-168,52,-82,52,52,52,52,52,52,52,52,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,52,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,52,52,-175,-100,-175,-175,-175,52,-175,52,-175,52,-175,-175,-138,-67,52,52,52,-175,-175,52,52,-175,-175,-101,52,-175,-175,52,]),'LPAREN':([25,26,27,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,122,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[54,-175,67,-127,-133,-173,54,-139,-142,-143,-145,-147,-151,-156,54,54,-159,-163,54,54,-169,54,-171,-172,-60,-61,-62,-63,-64,-65,-66,54,-83,-38,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-165,-173,-166,54,-167,-168,54,-82,200,54,54,54,54,54,54,54,54,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,54,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,54,54,-175,-100,-175,-175,-175,54,-175,54,-175,54,-175,-175,-138,-67,54,54,54,-175,-175,54,54,-175,-175,-101,54,-175,-175,54,]),'LBRACKET':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,122,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[37,-175,-127,-133,77,37,-139,-142,-143,-145,-147,-151,-156,37,37,-159,-163,37,37,-169,37,-171,-172,-60,-61,-62,-63,-64,-65,-66,37,-83,-38,37,37,37,37,37,37,77,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-165,-173,-166,37,-167,-168,37,-82,77,37,37,37,37,37,37,37,37,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,37,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,37,37,-175,-100,-175,-175,-175,37,-175,37,-175,37,-175,-175,-138,-67,37,37,37,-175,-175,37,37,-175,-175,-101,37,-175,-175,37,]),'INTNUMBER':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[57,-175,-127,-133,-173,57,-139,-142,-143,-145,-147,-151,-156,57,57,-159,-163,57,57,-169,57,-171,-172,-60,-61,-62,-63,-64,-65,-66,57,-83,-38,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-165,-173,-166,57,-167,-168,57,-82,57,57,57,57,57,57,57,57,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,57,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,57,57,-175,-100,-175,-175,-175,57,-175,57,-175,57,-175,-175,-138,-67,57,57,57,-175,-175,57,57,-175,-175,-101,57,-175,-175,57,]),'FLOATNUMBER':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[58,-175,-127,-133,-173,58,-139,-142,-143,-145,-147,-151,-156,58,58,-159,-163,58,58,-169,58,-171,-172,-60,-61,-62,-63,-64,-65,-66,58,-83,-38,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-165,-173,-166,58,-167,-168,58,-82,58,58,58,58,58,58,58,58,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,58,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,58,58,-175,-100,-175,-175,-175,58,-175,58,-175,58,-175,-175,-138,-67,58,58,58,-175,-175,58,58,-175,-175,-101,58,-175,-175,58,]),'CHAR':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,69,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,197,198,200,207,208,209,210,211,213,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[60,-175,-127,-133,-173,60,-139,-142,-143,-145,-147,-151,-156,60,60,-159,-163,60,60,-169,60,-171,-172,-60,-61,-62,-63,-64,-65,-66,60,-83,146,-38,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-165,-173,-166,60,-167,-168,60,-82,60,60,60,60,60,60,60,60,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,60,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,146,60,60,-175,-100,-175,-175,-175,146,60,-175,60,-175,60,-175,-175,-138,-67,60,60,60,-175,-175,60,60,-175,-175,-101,60,-175,-175,60,]),'TRUE':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[61,-175,-127,-133,-173,61,-139,-142,-143,-145,-147,-151,-156,61,61,-159,-163,61,61,-169,61,-171,-172,-60,-61,-62,-63,-64,-65,-66,61,-83,-38,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-165,-173,-166,61,-167,-168,61,-82,61,61,61,61,61,61,61,61,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,61,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,61,61,-175,-100,-175,-175,-175,61,-175,61,-175,61,-175,-175,-138,-67,61,61,61,-175,-175,61,61,-175,-175,-101,61,-175,-175,61,]),'FALSE':([25,26,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,70,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,129,130,131,132,133,134,135,136,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,198,200,207,208,209,210,211,214,215,220,222,231,233,239,242,243,247,249,252,253,255,260,263,271,276,277,283,287,292,293,],[62,-175,-127,-133,-173,62,-139,-142,-143,-145,-147,-151,-156,62,62,-159,-163,62,62,-169,62,-171,-172,-60,-61,-62,-63,-64,-65,-66,62,-83,-38,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-165,-173,-166,62,-167,-168,62,-82,62,62,62,62,62,62,62,62,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,62,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,62,62,-175,-100,-175,-175,-175,62,-175,62,-175,62,-175,-175,-138,-67,62,62,62,-175,-175,62,62,-175,-175,-101,62,-175,-175,62,]),'CASE':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,129,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'RETURN':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,130,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'BREAK':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,131,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'NEXT':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,132,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'IF':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,133,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'UNLESS':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,134,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'WHILE':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,135,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'UNTIL':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,136,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'LOOP':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,70,101,102,103,105,106,110,137,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,210,211,215,222,233,239,242,243,253,255,271,276,277,287,292,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,137,-83,-38,-165,-173,-166,-167,-168,-82,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,-175,-175,-175,-175,-175,-138,-67,-175,-175,-175,-175,-101,-175,-175,]),'END':([26,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,64,65,66,70,101,102,103,105,106,110,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,215,217,230,232,234,239,242,243,251,253,254,255,256,257,258,259,262,264,271,272,273,274,275,276,277,284,286,287,291,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,109,-81,-83,-38,-165,-173,-166,-167,-168,-82,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,-175,241,-175,-175,-175,-175,-138,-67,270,-175,-108,-175,-175,-102,-103,-105,278,280,-175,-107,-120,285,-104,-175,-101,-121,-106,-175,294,]),'COLON':([27,122,138,215,],[69,197,213,69,]),'NEWLINE':([27,33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,68,70,101,102,103,105,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,137,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,202,203,204,205,206,210,211,212,222,225,229,235,236,242,243,244,250,267,270,278,285,289,290,292,294,295,296,],[-175,-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-81,-83,143,-38,-165,-173,-166,-167,-168,-82,194,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-173,-96,-97,-109,-110,-111,-112,-175,-175,-175,-175,-37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-122,-125,-126,-123,-124,-175,-175,-115,-175,-69,-76,-113,-114,-138,-67,-116,-75,-68,-119,-99,-98,-73,-70,-175,-117,-118,-74,]),'COMMA':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,79,81,101,102,103,105,106,122,138,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,219,226,228,237,238,242,243,269,279,289,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,173,-79,-165,-173,-166,-167,-168,199,-33,216,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-80,248,173,-34,-35,-138,-67,283,-36,293,]),'RBRACKET':([33,35,36,37,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,78,79,80,81,101,102,103,105,106,166,167,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,219,242,243,],[-127,-133,-173,-175,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,172,-77,-78,-79,-165,-173,-166,-167,-168,-128,-129,-130,-131,-132,218,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-80,-138,-67,]),'RPAREN':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,67,81,101,102,103,105,106,107,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,219,228,237,238,240,242,243,279,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-175,-79,-165,-173,-166,-167,-168,192,-33,215,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,229,-80,250,-34,-35,-32,-138,-67,-36,]),'DOT':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,112,122,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,242,243,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,196,-173,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-138,-67,]),'SEMICOLON':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,101,102,103,105,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,137,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,202,203,204,205,206,210,211,212,222,225,229,235,236,242,243,244,250,267,270,278,285,289,290,292,294,295,296,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-81,-83,-165,-173,-166,-167,-168,-82,195,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-173,-96,-97,-109,-110,-111,-112,-175,-175,-175,-175,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-122,-125,-126,-123,-124,-175,-175,-115,-175,-69,-76,-113,-114,-138,-67,-116,-75,-68,-119,-99,-98,-73,-70,-175,-117,-118,-74,]),'TCOLON':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,166,167,168,169,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,242,243,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-128,-129,-130,-131,-132,-174,220,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-138,-67,]),'INTERP_END':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,242,243,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,221,-138,-67,]),'WHEN':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,101,102,103,105,106,110,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,201,230,242,243,255,271,273,284,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-81,-83,-165,-173,-166,-167,-168,-82,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,231,252,-138,-67,-175,-175,-120,-121,]),'LBRACE':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,208,223,242,243,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,233,246,-138,-67,]),'ELSIF':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,101,102,103,105,106,110,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,232,242,243,257,259,275,276,277,286,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-81,-83,-165,-173,-166,-167,-168,-82,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,260,-138,-67,260,-105,-104,-175,-101,-106,]),'ELSE':([33,35,36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,65,66,101,102,103,105,106,110,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,207,208,209,230,232,234,242,243,255,256,257,258,259,271,273,275,276,277,284,286,],[-127,-133,-173,-139,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-81,-83,-165,-173,-166,-167,-168,-82,-128,-129,-130,-131,-132,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-84,-85,-175,-100,-175,253,-175,253,-138,-67,-175,253,-102,-103,-105,-175,-120,-104,-175,-101,-121,-106,]),'PLUS_ASSIGN':([34,36,38,82,83,122,218,],[73,-134,-136,-137,-134,-134,-135,]),'MINUS_ASSIGN':([34,36,38,82,83,122,218,],[74,-134,-136,-137,-134,-134,-135,]),'MULTI_ASSIGN':([34,36,38,82,83,122,218,],[75,-134,-136,-137,-134,-134,-135,]),'DIVIDE_ASSIGN':([34,36,38,82,83,122,218,],[76,-134,-136,-137,-134,-134,-135,]),'POTENCIACAO':([36,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,188,189,190,191,192,243,],[-173,104,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,104,104,104,-164,-170,-67,]),'MULTI':([36,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,186,187,188,189,190,191,192,196,243,],[-173,98,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,98,98,-160,-161,-162,-164,-170,222,-67,]),'DIVIDE':([36,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,186,187,188,189,190,191,192,243,],[-173,99,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,99,99,-160,-161,-162,-164,-170,-67,]),'MODULO':([36,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,186,187,188,189,190,191,192,243,],[-173,100,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,100,100,-160,-161,-162,-164,-170,-67,]),'GREATER_THAN':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,92,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,92,92,92,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'LESS_THAN':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,93,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,93,93,93,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'GREATER_EQUAL':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,94,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,94,94,94,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'LESS_EQUAL':([36,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,95,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,95,95,95,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'EQUAL':([36,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,89,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,89,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'NOT_EQUAL':([36,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,90,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,90,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'TIPO_EQUAL':([36,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,91,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,91,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'AND':([36,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,88,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,88,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'DOTDOT':([36,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,85,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'DOTDOTDOT':([36,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,86,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'OR':([36,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,87,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,87,87,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'QMARK':([36,40,41,42,43,44,45,46,49,50,53,55,56,57,58,59,60,61,62,63,101,102,103,105,106,122,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,243,],[-173,84,-142,-143,-145,-147,-151,-156,-159,-163,-169,-171,-172,-60,-61,-62,-63,-64,-65,-66,-165,-173,-166,-167,-168,-173,-174,-140,-141,-144,-146,-148,-149,-150,-152,-153,-154,-155,-157,-158,-160,-161,-162,-164,-170,-67,]),'INTERP_START':([63,],[108,]),'RBRACE':([65,66,110,194,195,233,261,288,],[-81,-83,-82,-84,-85,-175,277,292,]),'NIL':([69,197,213,],[147,147,147,]),'INT':([69,197,213,],[151,151,151,]),'INT8':([69,197,213,],[152,152,152,]),'INT16':([69,197,213,],[153,153,153,]),'INT32':([69,197,213,],[154,154,154,]),'INT64':([69,197,213,],[155,155,155,]),'INT128':([69,197,213,],[156,156,156,]),'UINT8':([69,197,213,],[157,157,157,]),'UINT16':([69,197,213,],[158,158,158,]),'UINT32':([69,197,213,],[159,159,159,]),'UINT64':([69,197,213,],[160,160,160,]),'UINT128':([69,197,213,],[161,161,161,]),'FLOAT':([69,197,213,],[162,162,162,]),'FLOAT32':([69,197,213,],[163,163,163,]),'FLOAT64':([69,197,213,],[164,164,164,]),'BOOL':([69,197,213,],[165,165,165,]),'EACH':([196,],[223,]),'DO':([223,],[245,]),'PIPE':([245,246,281,282,],[265,266,287,288,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,6,],[2,20,]),'constant_list':([0,2,7,],[3,14,21,]),'module_list':([0,2,3,8,14,],[4,15,17,22,28,]),'function_list':([0,2,3,4,9,14,15,17,28,],[5,16,18,19,23,29,30,31,71,]),'require':([0,6,],[6,6,]),'constant':([0,2,7,],[7,7,7,]),'module':([0,2,3,8,14,],[8,8,8,8,8,]),'function':([0,2,3,4,9,14,15,17,28,],[9,9,9,9,9,9,9,9,9,]),'expression':([25,37,54,65,72,73,74,75,76,77,84,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[32,81,107,112,166,167,168,169,170,171,174,193,201,203,203,203,208,208,210,211,219,225,81,238,242,255,267,269,271,208,279,289,289,]),'assignment_expression':([25,37,54,65,72,73,74,75,76,77,84,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'assignment_target':([25,37,39,54,65,72,73,74,75,76,77,84,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[34,34,82,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ternary_expression':([25,37,54,65,72,73,74,75,76,77,84,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'range_expression':([25,37,54,65,72,73,74,75,76,77,84,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'logical_or_expression':([25,37,54,65,72,73,74,75,76,77,84,85,86,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[41,41,41,41,41,41,41,41,41,41,41,175,176,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'logical_and_expression':([25,37,54,65,72,73,74,75,76,77,84,85,86,87,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[42,42,42,42,42,42,42,42,42,42,42,42,42,177,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'equality_expression':([25,37,54,65,72,73,74,75,76,77,84,85,86,87,88,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,178,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'relational_expression':([25,37,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,179,180,181,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'additive_expression':([25,37,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,182,183,184,185,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'multiplicative_expression':([25,37,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,186,187,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'potenciacao_expression':([25,37,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,188,189,190,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'unary_expression':([25,37,47,48,51,52,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[50,50,101,103,105,106,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,191,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'primary_expression':([25,37,47,48,51,52,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'array_literal':([25,37,47,48,51,52,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'literal':([25,37,47,48,51,52,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,108,129,130,131,132,133,134,135,136,173,198,200,214,220,231,247,249,252,260,263,283,293,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'string_literal':([25,37,47,48,51,52,54,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,108,129,130,131,132,133,134,135,136,173,198,200,214,220,221,231,247,249,252,260,263,283,293,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,243,59,59,59,59,59,59,59,59,]),'statements':([26,137,143,207,209,210,211,222,233,239,253,255,271,276,287,292,],[64,212,217,232,234,235,236,244,261,264,272,273,284,286,291,295,]),'statements_list':([26,137,143,207,209,210,211,222,233,239,253,255,271,276,287,292,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'empty':([26,27,37,67,130,131,132,137,143,207,209,210,211,215,222,230,232,233,234,239,253,255,256,271,276,287,292,],[66,70,80,141,204,204,204,66,66,66,66,66,66,70,66,254,258,66,254,66,66,66,254,66,66,66,66,]),'opt_return_type':([27,215,],[68,239,]),'opt_expression_list':([37,],[78,]),'expression_list':([37,200,],[79,228,]),'statements_base':([65,],[110,]),'statement':([65,],[111,]),'control_structure':([65,],[113,]),'variable_declaration':([65,],[114,]),'function_call':([65,],[115,]),'conditional':([65,],[116,]),'loop_structure':([65,],[117,]),'case_structure':([65,],[118,]),'return_statement':([65,],[119,]),'break_statement':([65,],[120,]),'next_statement':([65,],[121,]),'if_statement':([65,],[123,]),'unless_statement':([65,],[124,]),'while':([65,],[125,]),'until':([65,],[126,]),'loop':([65,],[127,]),'iterator':([65,],[128,]),'opt_argument_list':([67,],[139,]),'argument_list':([67,216,],[140,240,]),'argument':([67,216,],[142,142,]),'types':([69,197,213,],[144,224,237,]),'integer':([69,197,213,],[148,148,148,]),'float':([69,197,213,],[149,149,149,]),'boolean':([69,197,213,],[150,150,150,]),'opt_expression':([130,131,132,],[202,205,206,]),'if_condition':([133,134,260,],[207,209,276,]),'list_of_identifiers':([199,248,],[227,268,]),'when_list':([201,],[230,]),'opt_else':([230,234,256,],[251,262,274,]),'opt_elsif':([232,],[256,]),'elsif_list':([232,],[257,]),'elsif':([232,257,],[259,275,]),'list_of_values':([283,293,],[290,296,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParser.py',25),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParser.py',26),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParser.py',27),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',28),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',29),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParser.py',30),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParser.py',31),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParser.py',32),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParser.py',33),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParser.py',34),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParser.py',35),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParser.py',36),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParser.py',37),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParser.py',38),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParser.py',39),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParser.py',80),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParser.py',81),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParser.py',88),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParser.py',93),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParser.py',94),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParser.py',102),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParser.py',108),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParser.py',109),
  ('module -> MODULE ID statements END','module',4,'p_module','ExpressionLanguageParser.py',117),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParser.py',122),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParser.py',123),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END','function',8,'p_function','ExpressionLanguageParser.py',131),
  ('function -> DEF ID opt_return_type NEWLINE statements END','function',6,'p_function','ExpressionLanguageParser.py',132),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',140),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',141),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParser.py',145),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParser.py',146),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParser.py',154),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParser.py',155),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParser.py',156),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParser.py',157),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParser.py',169),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParser.py',170),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParser.py',176),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParser.py',177),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParser.py',178),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParser.py',179),
  ('types -> float','types',1,'p_types','ExpressionLanguageParser.py',180),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParser.py',181),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParser.py',184),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParser.py',185),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParser.py',186),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParser.py',187),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParser.py',188),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParser.py',189),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParser.py',190),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParser.py',191),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParser.py',192),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParser.py',193),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParser.py',194),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParser.py',197),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParser.py',198),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParser.py',199),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParser.py',202),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',205),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',206),
  ('literal -> string_literal','literal',1,'p_literal','ExpressionLanguageParser.py',207),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParser.py',208),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParser.py',209),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParser.py',210),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','ExpressionLanguageParser.py',213),
  ('string_literal -> STRING INTERP_START expression INTERP_END string_literal','string_literal',5,'p_string_literal','ExpressionLanguageParser.py',214),
  ('variable_declaration -> ID COLON types ASSIGN expression','variable_declaration',5,'p_variable_declaration','ExpressionLanguageParser.py',218),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParser.py',219),
  ('variable_declaration -> ID COMMA list_of_identifiers ASSIGN expression COMMA list_of_values','variable_declaration',7,'p_variable_declaration','ExpressionLanguageParser.py',220),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParser.py',223),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParser.py',224),
  ('list_of_values -> expression','list_of_values',1,'p_list_of_values','ExpressionLanguageParser.py',227),
  ('list_of_values -> expression COMMA list_of_values','list_of_values',3,'p_list_of_values','ExpressionLanguageParser.py',228),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParser.py',234),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParser.py',235),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',238),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',239),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParser.py',242),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParser.py',243),
  ('statements -> statements_list','statements',1,'p_statements','ExpressionLanguageParser.py',248),
  ('statements_list -> statements_list statements_base','statements_list',2,'p_statements_list','ExpressionLanguageParser.py',251),
  ('statements_list -> empty','statements_list',1,'p_statements_list','ExpressionLanguageParser.py',252),
  ('statements_base -> statement NEWLINE','statements_base',2,'p_statements_base','ExpressionLanguageParser.py',255),
  ('statements_base -> statement SEMICOLON','statements_base',2,'p_statements_base','ExpressionLanguageParser.py',256),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParser.py',258),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParser.py',259),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParser.py',260),
  ('statement -> function_call','statement',1,'p_statement','ExpressionLanguageParser.py',261),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',264),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',265),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',266),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',267),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',268),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',269),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',272),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',273),
  ('if_statement -> IF if_condition statements opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParser.py',276),
  ('unless_statement -> UNLESS if_condition statements opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParser.py',279),
  ('if_condition -> expression','if_condition',1,'p_if_condition','ExpressionLanguageParser.py',282),
  ('if_condition -> expression LBRACE statements RBRACE','if_condition',4,'p_if_condition','ExpressionLanguageParser.py',283),
  ('opt_elsif -> elsif_list','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',286),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',287),
  ('elsif_list -> elsif_list elsif','elsif_list',2,'p_elsif_list','ExpressionLanguageParser.py',290),
  ('elsif_list -> elsif','elsif_list',1,'p_elsif_list','ExpressionLanguageParser.py',291),
  ('elsif -> ELSIF if_condition statements','elsif',3,'p_elsif','ExpressionLanguageParser.py',294),
  ('opt_else -> ELSE statements','opt_else',2,'p_opt_else','ExpressionLanguageParser.py',297),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParser.py',298),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',301),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',302),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',303),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',304),
  ('while -> WHILE expression statements','while',3,'p_while','ExpressionLanguageParser.py',307),
  ('until -> UNTIL expression statements','until',3,'p_until','ExpressionLanguageParser.py',310),
  ('loop -> LOOP statements','loop',2,'p_loop','ExpressionLanguageParser.py',313),
  ('iterator -> expression DOT MULTI statements','iterator',4,'p_iterator','ExpressionLanguageParser.py',317),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements END','iterator',9,'p_iterator','ExpressionLanguageParser.py',318),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements','iterator',9,'p_iterator','ExpressionLanguageParser.py',319),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParser.py',322),
  ('when_list -> WHEN expression statements','when_list',3,'p_when_list','ExpressionLanguageParser.py',325),
  ('when_list -> when_list WHEN expression statements','when_list',4,'p_when_list','ExpressionLanguageParser.py',326),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',329),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParser.py',332),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParser.py',335),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',338),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',339),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParser.py',343),
  ('assignment_expression -> assignment_target ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',346),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',347),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',348),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',349),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',350),
  ('assignment_expression -> ternary_expression','assignment_expression',1,'p_assignment_expression','ExpressionLanguageParser.py',351),
  ('assignment_target -> ID','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',354),
  ('assignment_target -> ID LBRACKET expression RBRACKET','assignment_target',4,'p_assignment_target','ExpressionLanguageParser.py',355),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',356),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParser.py',357),
  ('ternary_expression -> range_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParser.py',360),
  ('ternary_expression -> range_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParser.py',361),
  ('range_expression -> logical_or_expression DOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',364),
  ('range_expression -> logical_or_expression DOTDOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',365),
  ('range_expression -> logical_or_expression','range_expression',1,'p_range_expression','ExpressionLanguageParser.py',366),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParser.py',369),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParser.py',370),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParser.py',373),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParser.py',374),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParser.py',377),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',378),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',379),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',380),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParser.py',384),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',385),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',386),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',387),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',388),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParser.py',391),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',392),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',393),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParser.py',396),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',397),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',398),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',399),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParser.py',402),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParser.py',403),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',406),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',407),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',408),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',409),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParser.py',410),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','ExpressionLanguageParser.py',414),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',415),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',416),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',417),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParser.py',420),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParser.py',424),
]
