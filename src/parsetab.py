
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANLESS_EQUALGREATER_THANGREATER_EQUALleftEQUALNOT_EQUALTIPO_EQUALleftPLUSMINUSleftMULTIDIVIDEMODULOrightPOTENCIACAOrightUMINUSUPLUSNOTTILDEAND AS ASSIGN ASTERISK AT BEGIN BINNUMBER BOOL BREAK CASE CHAR CLASS CLASSVAR CLASS_VAR COLON COMMA CONSTANT DEF DEFINE_BLOCO DIVIDE DIVIDE_ASSIGN DO DOLAR_SIGN DOT DOTDOT DOTDOTDOT EACH ELSE ELSIF END ENUM EQUAL EXCLAMATION FALSE FLOAT FLOAT32 FLOAT64 FLOATNUMBER GLOBALVAR GREATER_EQUAL GREATER_THAN HEXNUMBER ID IF IN INCLUDE INSTANCEVAR INSTANCE_VAR INT INT128 INT16 INT32 INT64 INT8 INTERP_END INTERP_START INTNUMBER LBRACE LBRACKET LESS_EQUAL LESS_THAN LITERAL LOOP LPAREN MACRO MINUS MINUS_ASSIGN MODULE MODULO MODULO_ASSIGN MULTI MULTI_ASSIGN NEWLINE NEXT NIL NOT NOT_EQUAL OCTNUMBER OF OR OR_ASSIGN OUT PASSA_ARGUMENTO PIPE PLUS PLUS_ASSIGN POTENCIACAO POTENCIACAO_ASSIGN PRIVATE PROTECTED QMARK RBRACE RBRACKET REQUIRE RETURN RPAREN SAFE_CALL SCOPE SELECT SEMICOLON SHIFT_LEFT SHIFT_RIGHT SIZEOF STRING STRUCT SYMBOL TCOLON THEN TILDE TIPO_EQUAL TRUE TYPE TYPEOF UINT128 UINT16 UINT32 UINT64 UINT8 UNDERSCORE UNINITIALIZED UNION UNLESS UNTIL VAR_GLOBAL WHEN WHILE YIELDprogram  :   require_list constant_list module_list function_list\n|   require_list constant_list module_list\n|   require_list constant_list function_list\n|   require_list module_list function_list\n|   constant_list module_list function_list\n|   require_list constant_list\n|   require_list module_list\n|   constant_list module_list\n|   require_list function_list\n|   constant_list function_list\n|   module_list function_list\n|   require_list\n|   constant_list\n|   module_list\n|   function_listprogram : statementsrequire_list :   require require_list\n|   requirerequire  :   REQUIRE STRINGconstant_list    :   constant constant_list\n|   constantconstant :   CONSTANT ASSIGN expressionmodule_list  :   module module_list\n|   modulemodule   :   MODULE ID statements ENDfunction_list    :   function \n|   function function_listfunction :   DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END\n|   DEF ID opt_return_type NEWLINE statements ENDopt_argument_list    :   argument_list\n|   emptyargument_list    :   argument\n|   argument COMMA argument_listargument :   ID\n|   ID COLON types\n|   ID ASSIGN expression\n|   ID COLON types ASSIGN expressionopt_return_type  :   COLON types\n|   emptytypes    :   STRING\n|   CHAR\n|   NIL\n|   integer\n|   float\n|   booleaninteger  :   INT\n|   INT8\n|   INT16\n|   INT32\n|   INT64\n|   INT128\n|   UINT8\n|   UINT16\n|   UINT32\n|   UINT64\n|   UINT128float    :   FLOAT\n|   FLOAT32\n|   FLOAT64boolean  :   BOOLliteral  :   INTNUMBER\n|   FLOATNUMBER\n|   STRING\n|   CHAR\n|   TRUE\n|   FALSEvariable_declaration :   list_of_identifiers COLON types ASSIGN expression_list1\n|   list_of_identifiers ASSIGN expression_list1list_of_identifiers  :   ID\n|   ID COMMA list_of_identifiersexpression_list1 :   expression\n|   expression COMMA expression_list1function_call    :   ID LPAREN expression_list RPAREN\n|   ID LPAREN RPARENopt_expression_list  :   expression_list\n|   emptyexpression_list  :   expression\n|   expression_list COMMA expressionstatements : statements_liststatements_list : statement NEWLINE statements_list\n| statementopt_statements : statements_list\n| emptystatement    :   expression\n|   control_structure\n|   variable_declaration\n|   function_callcontrol_structure    :   conditional\n|   loop_structure\n|   case_structure\n|   return_statement\n|   break_statement\n|   next_statementconditional  :   if_statement\n|   unless_statementif_statement : IF if_condition statements opt_elsif opt_else ENDunless_statement : UNLESS if_condition statements opt_else ENDif_condition : expression\n| expression LBRACE statements RBRACEopt_elsif : elsif_list\n| emptyelsif_list : elsif_list elsif\n| elsifelsif : ELSIF if_condition statementsopt_else : ELSE statements\n| emptyloop_structure   :   while\n|   until\n|   loop\n|   iteratorwhile    :   WHILE expression statementsuntil    :   UNTIL expression statementsloop :   LOOP DO statements END\n|   LOOP LBRACE statements RBRACEiterator :   expression DOT MULTI statements\n|   expression DOT EACH DO PIPE ID PIPE statements END\n|   expression DOT EACH LBRACE PIPE ID PIPE RBRACE statementscase_structure   :   CASE expression when_list opt_else ENDwhen_list    :   WHEN expression statements\n|   when_list WHEN expression statementsreturn_statement :   RETURN opt_expressionbreak_statement  :   BREAK opt_expressionnext_statement   :   NEXT opt_expressionopt_expression   :   expression\n|   emptyexpression   :   assignment_expressionassignment_expression    :   assignment_target PLUS_ASSIGN expression\n|   assignment_target MINUS_ASSIGN expression\n|   assignment_target MULTI_ASSIGN expression\n|   assignment_target DIVIDE_ASSIGN expression\n|   ternary_expressionassignment_target    :   ID\n|   UNDERSCORE\n|   ASTERISK assignment_targetternary_expression   :   range_expression QMARK expression TCOLON expression\n|   range_expressionrange_expression :   logical_or_expression DOTDOT logical_or_expression\n|   logical_or_expression DOTDOTDOT logical_or_expression\n|   logical_or_expressionlogical_or_expression    :   logical_and_expression\n|   logical_or_expression OR logical_and_expressionlogical_and_expression   :   equality_expression\n|   logical_and_expression AND equality_expressionequality_expression  :   relational_expression\n|   equality_expression EQUAL relational_expression\n|   equality_expression NOT_EQUAL relational_expression\n|   equality_expression TIPO_EQUAL relational_expressionrelational_expression    :   additive_expression\n|   relational_expression GREATER_THAN additive_expression\n|   relational_expression LESS_THAN additive_expression\n|   relational_expression GREATER_EQUAL additive_expression\n|   relational_expression LESS_EQUAL additive_expressionadditive_expression  :   multiplicative_expression\n|   additive_expression PLUS multiplicative_expression\n|   additive_expression MINUS multiplicative_expression multiplicative_expression    :   potenciacao_expression\n|   multiplicative_expression MULTI potenciacao_expression\n|   multiplicative_expression DIVIDE potenciacao_expression\n|   multiplicative_expression MODULO potenciacao_expressionpotenciacao_expression   :   unary_expression\n|   potenciacao_expression POTENCIACAO unary_expressionunary_expression :   PLUS unary_expression %prec UPLUS\n|   MINUS unary_expression %prec UMINUS\n|   EXCLAMATION unary_expression\n|   TILDE unary_expression\n|   primary_expressionprimary_expression   :   LPAREN expression RPAREN\n|   array_literal\n|   literal\n|   IDarray_literal    :   LBRACKET opt_expression_list RBRACKETempty :'
    
_lr_action_items = {'REQUIRE':([0,7,83,],[12,12,-19,]),'CONSTANT':([0,2,7,8,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,79,83,91,131,132,133,135,136,145,157,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,260,],[14,14,-18,14,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-17,-19,-170,-162,-170,-163,-164,-165,-22,-167,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-135,]),'MODULE':([0,2,3,7,8,9,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,73,79,80,83,91,131,132,133,135,136,145,157,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,220,260,],[16,16,16,-18,-21,16,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,16,-17,-20,-19,-170,-162,-170,-163,-164,-165,-22,-167,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-25,-135,]),'DEF':([0,2,3,4,7,8,9,10,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,73,74,76,79,80,81,83,91,131,132,133,135,136,141,145,157,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,220,260,272,283,],[18,18,18,18,-18,-21,-24,18,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,18,18,18,-17,-20,-23,-19,-170,-162,-170,-163,-164,-165,18,-22,-167,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-25,-135,-29,-28,]),'ID':([0,13,16,18,19,24,33,40,41,42,43,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,88,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,153,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,247,248,250,251,252,257,260,263,264,270,276,278,281,],[17,-63,86,89,91,-126,-131,91,91,91,91,106,-136,91,91,91,91,-139,-140,-142,-144,-148,-153,132,132,-156,-160,132,132,-166,-168,-169,91,-61,-62,-64,-65,-66,91,17,91,151,-170,17,91,91,91,91,91,91,17,-98,17,17,17,17,17,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-162,-170,-163,132,-164,-165,17,222,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,91,17,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,91,17,-38,91,91,91,17,17,91,91,266,267,91,-172,222,17,-135,17,-99,17,17,91,17,]),'CASE':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[40,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,40,-170,40,40,-98,40,40,40,40,40,-162,-170,-163,-164,-165,40,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,40,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,40,-38,40,40,-172,40,-135,40,-99,40,40,40,]),'RETURN':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[41,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,41,-170,41,41,-98,41,41,41,41,41,-162,-170,-163,-164,-165,41,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,41,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,41,-38,41,41,-172,41,-135,41,-99,41,41,41,]),'BREAK':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[42,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,42,-170,42,42,-98,42,42,42,42,42,-162,-170,-163,-164,-165,42,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,42,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,42,-38,42,42,-172,42,-135,42,-99,42,42,42,]),'NEXT':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[43,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,43,-170,43,43,-98,43,43,43,43,43,-162,-170,-163,-164,-165,43,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,43,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,43,-38,43,43,-172,43,-135,43,-99,43,43,43,]),'UNDERSCORE':([0,13,19,24,33,40,41,42,43,45,46,47,48,49,50,52,53,54,55,56,57,60,61,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[44,-63,44,-126,-131,44,44,44,44,44,-136,44,44,44,44,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,44,-61,-62,-64,-65,-66,44,44,44,-170,44,44,44,44,44,44,44,44,-98,44,44,44,44,44,-162,-170,-163,-164,-165,44,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,44,44,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,44,44,-38,44,44,44,44,44,44,44,44,-172,44,-135,44,-99,44,44,44,44,]),'ASTERISK':([0,13,19,24,33,40,41,42,43,45,46,47,48,49,50,52,53,54,55,56,57,60,61,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[45,-63,45,-126,-131,45,45,45,45,45,-136,45,45,45,45,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,45,-61,-62,-64,-65,-66,45,45,45,-170,45,45,45,45,45,45,45,45,-98,45,45,45,45,45,-162,-170,-163,-164,-165,45,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,45,45,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,45,45,-38,45,45,45,45,45,45,45,45,-172,45,-135,45,-99,45,45,45,45,]),'IF':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[47,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,47,-170,47,47,-98,47,47,47,47,47,-162,-170,-163,-164,-165,47,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,47,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,47,-38,47,47,-172,47,-135,47,-99,47,47,47,]),'UNLESS':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[48,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,48,-170,48,48,-98,48,48,48,48,48,-162,-170,-163,-164,-165,48,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,48,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,48,-38,48,48,-172,48,-135,48,-99,48,48,48,]),'WHILE':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[49,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,49,-170,49,49,-98,49,49,49,49,49,-162,-170,-163,-164,-165,49,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,49,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,49,-38,49,49,-172,49,-135,49,-99,49,49,49,]),'UNTIL':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[50,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,50,-170,50,50,-98,50,50,50,50,50,-162,-170,-163,-164,-165,50,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,50,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,50,-38,50,50,-172,50,-135,50,-99,50,50,50,]),'LOOP':([0,13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,86,91,92,108,109,110,111,112,113,114,131,132,133,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,228,233,235,251,257,260,263,264,270,276,281,],[51,-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,51,-170,51,51,-98,51,51,51,51,51,-162,-170,-163,-164,-165,51,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,51,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,51,-38,51,51,-172,51,-135,51,-99,51,51,51,]),'PLUS':([0,13,17,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[58,-63,-170,58,-126,-131,58,58,58,58,-136,58,58,58,58,-139,-140,-142,-144,126,-153,58,58,-156,-160,58,58,-166,-168,-169,58,-61,-62,-64,-65,-66,58,58,58,-170,58,58,58,58,58,58,58,58,-98,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-162,-170,-163,58,-164,-165,58,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,58,58,-137,-138,-141,-143,-145,-146,-147,126,126,126,126,-154,-155,-157,-158,-159,-161,-171,58,58,-38,58,58,58,58,58,58,58,58,-172,58,-135,58,-99,58,58,58,58,]),'MINUS':([0,13,17,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[59,-63,-170,59,-126,-131,59,59,59,59,-136,59,59,59,59,-139,-140,-142,-144,127,-153,59,59,-156,-160,59,59,-166,-168,-169,59,-61,-62,-64,-65,-66,59,59,59,-170,59,59,59,59,59,59,59,59,-98,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-162,-170,-163,59,-164,-165,59,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,59,59,-137,-138,-141,-143,-145,-146,-147,127,127,127,127,-154,-155,-157,-158,-159,-161,-171,59,59,-38,59,59,59,59,59,59,59,59,-172,59,-135,59,-99,59,59,59,59,]),'EXCLAMATION':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[62,-63,62,-126,-131,62,62,62,62,-136,62,62,62,62,-139,-140,-142,-144,-148,-153,62,62,-156,-160,62,62,-166,-168,-169,62,-61,-62,-64,-65,-66,62,62,62,-170,62,62,62,62,62,62,62,62,-98,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-162,-170,-163,62,-164,-165,62,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,62,62,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,62,62,-38,62,62,62,62,62,62,62,62,-172,62,-135,62,-99,62,62,62,62,]),'TILDE':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[63,-63,63,-126,-131,63,63,63,63,-136,63,63,63,63,-139,-140,-142,-144,-148,-153,63,63,-156,-160,63,63,-166,-168,-169,63,-61,-62,-64,-65,-66,63,63,63,-170,63,63,63,63,63,63,63,63,-98,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-162,-170,-163,63,-164,-165,63,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,63,63,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,63,63,-38,63,63,63,63,63,63,63,63,-172,63,-135,63,-99,63,63,63,63,]),'LPAREN':([0,13,17,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,89,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[19,-63,87,19,-126,-131,19,19,19,19,-136,19,19,19,19,-139,-140,-142,-144,-148,-153,19,19,-156,-160,19,19,-166,-168,-169,19,-61,-62,-64,-65,-66,19,19,19,153,-170,19,19,19,19,19,19,19,19,-98,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-162,-170,-163,19,-164,-165,19,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,19,19,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,19,19,-38,19,19,19,19,19,19,19,19,-172,19,-135,19,-99,19,19,19,19,]),'LBRACKET':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[67,-63,67,-126,-131,67,67,67,67,-136,67,67,67,67,-139,-140,-142,-144,-148,-153,67,67,-156,-160,67,67,-166,-168,-169,67,-61,-62,-64,-65,-66,67,67,67,-170,67,67,67,67,67,67,67,67,-98,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-162,-170,-163,67,-164,-165,67,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,67,67,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,67,67,-38,67,67,67,67,67,67,67,67,-172,67,-135,67,-99,67,67,67,67,]),'INTNUMBER':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[68,-63,68,-126,-131,68,68,68,68,-136,68,68,68,68,-139,-140,-142,-144,-148,-153,68,68,-156,-160,68,68,-166,-168,-169,68,-61,-62,-64,-65,-66,68,68,68,-170,68,68,68,68,68,68,68,68,-98,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-162,-170,-163,68,-164,-165,68,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,68,68,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,68,68,-38,68,68,68,68,68,68,68,68,-172,68,-135,68,-99,68,68,68,68,]),'FLOATNUMBER':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[69,-63,69,-126,-131,69,69,69,69,-136,69,69,69,69,-139,-140,-142,-144,-148,-153,69,69,-156,-160,69,69,-166,-168,-169,69,-61,-62,-64,-65,-66,69,69,69,-170,69,69,69,69,69,69,69,69,-98,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-162,-170,-163,69,-164,-165,69,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,69,69,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,69,69,-38,69,69,69,69,69,69,69,69,-172,69,-135,69,-99,69,69,69,69,]),'STRING':([0,12,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,93,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,155,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,249,250,251,257,260,263,264,270,276,278,281,],[13,83,-63,13,-126,-131,13,13,13,13,-136,13,13,13,13,-139,-140,-142,-144,-148,-153,13,13,-156,-160,13,13,-166,-168,-169,13,-61,-62,-64,-65,-66,13,13,13,-170,13,160,13,13,13,13,13,13,13,-98,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-162,-170,-163,13,-164,-165,13,160,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,13,13,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,13,13,-38,13,13,13,13,13,13,13,160,13,-172,13,-135,13,-99,13,13,13,13,]),'CHAR':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,93,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,155,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,249,250,251,257,260,263,264,270,276,278,281,],[70,-63,70,-126,-131,70,70,70,70,-136,70,70,70,70,-139,-140,-142,-144,-148,-153,70,70,-156,-160,70,70,-166,-168,-169,70,-61,-62,-64,-65,-66,70,70,70,-170,70,161,70,70,70,70,70,70,70,-98,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-162,-170,-163,70,-164,-165,70,161,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,70,70,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,70,70,-38,70,70,70,70,70,70,70,161,70,-172,70,-135,70,-99,70,70,70,70,]),'TRUE':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[71,-63,71,-126,-131,71,71,71,71,-136,71,71,71,71,-139,-140,-142,-144,-148,-153,71,71,-156,-160,71,71,-166,-168,-169,71,-61,-62,-64,-65,-66,71,71,71,-170,71,71,71,71,71,71,71,71,-98,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-162,-170,-163,71,-164,-165,71,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,71,71,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,71,71,-38,71,71,71,71,71,71,71,71,-172,71,-135,71,-99,71,71,71,71,]),'FALSE':([0,13,19,24,33,40,41,42,43,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,84,86,87,91,92,94,95,96,97,98,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,188,191,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,227,228,229,230,232,233,235,236,241,250,251,257,260,263,264,270,276,278,281,],[72,-63,72,-126,-131,72,72,72,72,-136,72,72,72,72,-139,-140,-142,-144,-148,-153,72,72,-156,-160,72,72,-166,-168,-169,72,-61,-62,-64,-65,-66,72,72,72,-170,72,72,72,72,72,72,72,72,-98,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-162,-170,-163,72,-164,-165,72,-39,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,72,72,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,72,72,-38,72,72,72,72,72,72,72,72,-172,72,-135,72,-99,72,72,72,72,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,15,17,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,100,101,102,103,104,131,132,133,135,136,141,142,143,144,145,150,157,158,181,182,183,184,185,186,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,220,221,244,245,254,255,256,260,265,272,274,283,284,285,],[0,-12,-13,-14,-15,-16,-18,-21,-24,-26,-79,-63,-84,-170,-81,-85,-86,-87,-126,-88,-89,-90,-91,-92,-93,-131,-94,-95,-107,-108,-109,-110,-172,-172,-172,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-6,-7,-9,-8,-10,-11,-17,-20,-23,-27,-19,-170,-121,-124,-125,-122,-123,-162,-170,-163,-164,-165,-2,-3,-4,-5,-22,-74,-167,-80,-68,-71,-127,-128,-129,-130,-111,-112,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-1,-115,-25,-73,-113,-114,-67,-72,-118,-135,-97,-29,-96,-28,-116,-117,]),'END':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,100,101,102,103,104,131,132,133,135,136,148,150,157,158,181,182,183,184,185,186,187,190,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,221,231,234,237,238,239,240,243,244,245,253,254,255,256,258,259,260,261,262,265,273,274,275,279,280,284,285,],[-79,-63,-84,-170,-81,-85,-86,-87,-126,-88,-89,-90,-91,-92,-93,-131,-94,-95,-107,-108,-109,-110,-172,-172,-172,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-121,-124,-125,-122,-123,-162,-170,-163,-164,-165,220,-74,-167,-80,-68,-71,-127,-128,-129,-130,-172,-172,-172,-111,-112,244,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-115,-73,256,-106,-172,-100,-101,-103,265,-113,-114,272,-67,-72,-118,-105,-119,-135,274,-102,-97,-120,-96,-104,283,284,-116,-117,]),'ELSIF':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,100,101,102,103,104,131,132,133,135,136,150,157,158,181,182,183,184,185,186,190,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,221,238,240,244,245,254,255,256,260,262,265,274,275,284,285,],[-79,-63,-84,-170,-81,-85,-86,-87,-126,-88,-89,-90,-91,-92,-93,-131,-94,-95,-107,-108,-109,-110,-172,-172,-172,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-121,-124,-125,-122,-123,-162,-170,-163,-164,-165,-74,-167,-80,-68,-71,-127,-128,-129,-130,241,-111,-112,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-115,-73,241,-103,-113,-114,-67,-72,-118,-135,-102,-97,-96,-104,-116,-117,]),'ELSE':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,100,101,102,103,104,131,132,133,135,136,150,157,158,181,182,183,184,185,186,187,190,192,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,221,237,238,239,240,244,245,254,255,256,259,260,262,265,273,274,275,284,285,],[-79,-63,-84,-170,-81,-85,-86,-87,-126,-88,-89,-90,-91,-92,-93,-131,-94,-95,-107,-108,-109,-110,-172,-172,-172,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-121,-124,-125,-122,-123,-162,-170,-163,-164,-165,-74,-167,-80,-68,-71,-127,-128,-129,-130,233,-172,233,-111,-112,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-115,-73,233,-100,-101,-103,-113,-114,-67,-72,-118,-119,-135,-102,-97,-120,-96,-104,-116,-117,]),'NEWLINE':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,89,91,100,101,102,103,104,131,132,133,135,136,150,154,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,221,228,244,245,254,255,256,260,265,274,284,285,],[-79,-63,-84,-170,92,-85,-86,-87,-126,-88,-89,-90,-91,-92,-93,-131,-94,-95,-107,-108,-109,-110,-172,-172,-172,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-172,-170,-121,-124,-125,-122,-123,-162,-170,-163,-164,-165,-74,227,-39,-167,-80,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-68,-71,-127,-128,-129,-130,-111,-112,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-115,-73,-38,-113,-114,-67,-72,-118,-135,-97,-96,-116,-117,]),'RBRACE':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,100,101,102,103,104,131,132,133,135,136,150,157,158,181,182,183,184,185,186,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,221,242,244,245,254,255,256,260,265,274,277,284,285,],[-79,-63,-84,-170,-81,-85,-86,-87,-126,-88,-89,-90,-91,-92,-93,-131,-94,-95,-107,-108,-109,-110,-172,-172,-172,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-121,-124,-125,-122,-123,-162,-170,-163,-164,-165,-74,-167,-80,-68,-71,-127,-128,-129,-130,-111,-112,245,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-115,-73,264,-113,-114,-67,-72,-118,-135,-97,-96,281,-116,-117,]),'WHEN':([11,13,15,17,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,99,100,101,102,103,104,131,132,133,135,136,150,157,158,181,182,183,184,185,186,187,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,221,244,245,254,255,256,259,260,265,273,274,284,285,],[-79,-63,-84,-170,-81,-85,-86,-87,-126,-88,-89,-90,-91,-92,-93,-131,-94,-95,-107,-108,-109,-110,-172,-172,-172,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,188,-121,-124,-125,-122,-123,-162,-170,-163,-164,-165,-74,-167,-80,-68,-71,-127,-128,-129,-130,232,-111,-112,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-115,-73,-113,-114,-67,-72,-118,-119,-135,-97,-120,-96,-116,-117,]),'POTENCIACAO':([13,17,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,210,211,212,213,214,],[-63,-170,134,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,134,134,134,-161,-171,]),'MULTI':([13,17,57,60,61,64,65,66,68,69,70,71,72,85,91,131,132,133,135,136,157,208,209,210,211,212,213,214,],[-63,-170,128,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,146,-170,-162,-170,-163,-164,-165,-167,128,128,-157,-158,-159,-161,-171,]),'DIVIDE':([13,17,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,208,209,210,211,212,213,214,],[-63,-170,129,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,129,129,-157,-158,-159,-161,-171,]),'MODULO':([13,17,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,208,209,210,211,212,213,214,],[-63,-170,130,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,130,130,-157,-158,-159,-161,-171,]),'GREATER_THAN':([13,17,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,122,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,122,122,122,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'LESS_THAN':([13,17,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,123,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,123,123,123,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'GREATER_EQUAL':([13,17,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,124,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,124,124,124,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'LESS_EQUAL':([13,17,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,125,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,125,125,125,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'EQUAL':([13,17,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,119,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,119,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'NOT_EQUAL':([13,17,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,120,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,120,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'TIPO_EQUAL':([13,17,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,121,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,121,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'AND':([13,17,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,118,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,118,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'DOTDOT':([13,17,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,115,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'DOTDOTDOT':([13,17,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,116,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'OR':([13,17,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,117,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,117,117,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'QMARK':([13,17,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,],[-63,-170,107,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,]),'DOT':([13,15,17,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,260,],[-63,85,-170,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-135,]),'RPAREN':([13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,87,90,91,131,132,133,135,136,140,149,153,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,222,223,224,225,226,246,260,268,269,271,282,],[-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,150,157,-170,-162,-170,-163,-164,-165,-77,221,-172,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-34,251,-30,-31,-32,-78,-135,-35,-36,-33,-37,]),'LBRACE':([13,24,33,46,51,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,109,131,132,133,135,136,147,157,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,260,],[-63,-126,-131,-136,114,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,191,-162,-170,-163,-164,-165,219,-167,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-135,]),'COMMA':([13,17,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,138,140,149,151,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,222,226,246,260,268,269,282,],[-63,88,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,215,-77,215,88,-167,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,230,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-34,252,-78,-135,-35,-36,-37,]),'RBRACKET':([13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,67,68,69,70,71,72,91,131,132,133,135,136,137,138,139,140,157,183,184,185,186,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,246,260,],[-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-172,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,214,-75,-76,-77,-167,-127,-128,-129,-130,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-78,-135,]),'TCOLON':([13,24,33,46,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,91,131,132,133,135,136,157,183,184,185,186,189,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,260,],[-63,-126,-131,-136,-139,-140,-142,-144,-148,-153,-156,-160,-166,-168,-169,-61,-62,-64,-65,-66,-170,-162,-170,-163,-164,-165,-167,-127,-128,-129,-130,236,-137,-138,-141,-143,-145,-146,-147,-149,-150,-151,-152,-154,-155,-157,-158,-159,-161,-171,-135,]),'ASSIGN':([14,17,31,151,152,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,222,268,],[84,-69,94,-69,-70,229,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,250,278,]),'COLON':([17,31,89,151,152,222,251,],[-69,93,155,-69,-70,249,155,]),'PLUS_ASSIGN':([17,32,44,91,105,106,],[-132,95,-133,-132,-134,-132,]),'MINUS_ASSIGN':([17,32,44,91,105,106,],[-132,96,-133,-132,-134,-132,]),'MULTI_ASSIGN':([17,32,44,91,105,106,],[-132,97,-133,-132,-134,-132,]),'DIVIDE_ASSIGN':([17,32,44,91,105,106,],[-132,98,-133,-132,-134,-132,]),'DO':([51,147,],[113,218,]),'EACH':([85,],[147,]),'NIL':([93,155,249,],[162,162,162,]),'INT':([93,155,249,],[166,166,166,]),'INT8':([93,155,249,],[167,167,167,]),'INT16':([93,155,249,],[168,168,168,]),'INT32':([93,155,249,],[169,169,169,]),'INT64':([93,155,249,],[170,170,170,]),'INT128':([93,155,249,],[171,171,171,]),'UINT8':([93,155,249,],[172,172,172,]),'UINT16':([93,155,249,],[173,173,173,]),'UINT32':([93,155,249,],[174,174,174,]),'UINT64':([93,155,249,],[175,175,175,]),'UINT128':([93,155,249,],[176,176,176,]),'FLOAT':([93,155,249,],[177,177,177,]),'FLOAT32':([93,155,249,],[178,178,178,]),'FLOAT64':([93,155,249,],[179,179,179,]),'BOOL':([93,155,249,],[180,180,180,]),'PIPE':([218,219,266,267,],[247,248,276,277,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'require_list':([0,7,],[2,79,]),'constant_list':([0,2,8,],[3,73,80,]),'module_list':([0,2,3,9,73,],[4,74,76,81,141,]),'function_list':([0,2,3,4,10,73,74,76,141,],[5,75,77,78,82,142,143,144,216,]),'statements':([0,86,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[6,148,190,192,193,194,195,196,217,242,253,258,259,273,275,279,280,285,]),'require':([0,7,],[7,7,]),'constant':([0,2,8,],[8,8,8,]),'module':([0,2,3,9,73,],[9,9,9,9,9,]),'function':([0,2,3,4,10,73,74,76,141,],[10,10,10,10,10,10,10,10,10,]),'statements_list':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[11,11,158,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[15,90,99,101,101,101,109,109,111,112,140,145,15,140,15,182,183,184,185,186,189,15,15,15,15,15,15,15,235,15,246,15,182,182,257,15,15,260,109,269,15,15,15,15,282,15,]),'statement':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'control_structure':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'variable_declaration':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'function_call':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'assignment_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'conditional':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'loop_structure':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'case_structure':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'return_statement':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'break_statement':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'next_statement':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'list_of_identifiers':([0,86,88,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[31,31,152,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'assignment_target':([0,19,40,41,42,43,45,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[32,32,32,32,32,32,105,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ternary_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'if_statement':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'unless_statement':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'while':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'until':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'loop':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'iterator':([0,86,92,108,110,111,112,113,114,146,191,227,233,235,257,263,270,276,281,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'range_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'logical_or_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,197,198,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'logical_and_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,199,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'equality_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,200,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'relational_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,201,202,203,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'additive_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,204,205,206,207,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'multiplicative_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,208,209,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'potenciacao_expression':([0,19,40,41,42,43,47,48,49,50,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,210,211,212,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'unary_expression':([0,19,40,41,42,43,47,48,49,50,58,59,62,63,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[61,61,61,61,61,61,61,61,61,61,131,133,135,136,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,213,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'primary_expression':([0,19,40,41,42,43,47,48,49,50,58,59,62,63,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'array_literal':([0,19,40,41,42,43,47,48,49,50,58,59,62,63,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'literal':([0,19,40,41,42,43,47,48,49,50,58,59,62,63,67,84,86,87,92,94,95,96,97,98,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,146,188,191,215,227,229,230,232,233,235,236,241,250,257,263,270,276,278,281,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'opt_expression':([41,42,43,],[100,103,104,]),'empty':([41,42,43,67,89,153,187,190,192,237,251,],[102,102,102,139,156,225,234,239,234,234,156,]),'if_condition':([47,48,241,],[108,110,263,]),'opt_expression_list':([67,],[137,]),'expression_list':([67,87,],[138,149,]),'opt_return_type':([89,251,],[154,270,]),'types':([93,155,249,],[159,228,268,]),'integer':([93,155,249,],[163,163,163,]),'float':([93,155,249,],[164,164,164,]),'boolean':([93,155,249,],[165,165,165,]),'expression_list1':([94,229,230,],[181,254,255,]),'when_list':([99,],[187,]),'opt_argument_list':([153,],[223,]),'argument_list':([153,252,],[224,271,]),'argument':([153,252,],[226,226,]),'opt_else':([187,192,237,],[231,243,261,]),'opt_elsif':([190,],[237,]),'elsif_list':([190,],[238,]),'elsif':([190,238,],[240,262,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> require_list constant_list module_list function_list','program',4,'p_program','ExpressionLanguageParser.py',30),
  ('program -> require_list constant_list module_list','program',3,'p_program','ExpressionLanguageParser.py',31),
  ('program -> require_list constant_list function_list','program',3,'p_program','ExpressionLanguageParser.py',32),
  ('program -> require_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',33),
  ('program -> constant_list module_list function_list','program',3,'p_program','ExpressionLanguageParser.py',34),
  ('program -> require_list constant_list','program',2,'p_program','ExpressionLanguageParser.py',35),
  ('program -> require_list module_list','program',2,'p_program','ExpressionLanguageParser.py',36),
  ('program -> constant_list module_list','program',2,'p_program','ExpressionLanguageParser.py',37),
  ('program -> require_list function_list','program',2,'p_program','ExpressionLanguageParser.py',38),
  ('program -> constant_list function_list','program',2,'p_program','ExpressionLanguageParser.py',39),
  ('program -> module_list function_list','program',2,'p_program','ExpressionLanguageParser.py',40),
  ('program -> require_list','program',1,'p_program','ExpressionLanguageParser.py',41),
  ('program -> constant_list','program',1,'p_program','ExpressionLanguageParser.py',42),
  ('program -> module_list','program',1,'p_program','ExpressionLanguageParser.py',43),
  ('program -> function_list','program',1,'p_program','ExpressionLanguageParser.py',44),
  ('program -> statements','program',1,'p_program_statements','ExpressionLanguageParser.py',91),
  ('require_list -> require require_list','require_list',2,'p_require_list','ExpressionLanguageParser.py',98),
  ('require_list -> require','require_list',1,'p_require_list','ExpressionLanguageParser.py',99),
  ('require -> REQUIRE STRING','require',2,'p_require','ExpressionLanguageParser.py',107),
  ('constant_list -> constant constant_list','constant_list',2,'p_constant_list','ExpressionLanguageParser.py',112),
  ('constant_list -> constant','constant_list',1,'p_constant_list','ExpressionLanguageParser.py',113),
  ('constant -> CONSTANT ASSIGN expression','constant',3,'p_constant','ExpressionLanguageParser.py',120),
  ('module_list -> module module_list','module_list',2,'p_module_list','ExpressionLanguageParser.py',126),
  ('module_list -> module','module_list',1,'p_module_list','ExpressionLanguageParser.py',127),
  ('module -> MODULE ID statements END','module',4,'p_module','ExpressionLanguageParser.py',134),
  ('function_list -> function','function_list',1,'p_function_list','ExpressionLanguageParser.py',140),
  ('function_list -> function function_list','function_list',2,'p_function_list','ExpressionLanguageParser.py',141),
  ('function -> DEF ID LPAREN opt_argument_list RPAREN opt_return_type statements END','function',8,'p_function','ExpressionLanguageParser.py',149),
  ('function -> DEF ID opt_return_type NEWLINE statements END','function',6,'p_function','ExpressionLanguageParser.py',150),
  ('opt_argument_list -> argument_list','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',158),
  ('opt_argument_list -> empty','opt_argument_list',1,'p_opt_argument_list','ExpressionLanguageParser.py',159),
  ('argument_list -> argument','argument_list',1,'p_argument_list','ExpressionLanguageParser.py',163),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','ExpressionLanguageParser.py',164),
  ('argument -> ID','argument',1,'p_argument','ExpressionLanguageParser.py',172),
  ('argument -> ID COLON types','argument',3,'p_argument','ExpressionLanguageParser.py',173),
  ('argument -> ID ASSIGN expression','argument',3,'p_argument','ExpressionLanguageParser.py',174),
  ('argument -> ID COLON types ASSIGN expression','argument',5,'p_argument','ExpressionLanguageParser.py',175),
  ('opt_return_type -> COLON types','opt_return_type',2,'p_opt_return_type','ExpressionLanguageParser.py',186),
  ('opt_return_type -> empty','opt_return_type',1,'p_opt_return_type','ExpressionLanguageParser.py',187),
  ('types -> STRING','types',1,'p_types','ExpressionLanguageParser.py',193),
  ('types -> CHAR','types',1,'p_types','ExpressionLanguageParser.py',194),
  ('types -> NIL','types',1,'p_types','ExpressionLanguageParser.py',195),
  ('types -> integer','types',1,'p_types','ExpressionLanguageParser.py',196),
  ('types -> float','types',1,'p_types','ExpressionLanguageParser.py',197),
  ('types -> boolean','types',1,'p_types','ExpressionLanguageParser.py',198),
  ('integer -> INT','integer',1,'p_integer','ExpressionLanguageParser.py',202),
  ('integer -> INT8','integer',1,'p_integer','ExpressionLanguageParser.py',203),
  ('integer -> INT16','integer',1,'p_integer','ExpressionLanguageParser.py',204),
  ('integer -> INT32','integer',1,'p_integer','ExpressionLanguageParser.py',205),
  ('integer -> INT64','integer',1,'p_integer','ExpressionLanguageParser.py',206),
  ('integer -> INT128','integer',1,'p_integer','ExpressionLanguageParser.py',207),
  ('integer -> UINT8','integer',1,'p_integer','ExpressionLanguageParser.py',208),
  ('integer -> UINT16','integer',1,'p_integer','ExpressionLanguageParser.py',209),
  ('integer -> UINT32','integer',1,'p_integer','ExpressionLanguageParser.py',210),
  ('integer -> UINT64','integer',1,'p_integer','ExpressionLanguageParser.py',211),
  ('integer -> UINT128','integer',1,'p_integer','ExpressionLanguageParser.py',212),
  ('float -> FLOAT','float',1,'p_float','ExpressionLanguageParser.py',216),
  ('float -> FLOAT32','float',1,'p_float','ExpressionLanguageParser.py',217),
  ('float -> FLOAT64','float',1,'p_float','ExpressionLanguageParser.py',218),
  ('boolean -> BOOL','boolean',1,'p_boolean','ExpressionLanguageParser.py',222),
  ('literal -> INTNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',226),
  ('literal -> FLOATNUMBER','literal',1,'p_literal','ExpressionLanguageParser.py',227),
  ('literal -> STRING','literal',1,'p_literal','ExpressionLanguageParser.py',228),
  ('literal -> CHAR','literal',1,'p_literal','ExpressionLanguageParser.py',229),
  ('literal -> TRUE','literal',1,'p_literal','ExpressionLanguageParser.py',230),
  ('literal -> FALSE','literal',1,'p_literal','ExpressionLanguageParser.py',231),
  ('variable_declaration -> list_of_identifiers COLON types ASSIGN expression_list1','variable_declaration',5,'p_variable_declaration','ExpressionLanguageParser.py',249),
  ('variable_declaration -> list_of_identifiers ASSIGN expression_list1','variable_declaration',3,'p_variable_declaration','ExpressionLanguageParser.py',250),
  ('list_of_identifiers -> ID','list_of_identifiers',1,'p_list_of_identifiers','ExpressionLanguageParser.py',257),
  ('list_of_identifiers -> ID COMMA list_of_identifiers','list_of_identifiers',3,'p_list_of_identifiers','ExpressionLanguageParser.py',258),
  ('expression_list1 -> expression','expression_list1',1,'p_expression_list1','ExpressionLanguageParser.py',265),
  ('expression_list1 -> expression COMMA expression_list1','expression_list1',3,'p_expression_list1','ExpressionLanguageParser.py',266),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','ExpressionLanguageParser.py',274),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','ExpressionLanguageParser.py',275),
  ('opt_expression_list -> expression_list','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',282),
  ('opt_expression_list -> empty','opt_expression_list',1,'p_opt_expression_list','ExpressionLanguageParser.py',283),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ExpressionLanguageParser.py',287),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ExpressionLanguageParser.py',288),
  ('statements -> statements_list','statements',1,'p_statements','ExpressionLanguageParser.py',296),
  ('statements_list -> statement NEWLINE statements_list','statements_list',3,'p_statements_list','ExpressionLanguageParser.py',300),
  ('statements_list -> statement','statements_list',1,'p_statements_list','ExpressionLanguageParser.py',301),
  ('opt_statements -> statements_list','opt_statements',1,'p_opt_statements','ExpressionLanguageParser.py',309),
  ('opt_statements -> empty','opt_statements',1,'p_opt_statements','ExpressionLanguageParser.py',310),
  ('statement -> expression','statement',1,'p_statement','ExpressionLanguageParser.py',318),
  ('statement -> control_structure','statement',1,'p_statement','ExpressionLanguageParser.py',319),
  ('statement -> variable_declaration','statement',1,'p_statement','ExpressionLanguageParser.py',320),
  ('statement -> function_call','statement',1,'p_statement','ExpressionLanguageParser.py',321),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',325),
  ('control_structure -> loop_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',326),
  ('control_structure -> case_structure','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',327),
  ('control_structure -> return_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',328),
  ('control_structure -> break_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',329),
  ('control_structure -> next_statement','control_structure',1,'p_control_structure','ExpressionLanguageParser.py',330),
  ('conditional -> if_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',334),
  ('conditional -> unless_statement','conditional',1,'p_conditional','ExpressionLanguageParser.py',335),
  ('if_statement -> IF if_condition statements opt_elsif opt_else END','if_statement',6,'p_if_statement','ExpressionLanguageParser.py',339),
  ('unless_statement -> UNLESS if_condition statements opt_else END','unless_statement',5,'p_unless_statement','ExpressionLanguageParser.py',343),
  ('if_condition -> expression','if_condition',1,'p_if_condition','ExpressionLanguageParser.py',347),
  ('if_condition -> expression LBRACE statements RBRACE','if_condition',4,'p_if_condition','ExpressionLanguageParser.py',348),
  ('opt_elsif -> elsif_list','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',355),
  ('opt_elsif -> empty','opt_elsif',1,'p_opt_elsif','ExpressionLanguageParser.py',356),
  ('elsif_list -> elsif_list elsif','elsif_list',2,'p_elsif_list','ExpressionLanguageParser.py',360),
  ('elsif_list -> elsif','elsif_list',1,'p_elsif_list','ExpressionLanguageParser.py',361),
  ('elsif -> ELSIF if_condition statements','elsif',3,'p_elsif','ExpressionLanguageParser.py',367),
  ('opt_else -> ELSE statements','opt_else',2,'p_opt_else','ExpressionLanguageParser.py',371),
  ('opt_else -> empty','opt_else',1,'p_opt_else','ExpressionLanguageParser.py',372),
  ('loop_structure -> while','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',376),
  ('loop_structure -> until','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',377),
  ('loop_structure -> loop','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',378),
  ('loop_structure -> iterator','loop_structure',1,'p_loop_structure','ExpressionLanguageParser.py',379),
  ('while -> WHILE expression statements','while',3,'p_while','ExpressionLanguageParser.py',383),
  ('until -> UNTIL expression statements','until',3,'p_until','ExpressionLanguageParser.py',387),
  ('loop -> LOOP DO statements END','loop',4,'p_loop','ExpressionLanguageParser.py',391),
  ('loop -> LOOP LBRACE statements RBRACE','loop',4,'p_loop','ExpressionLanguageParser.py',392),
  ('iterator -> expression DOT MULTI statements','iterator',4,'p_iterator','ExpressionLanguageParser.py',397),
  ('iterator -> expression DOT EACH DO PIPE ID PIPE statements END','iterator',9,'p_iterator','ExpressionLanguageParser.py',398),
  ('iterator -> expression DOT EACH LBRACE PIPE ID PIPE RBRACE statements','iterator',9,'p_iterator','ExpressionLanguageParser.py',399),
  ('case_structure -> CASE expression when_list opt_else END','case_structure',5,'p_case_structure','ExpressionLanguageParser.py',408),
  ('when_list -> WHEN expression statements','when_list',3,'p_when_list','ExpressionLanguageParser.py',412),
  ('when_list -> when_list WHEN expression statements','when_list',4,'p_when_list','ExpressionLanguageParser.py',413),
  ('return_statement -> RETURN opt_expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',420),
  ('break_statement -> BREAK opt_expression','break_statement',2,'p_break_statement','ExpressionLanguageParser.py',424),
  ('next_statement -> NEXT opt_expression','next_statement',2,'p_next_statement','ExpressionLanguageParser.py',428),
  ('opt_expression -> expression','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',432),
  ('opt_expression -> empty','opt_expression',1,'p_opt_expression','ExpressionLanguageParser.py',433),
  ('expression -> assignment_expression','expression',1,'p_expression','ExpressionLanguageParser.py',438),
  ('assignment_expression -> assignment_target PLUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',442),
  ('assignment_expression -> assignment_target MINUS_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',443),
  ('assignment_expression -> assignment_target MULTI_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',444),
  ('assignment_expression -> assignment_target DIVIDE_ASSIGN expression','assignment_expression',3,'p_assignment_expression','ExpressionLanguageParser.py',445),
  ('assignment_expression -> ternary_expression','assignment_expression',1,'p_assignment_expression','ExpressionLanguageParser.py',446),
  ('assignment_target -> ID','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',453),
  ('assignment_target -> UNDERSCORE','assignment_target',1,'p_assignment_target','ExpressionLanguageParser.py',454),
  ('assignment_target -> ASTERISK assignment_target','assignment_target',2,'p_assignment_target','ExpressionLanguageParser.py',455),
  ('ternary_expression -> range_expression QMARK expression TCOLON expression','ternary_expression',5,'p_ternary_expression','ExpressionLanguageParser.py',465),
  ('ternary_expression -> range_expression','ternary_expression',1,'p_ternary_expression','ExpressionLanguageParser.py',466),
  ('range_expression -> logical_or_expression DOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',473),
  ('range_expression -> logical_or_expression DOTDOTDOT logical_or_expression','range_expression',3,'p_range_expression','ExpressionLanguageParser.py',474),
  ('range_expression -> logical_or_expression','range_expression',1,'p_range_expression','ExpressionLanguageParser.py',475),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','ExpressionLanguageParser.py',482),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','ExpressionLanguageParser.py',483),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','ExpressionLanguageParser.py',490),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression','ExpressionLanguageParser.py',491),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','ExpressionLanguageParser.py',498),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',499),
  ('equality_expression -> equality_expression NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',500),
  ('equality_expression -> equality_expression TIPO_EQUAL relational_expression','equality_expression',3,'p_equality_expression','ExpressionLanguageParser.py',501),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','ExpressionLanguageParser.py',508),
  ('relational_expression -> relational_expression GREATER_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',509),
  ('relational_expression -> relational_expression LESS_THAN additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',510),
  ('relational_expression -> relational_expression GREATER_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',511),
  ('relational_expression -> relational_expression LESS_EQUAL additive_expression','relational_expression',3,'p_relational_expression','ExpressionLanguageParser.py',512),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','ExpressionLanguageParser.py',519),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',520),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','ExpressionLanguageParser.py',521),
  ('multiplicative_expression -> potenciacao_expression','multiplicative_expression',1,'p_multiplicative_expression','ExpressionLanguageParser.py',528),
  ('multiplicative_expression -> multiplicative_expression MULTI potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',529),
  ('multiplicative_expression -> multiplicative_expression DIVIDE potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',530),
  ('multiplicative_expression -> multiplicative_expression MODULO potenciacao_expression','multiplicative_expression',3,'p_multiplicative_expression','ExpressionLanguageParser.py',531),
  ('potenciacao_expression -> unary_expression','potenciacao_expression',1,'p_potenciacao_expression','ExpressionLanguageParser.py',538),
  ('potenciacao_expression -> potenciacao_expression POTENCIACAO unary_expression','potenciacao_expression',3,'p_potenciacao_expression','ExpressionLanguageParser.py',539),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',546),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',547),
  ('unary_expression -> EXCLAMATION unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',548),
  ('unary_expression -> TILDE unary_expression','unary_expression',2,'p_unary_expression','ExpressionLanguageParser.py',549),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','ExpressionLanguageParser.py',550),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','ExpressionLanguageParser.py',559),
  ('primary_expression -> array_literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',560),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',561),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','ExpressionLanguageParser.py',562),
  ('array_literal -> LBRACKET opt_expression_list RBRACKET','array_literal',3,'p_array_literal','ExpressionLanguageParser.py',572),
  ('empty -> <empty>','empty',0,'p_empty','ExpressionLanguageParser.py',577),
]
